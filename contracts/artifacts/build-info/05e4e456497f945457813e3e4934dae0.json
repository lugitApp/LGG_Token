{
	"id": "05e4e456497f945457813e3e4934dae0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LGG.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\ncontract LGGToken is ERC20, ERC20Burnable, AccessControl, Pausable, ReentrancyGuard {\r\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\r\n    \r\n    // Constants\r\n    uint256 private constant TOTAL_SUPPLY = 1_000_000_000 * 10**18; // 1 billion tokens\r\n    \r\n    // Fee configuration\r\n    uint256 public marketingFee = 2; // 2%\r\n    uint256 public liquidityFee = 3; // 3%\r\n    address public marketingWallet;\r\n    \r\n    // Trading limits\r\n    uint256 public maxTransactionAmount;\r\n    uint256 public maxWalletSize;\r\n    \r\n    // Mappings\r\n    mapping(address => bool) public isExcludedFromFee;\r\n    mapping(address => bool) public isBlacklisted;\r\n    \r\n    // Events\r\n    event MarketingWalletUpdated(address newWallet);\r\n    event FeesUpdated(uint256 marketingFee, uint256 liquidityFee);\r\n    event BlacklistUpdated(address indexed account, bool isBlacklisted);\r\n    event MaxLimitsUpdated(uint256 maxTx, uint256 maxWallet);\r\n\r\n    constructor(address _marketingWallet) ERC20(\"LugIt.co\", \"LGG\") {\r\n        require(_marketingWallet != address(0), \"Marketing wallet cannot be zero\");\r\n        \r\n        // Set up roles first\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _grantRole(ADMIN_ROLE, msg.sender);\r\n        \r\n        // Initialize core variables\r\n        marketingWallet = _marketingWallet;\r\n        maxTransactionAmount = TOTAL_SUPPLY / 100; // 1%\r\n        maxWalletSize = TOTAL_SUPPLY / 50;        // 2%\r\n        \r\n        // Set fee exclusions before minting\r\n        isExcludedFromFee[msg.sender] = true;\r\n        isExcludedFromFee[address(this)] = true;\r\n        isExcludedFromFee[_marketingWallet] = true;\r\n        \r\n        // Mint initial supply last\r\n        _mint(msg.sender, TOTAL_SUPPLY);\r\n    }\r\n    \r\n    function _update(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual override whenNotPaused {\r\n        // Check basic requirements\r\n        if (from == address(0) || to == address(0)) {\r\n            super._update(from, to, amount);\r\n            return;\r\n        }\r\n        \r\n        require(!isBlacklisted[from] && !isBlacklisted[to], \"Address is blacklisted\");\r\n        \r\n        if (!isExcludedFromFee[from] && !isExcludedFromFee[to]) {\r\n            require(amount <= maxTransactionAmount, \"Exceeds max transaction amount\");\r\n            require(balanceOf(to) + amount <= maxWalletSize, \"Exceeds max wallet size\");\r\n            \r\n            uint256 marketingTokens = (amount * marketingFee) / 100;\r\n            uint256 liquidityTokens = (amount * liquidityFee) / 100;\r\n            uint256 totalFee = marketingTokens + liquidityTokens;\r\n            \r\n            if (totalFee > 0) {\r\n                super._update(from, marketingWallet, marketingTokens);\r\n                super._update(from, address(this), liquidityTokens);\r\n                super._update(from, to, amount - totalFee);\r\n                return;\r\n            }\r\n        }\r\n        \r\n        super._update(from, to, amount);\r\n    }\r\n    \r\n    // Admin functions\r\n    function setMarketingWallet(address _marketingWallet) external onlyRole(ADMIN_ROLE) {\r\n        require(_marketingWallet != address(0), \"Marketing wallet cannot be zero\");\r\n        marketingWallet = _marketingWallet;\r\n        emit MarketingWalletUpdated(_marketingWallet);\r\n    }\r\n    \r\n    function setFees(uint256 _marketingFee, uint256 _liquidityFee) external onlyRole(ADMIN_ROLE) {\r\n        require(_marketingFee + _liquidityFee <= 10, \"Total fees cannot exceed 10%\");\r\n        marketingFee = _marketingFee;\r\n        liquidityFee = _liquidityFee;\r\n        emit FeesUpdated(_marketingFee, _liquidityFee);\r\n    }\r\n    \r\n    function setMaxLimits(uint256 _maxTxAmount, uint256 _maxWalletSize) external onlyRole(ADMIN_ROLE) {\r\n        require(_maxTxAmount >= TOTAL_SUPPLY / 1000, \"Max TX too low\");\r\n        require(_maxWalletSize >= TOTAL_SUPPLY / 1000, \"Max wallet too low\");\r\n        maxTransactionAmount = _maxTxAmount;\r\n        maxWalletSize = _maxWalletSize;\r\n        emit MaxLimitsUpdated(_maxTxAmount, _maxWalletSize);\r\n    }\r\n    \r\n    // Blacklist management\r\n    function setBlacklist(address account, bool blacklisted) external onlyRole(ADMIN_ROLE) {\r\n        isBlacklisted[account] = blacklisted;\r\n        emit BlacklistUpdated(account, blacklisted);\r\n    }\r\n    \r\n    // Fee exclusion management\r\n    function setFeeExclusion(address account, bool excluded) external onlyRole(ADMIN_ROLE) {\r\n        isExcludedFromFee[account] = excluded;\r\n    }\r\n    \r\n    // Emergency functions\r\n    function pause() external onlyRole(ADMIN_ROLE) {\r\n        _pause();\r\n    }\r\n    \r\n    function unpause() external onlyRole(ADMIN_ROLE) {\r\n        _unpause();\r\n    }\r\n    \r\n    // Required override\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        override(AccessControl)\r\n        returns (bool)\r\n    {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 533,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 634,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 711,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 717,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 719,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 721,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 723,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 711,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 717,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 719,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 721,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 723,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LGG.sol": {
				"LGGToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_marketingWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isBlacklisted",
									"type": "bool"
								}
							],
							"name": "BlacklistUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "marketingFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityFee",
									"type": "uint256"
								}
							],
							"name": "FeesUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newWallet",
									"type": "address"
								}
							],
							"name": "MarketingWalletUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxTx",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxWallet",
									"type": "uint256"
								}
							],
							"name": "MaxLimitsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isExcludedFromFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketingFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketingWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxTransactionAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxWalletSize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "blacklisted",
									"type": "bool"
								}
							],
							"name": "setBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "excluded",
									"type": "bool"
								}
							],
							"name": "setFeeExclusion",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_marketingFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_liquidityFee",
									"type": "uint256"
								}
							],
							"name": "setFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_marketingWallet",
									"type": "address"
								}
							],
							"name": "setMarketingWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_maxTxAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxWalletSize",
									"type": "uint256"
								}
							],
							"name": "setMaxLimits",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LGG.sol\":377:5311  contract LGGToken is ERC20, ERC20Burnable, AccessControl, Pausable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LGG.sol\":710:711  2 */\n  0x02\n    /* \"contracts/LGG.sol\":680:711  uint256 public marketingFee = 2 */\n  0x08\n  sstore\n    /* \"contracts/LGG.sol\":754:755  3 */\n  0x03\n    /* \"contracts/LGG.sol\":724:755  uint256 public liquidityFee = 3 */\n  0x09\n  sstore\n    /* \"contracts/LGG.sol\":1324:2122  constructor(address _marketingWallet) ERC20(\"LugIt.co\", \"LGG\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc0, 0x4c756749742e636f)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x4c4747)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_11\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x06\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  pop\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x07\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/LGG.sol\":1406:1436  _marketingWallet != address(0) */\n  dup2\n  and\n    /* \"contracts/LGG.sol\":1398:1472  require(_marketingWallet != address(0), \"Marketing wallet cannot be zero\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3152:3154   */\n  0x20\n    /* \"contracts/LGG.sol\":1398:1472  require(_marketingWallet != address(0), \"Marketing wallet cannot be zero\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3134:3155   */\n  mstore\n    /* \"#utility.yul\":3191:3193   */\n  0x1f\n    /* \"#utility.yul\":3171:3189   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3164:3194   */\n  mstore\n    /* \"#utility.yul\":3230:3263   */\n  0x4d61726b6574696e672077616c6c65742063616e6e6f74206265207a65726f00\n    /* \"#utility.yul\":3210:3228   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3203:3264   */\n  mstore\n    /* \"#utility.yul\":3281:3299   */\n  0x64\n  add\n    /* \"contracts/LGG.sol\":1398:1472  require(_marketingWallet != address(0), \"Marketing wallet cannot be zero\") */\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"contracts/LGG.sol\":1524:1566  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_18\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/LGG.sol\":1555:1565  msg.sender */\n  caller\n    /* \"contracts/LGG.sol\":1524:1534  _grantRole */\n  tag_19\n    /* \"contracts/LGG.sol\":1524:1566  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_18:\n  pop\n    /* \"contracts/LGG.sol\":1577:1611  _grantRole(ADMIN_ROLE, msg.sender) */\n  tag_20\n    /* \"contracts/LGG.sol\":505:528  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"contracts/LGG.sol\":1600:1610  msg.sender */\n  caller\n    /* \"contracts/LGG.sol\":1577:1587  _grantRole */\n  tag_19\n    /* \"contracts/LGG.sol\":1577:1611  _grantRole(ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_20:\n  pop\n    /* \"contracts/LGG.sol\":1670:1685  marketingWallet */\n  0x0a\n    /* \"contracts/LGG.sol\":1670:1704  marketingWallet = _marketingWallet */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/LGG.sol\":1738:1756  TOTAL_SUPPLY / 100 */\n  tag_21\n    /* \"contracts/LGG.sol\":1753:1756  100 */\n  0x64\n    /* \"contracts/LGG.sol\":599:621  1_000_000_000 * 10**18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"contracts/LGG.sol\":1738:1756  TOTAL_SUPPLY / 100 */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/LGG.sol\":1715:1735  maxTransactionAmount */\n  0x0b\n    /* \"contracts/LGG.sol\":1715:1756  maxTransactionAmount = TOTAL_SUPPLY / 100 */\n  sstore\n    /* \"contracts/LGG.sol\":1789:1806  TOTAL_SUPPLY / 50 */\n  tag_23\n    /* \"contracts/LGG.sol\":1804:1806  50 */\n  0x32\n    /* \"contracts/LGG.sol\":599:621  1_000_000_000 * 10**18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"contracts/LGG.sol\":1789:1806  TOTAL_SUPPLY / 50 */\n  tag_22\n  jump\t// in\ntag_23:\n    /* \"contracts/LGG.sol\":1773:1786  maxWalletSize */\n  0x0c\n    /* \"contracts/LGG.sol\":1773:1806  maxWalletSize = TOTAL_SUPPLY / 50 */\n  sstore\n    /* \"contracts/LGG.sol\":1904:1914  msg.sender */\n  caller\n    /* \"contracts/LGG.sol\":1886:1915  isExcludedFromFee[msg.sender] */\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"contracts/LGG.sol\":1886:1903  isExcludedFromFee */\n  0x0d\n    /* \"contracts/LGG.sol\":1886:1915  isExcludedFromFee[msg.sender] */\n  0x20\n  mstore\n  0x40\n  dup1\n  dup3\n  keccak256\n    /* \"contracts/LGG.sol\":1886:1922  isExcludedFromFee[msg.sender] = true */\n  dup1\n  sload\n    /* \"contracts/LGG.sol\":1918:1922  true */\n  0x01\n  not(0xff)\n    /* \"contracts/LGG.sol\":1886:1922  isExcludedFromFee[msg.sender] = true */\n  swap2\n  dup3\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/LGG.sol\":1959:1963  this */\n  address\n    /* \"contracts/LGG.sol\":1933:1965  isExcludedFromFee[address(this)] */\n  dup5\n  mstore\n  dup3\n  dup5\n  keccak256\n    /* \"contracts/LGG.sol\":1933:1972  isExcludedFromFee[address(this)] = true */\n  dup1\n  sload\n  dup3\n  and\n  dup4\n  or\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/LGG.sol\":1983:2018  isExcludedFromFee[_marketingWallet] */\n  dup7\n  and\n  dup5\n  mstore\n  swap2\n  swap1\n  swap3\n  keccak256\n    /* \"contracts/LGG.sol\":1983:2025  isExcludedFromFee[_marketingWallet] = true */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/LGG.sol\":2083:2114  _mint(msg.sender, TOTAL_SUPPLY) */\n  tag_24\n  swap1\n    /* \"contracts/LGG.sol\":599:621  1_000_000_000 * 10**18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"contracts/LGG.sol\":2083:2088  _mint */\n  tag_25\n    /* \"contracts/LGG.sol\":2083:2114  _mint(msg.sender, TOTAL_SUPPLY) */\n  jump\t// in\ntag_24:\n    /* \"contracts/LGG.sol\":1324:2122  constructor(address _marketingWallet) ERC20(\"LugIt.co\", \"LGG\") {... */\n  pop\n    /* \"contracts/LGG.sol\":377:5311  contract LGGToken is ERC20, ERC20Burnable, AccessControl, Pausable, ReentrancyGuard {... */\n  jump(tag_104)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  dup2\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n  dup4\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  dup7\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_31\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  jump(tag_33)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_30:\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_25:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3810:3861   */\n  mstore\n    /* \"#utility.yul\":3783:3801   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  tag_16\n    /* \"#utility.yul\":3664:3867   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_38\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  tag_39\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  jump\t// in\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/LGG.sol\":2134:3372  function _update(... */\ntag_39:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n  tag_43\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n  tag_44\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n  jump\t// in\ntag_43:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/LGG.sol\":2319:2337  from == address(0) */\n  dup4\n  and\n  iszero\n  dup1\n    /* \"contracts/LGG.sol\":2319:2357  from == address(0) || to == address(0) */\n  tag_46\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/LGG.sol\":2341:2357  to == address(0) */\n  dup3\n  and\n  iszero\n    /* \"contracts/LGG.sol\":2319:2357  from == address(0) || to == address(0) */\ntag_46:\n    /* \"contracts/LGG.sol\":2315:2438  if (from == address(0) || to == address(0)) {... */\n  iszero\n  tag_47\n  jumpi\n    /* \"contracts/LGG.sol\":2374:2405  super._update(from, to, amount) */\n  tag_48\n    /* \"contracts/LGG.sol\":2388:2392  from */\n  dup4\n    /* \"contracts/LGG.sol\":2394:2396  to */\n  dup4\n    /* \"contracts/LGG.sol\":2398:2404  amount */\n  dup4\n    /* \"contracts/LGG.sol\":2374:2387  super._update */\n  tag_49\n    /* \"contracts/LGG.sol\":2374:2405  super._update(from, to, amount) */\n  jump\t// in\ntag_48:\n    /* \"contracts/LGG.sol\":2134:3372  function _update(... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/LGG.sol\":2315:2438  if (from == address(0) || to == address(0)) {... */\ntag_47:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/LGG.sol\":2467:2486  isBlacklisted[from] */\n  dup4\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"contracts/LGG.sol\":2467:2480  isBlacklisted */\n  0x0e\n    /* \"contracts/LGG.sol\":2467:2486  isBlacklisted[from] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"contracts/LGG.sol\":2466:2486  !isBlacklisted[from] */\n  iszero\n    /* \"contracts/LGG.sol\":2466:2508  !isBlacklisted[from] && !isBlacklisted[to] */\n  dup1\n  iszero\n  tag_50\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/LGG.sol\":2491:2508  isBlacklisted[to] */\n  dup3\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"contracts/LGG.sol\":2491:2504  isBlacklisted */\n  0x0e\n    /* \"contracts/LGG.sol\":2491:2508  isBlacklisted[to] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"contracts/LGG.sol\":2490:2508  !isBlacklisted[to] */\n  iszero\n    /* \"contracts/LGG.sol\":2466:2508  !isBlacklisted[from] && !isBlacklisted[to] */\ntag_50:\n    /* \"contracts/LGG.sol\":2458:2535  require(!isBlacklisted[from] && !isBlacklisted[to], \"Address is blacklisted\") */\n  tag_51\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4074:4076   */\n  0x20\n    /* \"contracts/LGG.sol\":2458:2535  require(!isBlacklisted[from] && !isBlacklisted[to], \"Address is blacklisted\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4056:4077   */\n  mstore\n    /* \"#utility.yul\":4113:4115   */\n  0x16\n    /* \"#utility.yul\":4093:4111   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4086:4116   */\n  mstore\n    /* \"#utility.yul\":4152:4176   */\n  0x4164647265737320697320626c61636b6c697374656400000000000000000000\n    /* \"#utility.yul\":4132:4150   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4125:4177   */\n  mstore\n    /* \"#utility.yul\":4194:4212   */\n  0x64\n  add\n    /* \"contracts/LGG.sol\":2458:2535  require(!isBlacklisted[from] && !isBlacklisted[to], \"Address is blacklisted\") */\n  tag_16\n    /* \"#utility.yul\":3872:4218   */\n  jump\n    /* \"contracts/LGG.sol\":2458:2535  require(!isBlacklisted[from] && !isBlacklisted[to], \"Address is blacklisted\") */\ntag_51:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/LGG.sol\":2561:2584  isExcludedFromFee[from] */\n  dup4\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"contracts/LGG.sol\":2561:2578  isExcludedFromFee */\n  0x0d\n    /* \"contracts/LGG.sol\":2561:2584  isExcludedFromFee[from] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"contracts/LGG.sol\":2560:2584  !isExcludedFromFee[from] */\n  iszero\n    /* \"contracts/LGG.sol\":2560:2610  !isExcludedFromFee[from] && !isExcludedFromFee[to] */\n  dup1\n  iszero\n  tag_54\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/LGG.sol\":2589:2610  isExcludedFromFee[to] */\n  dup3\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"contracts/LGG.sol\":2589:2606  isExcludedFromFee */\n  0x0d\n    /* \"contracts/LGG.sol\":2589:2610  isExcludedFromFee[to] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"contracts/LGG.sol\":2588:2610  !isExcludedFromFee[to] */\n  iszero\n    /* \"contracts/LGG.sol\":2560:2610  !isExcludedFromFee[from] && !isExcludedFromFee[to] */\ntag_54:\n    /* \"contracts/LGG.sol\":2556:3313  if (!isExcludedFromFee[from] && !isExcludedFromFee[to]) {... */\n  iszero\n  tag_55\n  jumpi\n    /* \"contracts/LGG.sol\":2645:2665  maxTransactionAmount */\n  sload(0x0b)\n    /* \"contracts/LGG.sol\":2635:2641  amount */\n  dup2\n    /* \"contracts/LGG.sol\":2635:2665  amount <= maxTransactionAmount */\n  gt\n  iszero\n    /* \"contracts/LGG.sol\":2627:2700  require(amount <= maxTransactionAmount, \"Exceeds max transaction amount\") */\n  tag_56\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4425:4427   */\n  0x20\n    /* \"contracts/LGG.sol\":2627:2700  require(amount <= maxTransactionAmount, \"Exceeds max transaction amount\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4407:4428   */\n  mstore\n    /* \"#utility.yul\":4464:4466   */\n  0x1e\n    /* \"#utility.yul\":4444:4462   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4437:4467   */\n  mstore\n    /* \"#utility.yul\":4503:4535   */\n  0x45786365656473206d6178207472616e73616374696f6e20616d6f756e740000\n    /* \"#utility.yul\":4483:4501   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4476:4536   */\n  mstore\n    /* \"#utility.yul\":4553:4571   */\n  0x64\n  add\n    /* \"contracts/LGG.sol\":2627:2700  require(amount <= maxTransactionAmount, \"Exceeds max transaction amount\") */\n  tag_16\n    /* \"#utility.yul\":4223:4577   */\n  jump\n    /* \"contracts/LGG.sol\":2627:2700  require(amount <= maxTransactionAmount, \"Exceeds max transaction amount\") */\ntag_56:\n    /* \"contracts/LGG.sol\":2749:2762  maxWalletSize */\n  sload(0x0c)\n    /* \"contracts/LGG.sol\":2739:2745  amount */\n  dup2\n    /* \"contracts/LGG.sol\":2723:2736  balanceOf(to) */\n  tag_59\n    /* \"contracts/LGG.sol\":2733:2735  to */\n  dup5\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n  jump\n    /* \"contracts/LGG.sol\":2723:2736  balanceOf(to) */\ntag_59:\n    /* \"contracts/LGG.sol\":2723:2745  balanceOf(to) + amount */\n  tag_61\n  swap2\n  swap1\n  tag_62\n  jump\t// in\ntag_61:\n    /* \"contracts/LGG.sol\":2723:2762  balanceOf(to) + amount <= maxWalletSize */\n  gt\n  iszero\n    /* \"contracts/LGG.sol\":2715:2790  require(balanceOf(to) + amount <= maxWalletSize, \"Exceeds max wallet size\") */\n  tag_63\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4914:4916   */\n  0x20\n    /* \"contracts/LGG.sol\":2715:2790  require(balanceOf(to) + amount <= maxWalletSize, \"Exceeds max wallet size\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4896:4917   */\n  mstore\n    /* \"#utility.yul\":4953:4955   */\n  0x17\n    /* \"#utility.yul\":4933:4951   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4926:4956   */\n  mstore\n    /* \"#utility.yul\":4992:5017   */\n  0x45786365656473206d61782077616c6c65742073697a65000000000000000000\n    /* \"#utility.yul\":4972:4990   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4965:5018   */\n  mstore\n    /* \"#utility.yul\":5035:5053   */\n  0x64\n  add\n    /* \"contracts/LGG.sol\":2715:2790  require(balanceOf(to) + amount <= maxWalletSize, \"Exceeds max wallet size\") */\n  tag_16\n    /* \"#utility.yul\":4712:5059   */\n  jump\n    /* \"contracts/LGG.sol\":2715:2790  require(balanceOf(to) + amount <= maxWalletSize, \"Exceeds max wallet size\") */\ntag_63:\n    /* \"contracts/LGG.sol\":2819:2842  uint256 marketingTokens */\n  0x00\n    /* \"contracts/LGG.sol\":2871:2874  100 */\n  0x64\n    /* \"contracts/LGG.sol\":2855:2867  marketingFee */\n  sload(0x08)\n    /* \"contracts/LGG.sol\":2846:2852  amount */\n  dup4\n    /* \"contracts/LGG.sol\":2846:2867  amount * marketingFee */\n  tag_66\n  swap2\n  swap1\n  tag_67\n  jump\t// in\ntag_66:\n    /* \"contracts/LGG.sol\":2845:2874  (amount * marketingFee) / 100 */\n  tag_68\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_68:\n    /* \"contracts/LGG.sol\":2819:2874  uint256 marketingTokens = (amount * marketingFee) / 100 */\n  swap1\n  pop\n    /* \"contracts/LGG.sol\":2889:2912  uint256 liquidityTokens */\n  0x00\n    /* \"contracts/LGG.sol\":2941:2944  100 */\n  0x64\n    /* \"contracts/LGG.sol\":2925:2937  liquidityFee */\n  sload(0x09)\n    /* \"contracts/LGG.sol\":2916:2922  amount */\n  dup5\n    /* \"contracts/LGG.sol\":2916:2937  amount * liquidityFee */\n  tag_69\n  swap2\n  swap1\n  tag_67\n  jump\t// in\ntag_69:\n    /* \"contracts/LGG.sol\":2915:2944  (amount * liquidityFee) / 100 */\n  tag_70\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_70:\n    /* \"contracts/LGG.sol\":2889:2944  uint256 liquidityTokens = (amount * liquidityFee) / 100 */\n  swap1\n  pop\n    /* \"contracts/LGG.sol\":2959:2975  uint256 totalFee */\n  0x00\n    /* \"contracts/LGG.sol\":2978:3011  marketingTokens + liquidityTokens */\n  tag_71\n    /* \"contracts/LGG.sol\":2889:2944  uint256 liquidityTokens = (amount * liquidityFee) / 100 */\n  dup3\n    /* \"contracts/LGG.sol\":2978:2993  marketingTokens */\n  dup5\n    /* \"contracts/LGG.sol\":2978:3011  marketingTokens + liquidityTokens */\n  tag_62\n  jump\t// in\ntag_71:\n    /* \"contracts/LGG.sol\":2959:3011  uint256 totalFee = marketingTokens + liquidityTokens */\n  swap1\n  pop\n    /* \"contracts/LGG.sol\":3044:3056  totalFee > 0 */\n  dup1\n  iszero\n    /* \"contracts/LGG.sol\":3040:3302  if (totalFee > 0) {... */\n  tag_72\n  jumpi\n    /* \"contracts/LGG.sol\":3097:3112  marketingWallet */\n  sload(0x0a)\n    /* \"contracts/LGG.sol\":3077:3130  super._update(from, marketingWallet, marketingTokens) */\n  tag_73\n  swap1\n    /* \"contracts/LGG.sol\":3091:3095  from */\n  dup8\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/LGG.sol\":3097:3112  marketingWallet */\n  and\n    /* \"contracts/LGG.sol\":3114:3129  marketingTokens */\n  dup6\n    /* \"contracts/LGG.sol\":3077:3090  super._update */\n  tag_49\n    /* \"contracts/LGG.sol\":3077:3130  super._update(from, marketingWallet, marketingTokens) */\n  jump\t// in\ntag_73:\n    /* \"contracts/LGG.sol\":3149:3200  super._update(from, address(this), liquidityTokens) */\n  tag_74\n    /* \"contracts/LGG.sol\":3163:3167  from */\n  dup7\n    /* \"contracts/LGG.sol\":3177:3181  this */\n  address\n    /* \"contracts/LGG.sol\":3184:3199  liquidityTokens */\n  dup5\n    /* \"contracts/LGG.sol\":3149:3162  super._update */\n  tag_49\n    /* \"contracts/LGG.sol\":3149:3200  super._update(from, address(this), liquidityTokens) */\n  jump\t// in\ntag_74:\n    /* \"contracts/LGG.sol\":3219:3261  super._update(from, to, amount - totalFee) */\n  tag_75\n    /* \"contracts/LGG.sol\":3233:3237  from */\n  dup7\n    /* \"contracts/LGG.sol\":3239:3241  to */\n  dup7\n    /* \"contracts/LGG.sol\":3243:3260  amount - totalFee */\n  tag_76\n    /* \"contracts/LGG.sol\":3252:3260  totalFee */\n  dup5\n    /* \"contracts/LGG.sol\":3243:3249  amount */\n  dup9\n    /* \"contracts/LGG.sol\":3243:3260  amount - totalFee */\n  tag_77\n  jump\t// in\ntag_76:\n    /* \"contracts/LGG.sol\":3219:3232  super._update */\n  tag_49\n    /* \"contracts/LGG.sol\":3219:3261  super._update(from, to, amount - totalFee) */\n  jump\t// in\ntag_75:\n    /* \"contracts/LGG.sol\":3280:3287  return; */\n  pop\n  pop\n  pop\n    /* \"contracts/LGG.sol\":2134:3372  function _update(... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/LGG.sol\":3040:3302  if (totalFee > 0) {... */\ntag_72:\n    /* \"contracts/LGG.sol\":2612:3313  {... */\n  pop\n  pop\n  pop\n    /* \"contracts/LGG.sol\":2556:3313  if (!isExcludedFromFee[from] && !isExcludedFromFee[to]) {... */\ntag_55:\n    /* \"contracts/LGG.sol\":3333:3364  super._update(from, to, amount) */\n  tag_48\n    /* \"contracts/LGG.sol\":3347:3351  from */\n  dup4\n    /* \"contracts/LGG.sol\":3353:3355  to */\n  dup4\n    /* \"contracts/LGG.sol\":3357:3363  amount */\n  dup4\n    /* \"contracts/LGG.sol\":3333:3346  super._update */\n  tag_49\n    /* \"contracts/LGG.sol\":3333:3364  super._update(from, to, amount) */\n  jump\t// in\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\ntag_44:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n  and(0xff, sload(0x06))\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n  iszero\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n  tag_82\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5572:5574   */\n  0x20\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5554:5575   */\n  mstore\n    /* \"#utility.yul\":5611:5613   */\n  0x10\n    /* \"#utility.yul\":5591:5609   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5584:5614   */\n  mstore\n  shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n    /* \"#utility.yul\":5630:5648   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5623:5669   */\n  mstore\n    /* \"#utility.yul\":5686:5704   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n  tag_16\n    /* \"#utility.yul\":5370:5710   */\n  jump\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\ntag_82:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_49:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_86\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_87\n  swap2\n  swap1\n  tag_62\n  jump\t// in\ntag_87:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_88\n  swap1\n  pop\n  jump\ntag_86:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_89\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":5935:5967   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5917:5968   */\n  mstore\n    /* \"#utility.yul\":5984:6002   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5977:6011   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":6027:6045   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":6020:6054   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":5890:5908   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_16\n    /* \"#utility.yul\":5715:6060   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_89:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_88:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_92\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_93)\ntag_92:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_93:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_94\n  swap2\n    /* \"#utility.yul\":6211:6236   */\n  dup2\n  mstore\n    /* \"#utility.yul\":6199:6201   */\n  0x20\n    /* \"#utility.yul\":6184:6202   */\n  add\n  swap1\n    /* \"#utility.yul\":6065:6242   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\ntag_94:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  0x00\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_106:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_107\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  0x00\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_107:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:436   */\ntag_98:\n    /* \"#utility.yul\":370:380   */\n  0x4e487b71\n    /* \"#utility.yul\":365:368   */\n  0xe0\n    /* \"#utility.yul\":361:381   */\n  shl\n    /* \"#utility.yul\":358:359   */\n  0x00\n    /* \"#utility.yul\":351:382   */\n  mstore\n    /* \"#utility.yul\":401:405   */\n  0x41\n    /* \"#utility.yul\":398:399   */\n  0x04\n    /* \"#utility.yul\":391:406   */\n  mstore\n    /* \"#utility.yul\":425:429   */\n  0x24\n    /* \"#utility.yul\":422:423   */\n  0x00\n    /* \"#utility.yul\":415:430   */\n  revert\n    /* \"#utility.yul\":441:821   */\ntag_99:\n    /* \"#utility.yul\":520:521   */\n  0x01\n    /* \"#utility.yul\":516:528   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":563:575   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":584:645   */\n  tag_110\n  jumpi\n    /* \"#utility.yul\":638:642   */\n  0x7f\n    /* \"#utility.yul\":630:636   */\n  dup3\n    /* \"#utility.yul\":626:643   */\n  and\n    /* \"#utility.yul\":616:643   */\n  swap2\n  pop\n    /* \"#utility.yul\":584:645   */\ntag_110:\n    /* \"#utility.yul\":691:693   */\n  0x20\n    /* \"#utility.yul\":683:689   */\n  dup3\n    /* \"#utility.yul\":680:694   */\n  lt\n    /* \"#utility.yul\":660:678   */\n  dup2\n    /* \"#utility.yul\":657:695   */\n  sub\n    /* \"#utility.yul\":654:815   */\n  tag_111\n  jumpi\n    /* \"#utility.yul\":737:747   */\n  0x4e487b71\n    /* \"#utility.yul\":732:735   */\n  0xe0\n    /* \"#utility.yul\":728:748   */\n  shl\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":718:749   */\n  mstore\n    /* \"#utility.yul\":772:776   */\n  0x22\n    /* \"#utility.yul\":769:770   */\n  0x04\n    /* \"#utility.yul\":762:777   */\n  mstore\n    /* \"#utility.yul\":800:804   */\n  0x24\n    /* \"#utility.yul\":797:798   */\n  0x00\n    /* \"#utility.yul\":790:805   */\n  revert\n    /* \"#utility.yul\":654:815   */\ntag_111:\n  pop\n    /* \"#utility.yul\":441:821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":952:1470   */\ntag_101:\n    /* \"#utility.yul\":1054:1056   */\n  0x1f\n    /* \"#utility.yul\":1049:1052   */\n  dup3\n    /* \"#utility.yul\":1046:1057   */\n  gt\n    /* \"#utility.yul\":1043:1464   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1090:1095   */\n  dup1\n    /* \"#utility.yul\":1087:1088   */\n  0x00\n    /* \"#utility.yul\":1080:1096   */\n  mstore\n    /* \"#utility.yul\":1134:1138   */\n  0x20\n    /* \"#utility.yul\":1131:1132   */\n  0x00\n    /* \"#utility.yul\":1121:1139   */\n  keccak256\n    /* \"#utility.yul\":1204:1206   */\n  0x1f\n    /* \"#utility.yul\":1192:1202   */\n  dup5\n    /* \"#utility.yul\":1188:1207   */\n  add\n    /* \"#utility.yul\":1185:1186   */\n  0x05\n    /* \"#utility.yul\":1181:1208   */\n  shr\n    /* \"#utility.yul\":1175:1179   */\n  dup2\n    /* \"#utility.yul\":1171:1209   */\n  add\n    /* \"#utility.yul\":1240:1244   */\n  0x20\n    /* \"#utility.yul\":1228:1238   */\n  dup6\n    /* \"#utility.yul\":1225:1245   */\n  lt\n    /* \"#utility.yul\":1222:1269   */\n  iszero\n  tag_115\n  jumpi\n  pop\n    /* \"#utility.yul\":1263:1267   */\n  dup1\n    /* \"#utility.yul\":1222:1269   */\ntag_115:\n    /* \"#utility.yul\":1318:1320   */\n  0x1f\n    /* \"#utility.yul\":1313:1316   */\n  dup5\n    /* \"#utility.yul\":1309:1321   */\n  add\n    /* \"#utility.yul\":1306:1307   */\n  0x05\n    /* \"#utility.yul\":1302:1322   */\n  shr\n    /* \"#utility.yul\":1296:1300   */\n  dup3\n    /* \"#utility.yul\":1292:1323   */\n  add\n    /* \"#utility.yul\":1282:1323   */\n  swap2\n  pop\n    /* \"#utility.yul\":1373:1454   */\ntag_116:\n    /* \"#utility.yul\":1391:1393   */\n  dup2\n    /* \"#utility.yul\":1384:1389   */\n  dup2\n    /* \"#utility.yul\":1381:1394   */\n  lt\n    /* \"#utility.yul\":1373:1454   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1436:1452   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1417:1418   */\n  0x01\n    /* \"#utility.yul\":1406:1419   */\n  add\n    /* \"#utility.yul\":1373:1454   */\n  jump(tag_116)\ntag_118:\n    /* \"#utility.yul\":1377:1380   */\n  pop\n  pop\n    /* \"#utility.yul\":952:1470   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1646:2945   */\ntag_10:\n    /* \"#utility.yul\":1766:1776   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1788:1818   */\n  dup2\n  gt\n    /* \"#utility.yul\":1785:1841   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":1821:1839   */\n  tag_122\n  tag_98\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":1850:1947   */\n  tag_123\n    /* \"#utility.yul\":1940:1946   */\n  dup2\n    /* \"#utility.yul\":1900:1938   */\n  tag_124\n    /* \"#utility.yul\":1932:1936   */\n  dup5\n    /* \"#utility.yul\":1926:1937   */\n  sload\n    /* \"#utility.yul\":1900:1938   */\n  tag_99\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":1894:1898   */\n  dup5\n    /* \"#utility.yul\":1850:1947   */\n  tag_101\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":2027:2029   */\n  0x1f\n    /* \"#utility.yul\":2016:2030   */\n  dup3\n  gt\n    /* \"#utility.yul\":2044:2045   */\n  0x01\n    /* \"#utility.yul\":2039:2688   */\n  dup2\n  eq\n  tag_126\n  jumpi\n    /* \"#utility.yul\":2732:2733   */\n  0x00\n    /* \"#utility.yul\":2749:2755   */\n  dup4\n    /* \"#utility.yul\":2746:2835   */\n  iszero\n  tag_127\n  jumpi\n  pop\n    /* \"#utility.yul\":2801:2820   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2795:2821   */\n  mload\n    /* \"#utility.yul\":2746:2835   */\ntag_127:\n  not(0x00)\n    /* \"#utility.yul\":1603:1604   */\n  0x03\n    /* \"#utility.yul\":1599:1610   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1595:1619   */\n  shr\n    /* \"#utility.yul\":1591:1620   */\n  not\n    /* \"#utility.yul\":1581:1621   */\n  and\n    /* \"#utility.yul\":1627:1628   */\n  0x01\n    /* \"#utility.yul\":1623:1634   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1578:1635   */\n  or\n    /* \"#utility.yul\":2848:2929   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2009:2939   */\n  jump(tag_118)\n    /* \"#utility.yul\":2039:2688   */\ntag_126:\n    /* \"#utility.yul\":899:900   */\n  0x00\n    /* \"#utility.yul\":892:906   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":936:940   */\n  0x20\n    /* \"#utility.yul\":923:941   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2075:2095   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2193:2415   */\ntag_130:\n    /* \"#utility.yul\":2207:2214   */\n  dup3\n    /* \"#utility.yul\":2204:2205   */\n  dup2\n    /* \"#utility.yul\":2201:2215   */\n  lt\n    /* \"#utility.yul\":2193:2415   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n    /* \"#utility.yul\":2268:2310   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2396:2400   */\n  0x20\n    /* \"#utility.yul\":2381:2401   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2349:2350   */\n  0x01\n    /* \"#utility.yul\":2337:2351   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2223:2235   */\n  add\n    /* \"#utility.yul\":2193:2415   */\n  jump(tag_130)\ntag_132:\n    /* \"#utility.yul\":2197:2200   */\n  pop\n    /* \"#utility.yul\":2443:2449   */\n  dup5\n    /* \"#utility.yul\":2434:2441   */\n  dup3\n    /* \"#utility.yul\":2431:2450   */\n  lt\n    /* \"#utility.yul\":2428:2629   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":2504:2523   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2498:2524   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2587:2588   */\n  0x03\n    /* \"#utility.yul\":2583:2597   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2599:2602   */\n  0xf8\n    /* \"#utility.yul\":2579:2603   */\n  and\n    /* \"#utility.yul\":2575:2612   */\n  shr\n    /* \"#utility.yul\":2571:2613   */\n  not\n    /* \"#utility.yul\":2556:2614   */\n  and\n    /* \"#utility.yul\":2541:2615   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2428:2629   */\ntag_133:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2675:2676   */\n  0x01\n    /* \"#utility.yul\":2659:2673   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2655:2677   */\n  add\n    /* \"#utility.yul\":2642:2678   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1646:2945   */\n  jump\t// out\n    /* \"#utility.yul\":3310:3437   */\ntag_103:\n    /* \"#utility.yul\":3371:3381   */\n  0x4e487b71\n    /* \"#utility.yul\":3366:3369   */\n  0xe0\n    /* \"#utility.yul\":3362:3382   */\n  shl\n    /* \"#utility.yul\":3359:3360   */\n  0x00\n    /* \"#utility.yul\":3352:3383   */\n  mstore\n    /* \"#utility.yul\":3402:3406   */\n  0x11\n    /* \"#utility.yul\":3399:3400   */\n  0x04\n    /* \"#utility.yul\":3392:3407   */\n  mstore\n    /* \"#utility.yul\":3426:3430   */\n  0x24\n    /* \"#utility.yul\":3423:3424   */\n  0x00\n    /* \"#utility.yul\":3416:3431   */\n  revert\n    /* \"#utility.yul\":3442:3659   */\ntag_22:\n    /* \"#utility.yul\":3482:3483   */\n  0x00\n    /* \"#utility.yul\":3508:3509   */\n  dup3\n    /* \"#utility.yul\":3498:3630   */\n  tag_137\n  jumpi\n    /* \"#utility.yul\":3552:3562   */\n  0x4e487b71\n    /* \"#utility.yul\":3547:3550   */\n  0xe0\n    /* \"#utility.yul\":3543:3563   */\n  shl\n    /* \"#utility.yul\":3540:3541   */\n  0x00\n    /* \"#utility.yul\":3533:3564   */\n  mstore\n    /* \"#utility.yul\":3587:3591   */\n  0x12\n    /* \"#utility.yul\":3584:3585   */\n  0x04\n    /* \"#utility.yul\":3577:3592   */\n  mstore\n    /* \"#utility.yul\":3615:3619   */\n  0x24\n    /* \"#utility.yul\":3612:3613   */\n  0x00\n    /* \"#utility.yul\":3605:3620   */\n  revert\n    /* \"#utility.yul\":3498:3630   */\ntag_137:\n  pop\n    /* \"#utility.yul\":3644:3653   */\n  div\n  swap1\n    /* \"#utility.yul\":3442:3659   */\n  jump\t// out\n    /* \"#utility.yul\":4582:4707   */\ntag_62:\n    /* \"#utility.yul\":4647:4656   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4668:4678   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4665:4701   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":4681:4699   */\n  tag_33\n  tag_103\n  jump\t// in\n    /* \"#utility.yul\":5064:5232   */\ntag_67:\n    /* \"#utility.yul\":5137:5146   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":5168:5177   */\n  dup2\n  iszero\n    /* \"#utility.yul\":5185:5200   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":5179:5201   */\n  dup5\n  eq\n    /* \"#utility.yul\":5165:5202   */\n  or\n    /* \"#utility.yul\":5155:5226   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":5206:5224   */\n  tag_33\n  tag_103\n  jump\t// in\n    /* \"#utility.yul\":5237:5365   */\ntag_77:\n    /* \"#utility.yul\":5304:5313   */\n  dup2\n  dup2\n  sub\n    /* \"#utility.yul\":5325:5336   */\n  dup2\n  dup2\n  gt\n    /* \"#utility.yul\":5322:5359   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":5339:5357   */\n  tag_33\n  tag_103\n  jump\t// in\n    /* \"#utility.yul\":6065:6242   */\ntag_104:\n    /* \"contracts/LGG.sol\":377:5311  contract LGGToken is ERC20, ERC20Burnable, AccessControl, Pausable, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LGG.sol\":377:5311  contract LGGToken is ERC20, ERC20Burnable, AccessControl, Pausable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6b67c4df\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xc8c8ebe4\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_36\n      jumpi\n      revert(0x00, 0x00)\n    tag_39:\n      dup1\n      0x95d89b41\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x98118cb4\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x9d913ef5\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_31\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      dup1\n      0x79cc6790\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8f3fa860\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_27\n      jumpi\n      revert(0x00, 0x00)\n    tag_40:\n      dup1\n      0x6b67c4df\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x75f0a874\n      eq\n      tag_23\n      jumpi\n      revert(0x00, 0x00)\n    tag_37:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x3f4ba83a\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5342acb4\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5d098b38\n      eq\n      tag_19\n      jumpi\n      revert(0x00, 0x00)\n    tag_42:\n      dup1\n      0x2f2ff15d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x30b94cd5\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_41:\n      dup1\n      0x153b0d1e\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x153b0d1e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_10\n      jumpi\n      revert(0x00, 0x00)\n    tag_43:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0b78f9c0\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/LGG.sol\":5107:5308  function supportsInterface(bytes4 interfaceId)... */\n    tag_3:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"contracts/LGG.sol\":5107:5308  function supportsInterface(bytes4 interfaceId)... */\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_44\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"contracts/LGG.sol\":3698:4021  function setFees(uint256 _marketingFee, uint256 _liquidityFee) external onlyRole(ADMIN_ROLE) {... */\n    tag_6:\n      tag_59\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/LGG.sol\":4481:4677  function setBlacklist(address account, bool blacklisted) external onlyRole(ADMIN_ROLE) {... */\n    tag_7:\n      tag_59\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_67:\n      mload(0x40)\n        /* \"#utility.yul\":2252:2277   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2240:2242   */\n      0x20\n        /* \"#utility.yul\":2225:2243   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      tag_48\n        /* \"#utility.yul\":2106:2283   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      tag_44\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_10:\n      tag_67\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_11:\n      tag_59\n      tag_83\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n        /* \"contracts/LGG.sol\":4722:4865  function setFeeExclusion(address account, bool excluded) external onlyRole(ADMIN_ROLE) {... */\n    tag_12:\n      tag_59\n      tag_87\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_13:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"#utility.yul\":3527:3563   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3515:3517   */\n      0x20\n        /* \"#utility.yul\":3500:3518   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      tag_48\n        /* \"#utility.yul\":3385:3569   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_14:\n      tag_59\n      tag_94\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"contracts/LGG.sol\":4991:5069  function unpause() external onlyRole(ADMIN_ROLE) {... */\n    tag_15:\n      tag_59\n      tag_97\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_16:\n      tag_59\n      tag_99\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n        /* \"contracts/LGG.sol\":934:983  mapping(address => bool) public isExcludedFromFee */\n    tag_17:\n      tag_44\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      mstore(0x20, 0x0d)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x06))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      jump(tag_44)\n        /* \"contracts/LGG.sol\":3408:3686  function setMarketingWallet(address _marketingWallet) external onlyRole(ADMIN_ROLE) {... */\n    tag_19:\n      tag_59\n      tag_111\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n        /* \"contracts/LGG.sol\":680:711  uint256 public marketingFee = 2 */\n    tag_20:\n      tag_67\n      sload(0x08)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_21:\n      tag_67\n      tag_117\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/LGG.sol\":468:528  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_22:\n      tag_67\n      mload(0x00)\n      codecopy(0x00, data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      dup2\n      jump\n        /* \"contracts/LGG.sol\":768:798  address public marketingWallet */\n    tag_23:\n      sload(0x0a)\n      tag_123\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_123:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4160:4192   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4142:4193   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4130:4132   */\n      0x20\n        /* \"#utility.yul\":4115:4133   */\n      add\n        /* \"contracts/LGG.sol\":768:798  address public marketingWallet */\n      tag_48\n        /* \"#utility.yul\":3996:4199   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_24:\n      tag_59\n      tag_128\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n        /* \"contracts/LGG.sol\":4905:4979  function pause() external onlyRole(ADMIN_ROLE) {... */\n    tag_25:\n      tag_59\n      tag_131\n      jump\t// in\n        /* \"contracts/LGG.sol\":876:904  uint256 public maxWalletSize */\n    tag_26:\n      tag_67\n      sload(0x0c)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_27:\n      tag_44\n      tag_136\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_136:\n      tag_137\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_28:\n      tag_50\n      tag_140\n      jump\t// in\n        /* \"contracts/LGG.sol\":724:755  uint256 public liquidityFee = 3 */\n    tag_29:\n      tag_67\n      sload(0x09)\n      dup2\n      jump\n        /* \"contracts/LGG.sol\":4033:4440  function setMaxLimits(uint256 _maxTxAmount, uint256 _maxWalletSize) external onlyRole(ADMIN_ROLE) {... */\n    tag_30:\n      tag_59\n      tag_146\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_31:\n      tag_67\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n      tag_44\n      tag_152\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_152:\n      tag_153\n      jump\t// in\n        /* \"contracts/LGG.sol\":834:869  uint256 public maxTransactionAmount */\n    tag_33:\n      tag_67\n      sload(0x0b)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_34:\n      tag_59\n      tag_159\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_35:\n      tag_67\n      tag_162\n      calldatasize\n      0x04\n      tag_163\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/LGG.sol\":990:1035  mapping(address => bool) public isBlacklisted */\n    tag_36:\n      tag_44\n      tag_167\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_167:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/LGG.sol\":5107:5308  function supportsInterface(bytes4 interfaceId)... */\n    tag_47:\n        /* \"contracts/LGG.sol\":5235:5239  bool */\n      0x00\n        /* \"contracts/LGG.sol\":5264:5300  super.supportsInterface(interfaceId) */\n      tag_171\n        /* \"contracts/LGG.sol\":5288:5299  interfaceId */\n      dup3\n        /* \"contracts/LGG.sol\":5264:5287  super.supportsInterface */\n      tag_172\n        /* \"contracts/LGG.sol\":5264:5300  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/LGG.sol\":5257:5300  return super.supportsInterface(interfaceId) */\n      swap3\n        /* \"contracts/LGG.sol\":5107:5308  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_176\n      swap1\n      tag_175\n      jump\t// in\n    tag_176:\n      dup1\n      iszero\n      tag_177\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_178\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_177)\n    tag_178:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_179:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_179\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_183\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_183:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LGG.sol\":3698:4021  function setFees(uint256 _marketingFee, uint256 _liquidityFee) external onlyRole(ADMIN_ROLE) {... */\n    tag_62:\n      mload(0x00)\n      codecopy(0x00, data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_186\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/LGG.sol\":3843:3845  10 */\n      0x0a\n        /* \"contracts/LGG.sol\":3810:3839  _marketingFee + _liquidityFee */\n      tag_189\n        /* \"contracts/LGG.sol\":3826:3839  _liquidityFee */\n      dup4\n        /* \"contracts/LGG.sol\":3810:3823  _marketingFee */\n      dup6\n        /* \"contracts/LGG.sol\":3810:3839  _marketingFee + _liquidityFee */\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"contracts/LGG.sol\":3810:3845  _marketingFee + _liquidityFee <= 10 */\n      gt\n      iszero\n        /* \"contracts/LGG.sol\":3802:3878  require(_marketingFee + _liquidityFee <= 10, \"Total fees cannot exceed 10%\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5318:5320   */\n      0x20\n        /* \"contracts/LGG.sol\":3802:3878  require(_marketingFee + _liquidityFee <= 10, \"Total fees cannot exceed 10%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5300:5321   */\n      mstore\n        /* \"#utility.yul\":5357:5359   */\n      0x1c\n        /* \"#utility.yul\":5337:5355   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5330:5360   */\n      mstore\n        /* \"#utility.yul\":5396:5426   */\n      0x546f74616c20666565732063616e6e6f74206578636565642031302500000000\n        /* \"#utility.yul\":5376:5394   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5369:5427   */\n      mstore\n        /* \"#utility.yul\":5444:5462   */\n      0x64\n      add\n        /* \"contracts/LGG.sol\":3802:3878  require(_marketingFee + _liquidityFee <= 10, \"Total fees cannot exceed 10%\") */\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/LGG.sol\":3889:3901  marketingFee */\n      0x08\n        /* \"contracts/LGG.sol\":3889:3917  marketingFee = _marketingFee */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/LGG.sol\":3928:3940  liquidityFee */\n      0x09\n        /* \"contracts/LGG.sol\":3928:3956  liquidityFee = _liquidityFee */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/LGG.sol\":3972:4013  FeesUpdated(_marketingFee, _liquidityFee) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5647:5672   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":5703:5705   */\n      0x20\n        /* \"#utility.yul\":5688:5706   */\n      dup2\n      add\n        /* \"#utility.yul\":5681:5715   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/LGG.sol\":3972:4013  FeesUpdated(_marketingFee, _liquidityFee) */\n      0x5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a1\n      swap2\n        /* \"#utility.yul\":5620:5638   */\n      add\n        /* \"contracts/LGG.sol\":3972:4013  FeesUpdated(_marketingFee, _liquidityFee) */\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/LGG.sol\":3698:4021  function setFees(uint256 _marketingFee, uint256 _liquidityFee) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LGG.sol\":4481:4677  function setBlacklist(address account, bool blacklisted) external onlyRole(ADMIN_ROLE) {... */\n    tag_66:\n      mload(0x00)\n      codecopy(0x00, data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_197\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_197:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LGG.sol\":4579:4601  isBlacklisted[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/LGG.sol\":4579:4592  isBlacklisted */\n      0x0e\n        /* \"contracts/LGG.sol\":4579:4601  isBlacklisted[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/LGG.sol\":4579:4615  isBlacklisted[account] = blacklisted */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/LGG.sol\":4631:4669  BlacklistUpdated(account, blacklisted) */\n      swap2\n      mload\n        /* \"#utility.yul\":445:486   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/LGG.sol\":4631:4669  BlacklistUpdated(account, blacklisted) */\n      0x6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac\n      swap2\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"contracts/LGG.sol\":4631:4669  BlacklistUpdated(account, blacklisted) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LGG.sol\":4481:4677  function setBlacklist(address account, bool blacklisted) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_205:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_210\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_212\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_213\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_212:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LGG.sol\":4722:4865  function setFeeExclusion(address account, bool excluded) external onlyRole(ADMIN_ROLE) {... */\n    tag_88:\n      mload(0x00)\n      codecopy(0x00, data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_215\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_215:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LGG.sol\":4820:4846  isExcludedFromFee[account] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LGG.sol\":4820:4837  isExcludedFromFee */\n      0x0d\n        /* \"contracts/LGG.sol\":4820:4846  isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/LGG.sol\":4820:4857  isExcludedFromFee[account] = excluded */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/LGG.sol\":4722:4865  function setFeeExclusion(address account, bool excluded) external onlyRole(ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_221\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_221:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LGG.sol\":4991:5069  function unpause() external onlyRole(ADMIN_ROLE) {... */\n    tag_97:\n      mload(0x00)\n      codecopy(0x00, data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_224\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_224:\n        /* \"contracts/LGG.sol\":5051:5061  _unpause() */\n      tag_226\n        /* \"contracts/LGG.sol\":5051:5059  _unpause */\n      tag_227\n        /* \"contracts/LGG.sol\":5051:5061  _unpause() */\n      jump\t// in\n    tag_226:\n        /* \"contracts/LGG.sol\":4991:5069  function unpause() external onlyRole(ADMIN_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_226\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n        /* \"contracts/LGG.sol\":3408:3686  function setMarketingWallet(address _marketingWallet) external onlyRole(ADMIN_ROLE) {... */\n    tag_112:\n      mload(0x00)\n      codecopy(0x00, data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_234\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_234:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LGG.sol\":3511:3541  _marketingWallet != address(0) */\n      dup3\n      and\n        /* \"contracts/LGG.sol\":3503:3577  require(_marketingWallet != address(0), \"Marketing wallet cannot be zero\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5928:5930   */\n      0x20\n        /* \"contracts/LGG.sol\":3503:3577  require(_marketingWallet != address(0), \"Marketing wallet cannot be zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5910:5931   */\n      mstore\n        /* \"#utility.yul\":5967:5969   */\n      0x1f\n        /* \"#utility.yul\":5947:5965   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5940:5970   */\n      mstore\n        /* \"#utility.yul\":6006:6039   */\n      0x4d61726b6574696e672077616c6c65742063616e6e6f74206265207a65726f00\n        /* \"#utility.yul\":5986:6004   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5979:6040   */\n      mstore\n        /* \"#utility.yul\":6057:6075   */\n      0x64\n      add\n        /* \"contracts/LGG.sol\":3503:3577  require(_marketingWallet != address(0), \"Marketing wallet cannot be zero\") */\n      tag_192\n        /* \"#utility.yul\":5726:6081   */\n      jump\n        /* \"contracts/LGG.sol\":3503:3577  require(_marketingWallet != address(0), \"Marketing wallet cannot be zero\") */\n    tag_236:\n        /* \"contracts/LGG.sol\":3588:3603  marketingWallet */\n      0x0a\n        /* \"contracts/LGG.sol\":3588:3622  marketingWallet = _marketingWallet */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/LGG.sol\":3638:3678  MarketingWalletUpdated(_marketingWallet) */\n      mload(0x40)\n        /* \"#utility.yul\":4142:4193   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LGG.sol\":3638:3678  MarketingWalletUpdated(_marketingWallet) */\n      0xbf86feedee5b30c30a8243bd21deebb704d141478d39b1be04fe5ee739f214e7\n      swap1\n        /* \"#utility.yul\":4130:4132   */\n      0x20\n        /* \"#utility.yul\":4115:4133   */\n      add\n        /* \"contracts/LGG.sol\":3638:3678  MarketingWalletUpdated(_marketingWallet) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/LGG.sol\":3408:3686  function setMarketingWallet(address _marketingWallet) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LGG.sol\":4905:4979  function pause() external onlyRole(ADMIN_ROLE) {... */\n    tag_131:\n      mload(0x00)\n      codecopy(0x00, data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_246\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_246:\n        /* \"contracts/LGG.sol\":4963:4971  _pause() */\n      tag_226\n        /* \"contracts/LGG.sol\":4963:4969  _pause */\n      tag_249\n        /* \"contracts/LGG.sol\":4963:4971  _pause() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n        /* \"contracts/LGG.sol\":4033:4440  function setMaxLimits(uint256 _maxTxAmount, uint256 _maxWalletSize) external onlyRole(ADMIN_ROLE) {... */\n    tag_147:\n      mload(0x00)\n      codecopy(0x00, data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_258\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_258:\n        /* \"contracts/LGG.sol\":4166:4185  TOTAL_SUPPLY / 1000 */\n      tag_260\n        /* \"contracts/LGG.sol\":4181:4185  1000 */\n      0x03e8\n        /* \"contracts/LGG.sol\":599:621  1_000_000_000 * 10**18 */\n      0x033b2e3c9fd0803ce8000000\n        /* \"contracts/LGG.sol\":4166:4185  TOTAL_SUPPLY / 1000 */\n      tag_261\n      jump\t// in\n    tag_260:\n        /* \"contracts/LGG.sol\":4150:4162  _maxTxAmount */\n      dup4\n        /* \"contracts/LGG.sol\":4150:4185  _maxTxAmount >= TOTAL_SUPPLY / 1000 */\n      lt\n      iszero\n        /* \"contracts/LGG.sol\":4142:4204  require(_maxTxAmount >= TOTAL_SUPPLY / 1000, \"Max TX too low\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6510:6512   */\n      0x20\n        /* \"contracts/LGG.sol\":4142:4204  require(_maxTxAmount >= TOTAL_SUPPLY / 1000, \"Max TX too low\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6492:6513   */\n      mstore\n        /* \"#utility.yul\":6549:6551   */\n      0x0e\n        /* \"#utility.yul\":6529:6547   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6522:6552   */\n      mstore\n      shl(0x90, 0x4d617820545820746f6f206c6f77)\n        /* \"#utility.yul\":6568:6586   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6561:6605   */\n      mstore\n        /* \"#utility.yul\":6622:6640   */\n      0x64\n      add\n        /* \"contracts/LGG.sol\":4142:4204  require(_maxTxAmount >= TOTAL_SUPPLY / 1000, \"Max TX too low\") */\n      tag_192\n        /* \"#utility.yul\":6308:6646   */\n      jump\n        /* \"contracts/LGG.sol\":4142:4204  require(_maxTxAmount >= TOTAL_SUPPLY / 1000, \"Max TX too low\") */\n    tag_262:\n        /* \"contracts/LGG.sol\":4241:4260  TOTAL_SUPPLY / 1000 */\n      tag_265\n        /* \"contracts/LGG.sol\":4256:4260  1000 */\n      0x03e8\n        /* \"contracts/LGG.sol\":599:621  1_000_000_000 * 10**18 */\n      0x033b2e3c9fd0803ce8000000\n        /* \"contracts/LGG.sol\":4241:4260  TOTAL_SUPPLY / 1000 */\n      tag_261\n      jump\t// in\n    tag_265:\n        /* \"contracts/LGG.sol\":4223:4237  _maxWalletSize */\n      dup3\n        /* \"contracts/LGG.sol\":4223:4260  _maxWalletSize >= TOTAL_SUPPLY / 1000 */\n      lt\n      iszero\n        /* \"contracts/LGG.sol\":4215:4283  require(_maxWalletSize >= TOTAL_SUPPLY / 1000, \"Max wallet too low\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6853:6855   */\n      0x20\n        /* \"contracts/LGG.sol\":4215:4283  require(_maxWalletSize >= TOTAL_SUPPLY / 1000, \"Max wallet too low\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6835:6856   */\n      mstore\n        /* \"#utility.yul\":6892:6894   */\n      0x12\n        /* \"#utility.yul\":6872:6890   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6865:6895   */\n      mstore\n      shl(0x70, 0x4d61782077616c6c657420746f6f206c6f77)\n        /* \"#utility.yul\":6911:6929   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6904:6952   */\n      mstore\n        /* \"#utility.yul\":6969:6987   */\n      0x64\n      add\n        /* \"contracts/LGG.sol\":4215:4283  require(_maxWalletSize >= TOTAL_SUPPLY / 1000, \"Max wallet too low\") */\n      tag_192\n        /* \"#utility.yul\":6651:6993   */\n      jump\n        /* \"contracts/LGG.sol\":4215:4283  require(_maxWalletSize >= TOTAL_SUPPLY / 1000, \"Max wallet too low\") */\n    tag_266:\n        /* \"contracts/LGG.sol\":4294:4314  maxTransactionAmount */\n      0x0b\n        /* \"contracts/LGG.sol\":4294:4329  maxTransactionAmount = _maxTxAmount */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/LGG.sol\":4340:4353  maxWalletSize */\n      0x0c\n        /* \"contracts/LGG.sol\":4340:4370  maxWalletSize = _maxWalletSize */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/LGG.sol\":4386:4432  MaxLimitsUpdated(_maxTxAmount, _maxWalletSize) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5647:5672   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":5703:5705   */\n      0x20\n        /* \"#utility.yul\":5688:5706   */\n      dup2\n      add\n        /* \"#utility.yul\":5681:5715   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/LGG.sol\":4386:4432  MaxLimitsUpdated(_maxTxAmount, _maxWalletSize) */\n      0xb6cf947475d47632612a3265c7bc83f5cfed7429546220bfb088c3634f91c229\n      swap2\n        /* \"#utility.yul\":5620:5638   */\n      add\n        /* \"contracts/LGG.sol\":4386:4432  MaxLimitsUpdated(_maxTxAmount, _maxWalletSize) */\n      tag_194\n        /* \"#utility.yul\":5473:5721   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_183\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_275\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_212\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_171\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_171\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_286\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_226\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_290\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7218:7250   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7200:7251   */\n      mstore\n        /* \"#utility.yul\":7267:7285   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7260:7294   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":7310:7328   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7303:7337   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":7173:7191   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_192\n        /* \"#utility.yul\":6998:7343   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_286\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_299\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4142:4193   */\n      mstore\n        /* \"#utility.yul\":4115:4133   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      tag_192\n        /* \"#utility.yul\":3996:4199   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_299:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4142:4193   */\n      mstore\n        /* \"#utility.yul\":4115:4133   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      tag_192\n        /* \"#utility.yul\":3996:4199   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_304\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_306\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_137\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_308\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n    tag_308:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      jump(tag_171)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_307:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      jump(tag_171)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_311\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_137\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      jump(tag_171)\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_316\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_317\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x06\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n    tag_319:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4160:4192   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4142:4193   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4130:4132   */\n      0x20\n        /* \"#utility.yul\":4115:4133   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_231:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4142:4193   */\n      mstore\n        /* \"#utility.yul\":4115:4133   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      tag_192\n        /* \"#utility.yul\":3996:4199   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_304\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_326\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_327\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x06\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_319\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_286:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_333\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4142:4193   */\n      mstore\n        /* \"#utility.yul\":4115:4133   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      tag_192\n        /* \"#utility.yul\":3996:4199   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_333:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_335\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4142:4193   */\n      mstore\n        /* \"#utility.yul\":4115:4133   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      tag_192\n        /* \"#utility.yul\":3996:4199   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_335:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_338\n      swap2\n        /* \"#utility.yul\":2252:2277   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2240:2242   */\n      0x20\n        /* \"#utility.yul\":2225:2243   */\n      add\n      swap1\n        /* \"#utility.yul\":2106:2283   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n    tag_338:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_340\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_137\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7540:7572   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7522:7573   */\n      mstore\n        /* \"#utility.yul\":7589:7607   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7582:7616   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":7495:7513   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      tag_192\n        /* \"#utility.yul\":7348:7622   */\n      jump\n        /* \"contracts/LGG.sol\":2134:3372  function _update(... */\n    tag_304:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_345\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_327\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_345:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LGG.sol\":2319:2337  from == address(0) */\n      dup4\n      and\n      iszero\n      dup1\n        /* \"contracts/LGG.sol\":2319:2357  from == address(0) || to == address(0) */\n      tag_347\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LGG.sol\":2341:2357  to == address(0) */\n      dup3\n      and\n      iszero\n        /* \"contracts/LGG.sol\":2319:2357  from == address(0) || to == address(0) */\n    tag_347:\n        /* \"contracts/LGG.sol\":2315:2438  if (from == address(0) || to == address(0)) {... */\n      iszero\n      tag_348\n      jumpi\n        /* \"contracts/LGG.sol\":2374:2405  super._update(from, to, amount) */\n      tag_221\n        /* \"contracts/LGG.sol\":2388:2392  from */\n      dup4\n        /* \"contracts/LGG.sol\":2394:2396  to */\n      dup4\n        /* \"contracts/LGG.sol\":2398:2404  amount */\n      dup4\n        /* \"contracts/LGG.sol\":2374:2387  super._update */\n      tag_350\n        /* \"contracts/LGG.sol\":2374:2405  super._update(from, to, amount) */\n      jump\t// in\n        /* \"contracts/LGG.sol\":2315:2438  if (from == address(0) || to == address(0)) {... */\n    tag_348:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LGG.sol\":2467:2486  isBlacklisted[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LGG.sol\":2467:2480  isBlacklisted */\n      0x0e\n        /* \"contracts/LGG.sol\":2467:2486  isBlacklisted[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/LGG.sol\":2466:2486  !isBlacklisted[from] */\n      iszero\n        /* \"contracts/LGG.sol\":2466:2508  !isBlacklisted[from] && !isBlacklisted[to] */\n      dup1\n      iszero\n      tag_351\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LGG.sol\":2491:2508  isBlacklisted[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LGG.sol\":2491:2504  isBlacklisted */\n      0x0e\n        /* \"contracts/LGG.sol\":2491:2508  isBlacklisted[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/LGG.sol\":2490:2508  !isBlacklisted[to] */\n      iszero\n        /* \"contracts/LGG.sol\":2466:2508  !isBlacklisted[from] && !isBlacklisted[to] */\n    tag_351:\n        /* \"contracts/LGG.sol\":2458:2535  require(!isBlacklisted[from] && !isBlacklisted[to], \"Address is blacklisted\") */\n      tag_352\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7829:7831   */\n      0x20\n        /* \"contracts/LGG.sol\":2458:2535  require(!isBlacklisted[from] && !isBlacklisted[to], \"Address is blacklisted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7811:7832   */\n      mstore\n        /* \"#utility.yul\":7868:7870   */\n      0x16\n        /* \"#utility.yul\":7848:7866   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7841:7871   */\n      mstore\n      shl(0x52, 0x1059191c995cdcc81a5cc8189b1858dadb1a5cdd1959)\n        /* \"#utility.yul\":7887:7905   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7880:7932   */\n      mstore\n        /* \"#utility.yul\":7949:7967   */\n      0x64\n      add\n        /* \"contracts/LGG.sol\":2458:2535  require(!isBlacklisted[from] && !isBlacklisted[to], \"Address is blacklisted\") */\n      tag_192\n        /* \"#utility.yul\":7627:7973   */\n      jump\n        /* \"contracts/LGG.sol\":2458:2535  require(!isBlacklisted[from] && !isBlacklisted[to], \"Address is blacklisted\") */\n    tag_352:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LGG.sol\":2561:2584  isExcludedFromFee[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LGG.sol\":2561:2578  isExcludedFromFee */\n      0x0d\n        /* \"contracts/LGG.sol\":2561:2584  isExcludedFromFee[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/LGG.sol\":2560:2584  !isExcludedFromFee[from] */\n      iszero\n        /* \"contracts/LGG.sol\":2560:2610  !isExcludedFromFee[from] && !isExcludedFromFee[to] */\n      dup1\n      iszero\n      tag_355\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LGG.sol\":2589:2610  isExcludedFromFee[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/LGG.sol\":2589:2606  isExcludedFromFee */\n      0x0d\n        /* \"contracts/LGG.sol\":2589:2610  isExcludedFromFee[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/LGG.sol\":2588:2610  !isExcludedFromFee[to] */\n      iszero\n        /* \"contracts/LGG.sol\":2560:2610  !isExcludedFromFee[from] && !isExcludedFromFee[to] */\n    tag_355:\n        /* \"contracts/LGG.sol\":2556:3313  if (!isExcludedFromFee[from] && !isExcludedFromFee[to]) {... */\n      iszero\n      tag_356\n      jumpi\n        /* \"contracts/LGG.sol\":2645:2665  maxTransactionAmount */\n      sload(0x0b)\n        /* \"contracts/LGG.sol\":2635:2641  amount */\n      dup2\n        /* \"contracts/LGG.sol\":2635:2665  amount <= maxTransactionAmount */\n      gt\n      iszero\n        /* \"contracts/LGG.sol\":2627:2700  require(amount <= maxTransactionAmount, \"Exceeds max transaction amount\") */\n      tag_357\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8180:8182   */\n      0x20\n        /* \"contracts/LGG.sol\":2627:2700  require(amount <= maxTransactionAmount, \"Exceeds max transaction amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8162:8183   */\n      mstore\n        /* \"#utility.yul\":8219:8221   */\n      0x1e\n        /* \"#utility.yul\":8199:8217   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8192:8222   */\n      mstore\n        /* \"#utility.yul\":8258:8290   */\n      0x45786365656473206d6178207472616e73616374696f6e20616d6f756e740000\n        /* \"#utility.yul\":8238:8256   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8231:8291   */\n      mstore\n        /* \"#utility.yul\":8308:8326   */\n      0x64\n      add\n        /* \"contracts/LGG.sol\":2627:2700  require(amount <= maxTransactionAmount, \"Exceeds max transaction amount\") */\n      tag_192\n        /* \"#utility.yul\":7978:8332   */\n      jump\n        /* \"contracts/LGG.sol\":2627:2700  require(amount <= maxTransactionAmount, \"Exceeds max transaction amount\") */\n    tag_357:\n        /* \"contracts/LGG.sol\":2749:2762  maxWalletSize */\n      sload(0x0c)\n        /* \"contracts/LGG.sol\":2739:2745  amount */\n      dup2\n        /* \"contracts/LGG.sol\":2723:2736  balanceOf(to) */\n      tag_360\n        /* \"contracts/LGG.sol\":2733:2735  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/LGG.sol\":2723:2736  balanceOf(to) */\n    tag_360:\n        /* \"contracts/LGG.sol\":2723:2745  balanceOf(to) + amount */\n      tag_361\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_361:\n        /* \"contracts/LGG.sol\":2723:2762  balanceOf(to) + amount <= maxWalletSize */\n      gt\n      iszero\n        /* \"contracts/LGG.sol\":2715:2790  require(balanceOf(to) + amount <= maxWalletSize, \"Exceeds max wallet size\") */\n      tag_362\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8539:8541   */\n      0x20\n        /* \"contracts/LGG.sol\":2715:2790  require(balanceOf(to) + amount <= maxWalletSize, \"Exceeds max wallet size\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8521:8542   */\n      mstore\n        /* \"#utility.yul\":8578:8580   */\n      0x17\n        /* \"#utility.yul\":8558:8576   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8551:8581   */\n      mstore\n        /* \"#utility.yul\":8617:8642   */\n      0x45786365656473206d61782077616c6c65742073697a65000000000000000000\n        /* \"#utility.yul\":8597:8615   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8590:8643   */\n      mstore\n        /* \"#utility.yul\":8660:8678   */\n      0x64\n      add\n        /* \"contracts/LGG.sol\":2715:2790  require(balanceOf(to) + amount <= maxWalletSize, \"Exceeds max wallet size\") */\n      tag_192\n        /* \"#utility.yul\":8337:8684   */\n      jump\n        /* \"contracts/LGG.sol\":2715:2790  require(balanceOf(to) + amount <= maxWalletSize, \"Exceeds max wallet size\") */\n    tag_362:\n        /* \"contracts/LGG.sol\":2819:2842  uint256 marketingTokens */\n      0x00\n        /* \"contracts/LGG.sol\":2871:2874  100 */\n      0x64\n        /* \"contracts/LGG.sol\":2855:2867  marketingFee */\n      sload(0x08)\n        /* \"contracts/LGG.sol\":2846:2852  amount */\n      dup4\n        /* \"contracts/LGG.sol\":2846:2867  amount * marketingFee */\n      tag_365\n      swap2\n      swap1\n      tag_366\n      jump\t// in\n    tag_365:\n        /* \"contracts/LGG.sol\":2845:2874  (amount * marketingFee) / 100 */\n      tag_367\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_367:\n        /* \"contracts/LGG.sol\":2819:2874  uint256 marketingTokens = (amount * marketingFee) / 100 */\n      swap1\n      pop\n        /* \"contracts/LGG.sol\":2889:2912  uint256 liquidityTokens */\n      0x00\n        /* \"contracts/LGG.sol\":2941:2944  100 */\n      0x64\n        /* \"contracts/LGG.sol\":2925:2937  liquidityFee */\n      sload(0x09)\n        /* \"contracts/LGG.sol\":2916:2922  amount */\n      dup5\n        /* \"contracts/LGG.sol\":2916:2937  amount * liquidityFee */\n      tag_368\n      swap2\n      swap1\n      tag_366\n      jump\t// in\n    tag_368:\n        /* \"contracts/LGG.sol\":2915:2944  (amount * liquidityFee) / 100 */\n      tag_369\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_369:\n        /* \"contracts/LGG.sol\":2889:2944  uint256 liquidityTokens = (amount * liquidityFee) / 100 */\n      swap1\n      pop\n        /* \"contracts/LGG.sol\":2959:2975  uint256 totalFee */\n      0x00\n        /* \"contracts/LGG.sol\":2978:3011  marketingTokens + liquidityTokens */\n      tag_370\n        /* \"contracts/LGG.sol\":2889:2944  uint256 liquidityTokens = (amount * liquidityFee) / 100 */\n      dup3\n        /* \"contracts/LGG.sol\":2978:2993  marketingTokens */\n      dup5\n        /* \"contracts/LGG.sol\":2978:3011  marketingTokens + liquidityTokens */\n      tag_190\n      jump\t// in\n    tag_370:\n        /* \"contracts/LGG.sol\":2959:3011  uint256 totalFee = marketingTokens + liquidityTokens */\n      swap1\n      pop\n        /* \"contracts/LGG.sol\":3044:3056  totalFee > 0 */\n      dup1\n      iszero\n        /* \"contracts/LGG.sol\":3040:3302  if (totalFee > 0) {... */\n      tag_371\n      jumpi\n        /* \"contracts/LGG.sol\":3097:3112  marketingWallet */\n      sload(0x0a)\n        /* \"contracts/LGG.sol\":3077:3130  super._update(from, marketingWallet, marketingTokens) */\n      tag_372\n      swap1\n        /* \"contracts/LGG.sol\":3091:3095  from */\n      dup8\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/LGG.sol\":3097:3112  marketingWallet */\n      and\n        /* \"contracts/LGG.sol\":3114:3129  marketingTokens */\n      dup6\n        /* \"contracts/LGG.sol\":3077:3090  super._update */\n      tag_350\n        /* \"contracts/LGG.sol\":3077:3130  super._update(from, marketingWallet, marketingTokens) */\n      jump\t// in\n    tag_372:\n        /* \"contracts/LGG.sol\":3149:3200  super._update(from, address(this), liquidityTokens) */\n      tag_373\n        /* \"contracts/LGG.sol\":3163:3167  from */\n      dup7\n        /* \"contracts/LGG.sol\":3177:3181  this */\n      address\n        /* \"contracts/LGG.sol\":3184:3199  liquidityTokens */\n      dup5\n        /* \"contracts/LGG.sol\":3149:3162  super._update */\n      tag_350\n        /* \"contracts/LGG.sol\":3149:3200  super._update(from, address(this), liquidityTokens) */\n      jump\t// in\n    tag_373:\n        /* \"contracts/LGG.sol\":3219:3261  super._update(from, to, amount - totalFee) */\n      tag_374\n        /* \"contracts/LGG.sol\":3233:3237  from */\n      dup7\n        /* \"contracts/LGG.sol\":3239:3241  to */\n      dup7\n        /* \"contracts/LGG.sol\":3243:3260  amount - totalFee */\n      tag_375\n        /* \"contracts/LGG.sol\":3252:3260  totalFee */\n      dup5\n        /* \"contracts/LGG.sol\":3243:3249  amount */\n      dup9\n        /* \"contracts/LGG.sol\":3243:3260  amount - totalFee */\n      tag_376\n      jump\t// in\n    tag_375:\n        /* \"contracts/LGG.sol\":3219:3232  super._update */\n      tag_350\n        /* \"contracts/LGG.sol\":3219:3261  super._update(from, to, amount - totalFee) */\n      jump\t// in\n    tag_374:\n        /* \"contracts/LGG.sol\":3280:3287  return; */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LGG.sol\":3040:3302  if (totalFee > 0) {... */\n    tag_371:\n        /* \"contracts/LGG.sol\":2612:3313  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/LGG.sol\":2556:3313  if (!isExcludedFromFee[from] && !isExcludedFromFee[to]) {... */\n    tag_356:\n        /* \"contracts/LGG.sol\":3333:3364  super._update(from, to, amount) */\n      tag_221\n        /* \"contracts/LGG.sol\":3347:3351  from */\n      dup4\n        /* \"contracts/LGG.sol\":3353:3355  to */\n      dup4\n        /* \"contracts/LGG.sol\":3357:3363  amount */\n      dup4\n        /* \"contracts/LGG.sol\":3333:3346  super._update */\n      tag_350\n        /* \"contracts/LGG.sol\":3333:3364  super._update(from, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x06))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_380\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9197:9199   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9179:9200   */\n      mstore\n        /* \"#utility.yul\":9236:9238   */\n      0x14\n        /* \"#utility.yul\":9216:9234   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9209:9239   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":9255:9273   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9248:9298   */\n      mstore\n        /* \"#utility.yul\":9315:9333   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_192\n        /* \"#utility.yul\":8995:9339   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n    tag_380:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x06))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_380\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9546:9548   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9528:9549   */\n      mstore\n        /* \"#utility.yul\":9585:9587   */\n      0x10\n        /* \"#utility.yul\":9565:9583   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9558:9588   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":9604:9622   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9597:9643   */\n      mstore\n        /* \"#utility.yul\":9660:9678   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_192\n        /* \"#utility.yul\":9344:9684   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_350:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_389\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_390\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_390:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_391\n      swap1\n      pop\n      jump\n    tag_389:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_392\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7218:7250   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7200:7251   */\n      mstore\n        /* \"#utility.yul\":7267:7285   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7260:7294   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":7310:7328   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7303:7337   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":7173:7191   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_192\n        /* \"#utility.yul\":6998:7343   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_392:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_391:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_394\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_395)\n    tag_394:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_395:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_396\n      swap2\n        /* \"#utility.yul\":2252:2277   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2240:2242   */\n      0x20\n        /* \"#utility.yul\":2225:2243   */\n      add\n      swap1\n        /* \"#utility.yul\":2106:2283   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n    tag_396:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_46:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      0x00\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_401:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      0x00\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":199:270   */\n    tag_402:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:915   */\n    tag_53:\n        /* \"#utility.yul\":646:648   */\n      0x20\n        /* \"#utility.yul\":635:644   */\n      dup2\n        /* \"#utility.yul\":628:649   */\n      mstore\n        /* \"#utility.yul\":609:613   */\n      0x00\n        /* \"#utility.yul\":678:684   */\n      dup3\n        /* \"#utility.yul\":672:685   */\n      mload\n        /* \"#utility.yul\":721:727   */\n      dup1\n        /* \"#utility.yul\":716:718   */\n      0x20\n        /* \"#utility.yul\":705:714   */\n      dup5\n        /* \"#utility.yul\":701:719   */\n      add\n        /* \"#utility.yul\":694:728   */\n      mstore\n        /* \"#utility.yul\":780:786   */\n      dup1\n        /* \"#utility.yul\":775:777   */\n      0x20\n        /* \"#utility.yul\":767:773   */\n      dup6\n        /* \"#utility.yul\":763:778   */\n      add\n        /* \"#utility.yul\":758:760   */\n      0x40\n        /* \"#utility.yul\":747:756   */\n      dup6\n        /* \"#utility.yul\":743:761   */\n      add\n        /* \"#utility.yul\":737:787   */\n      mcopy\n        /* \"#utility.yul\":836:837   */\n      0x00\n        /* \"#utility.yul\":831:833   */\n      0x40\n        /* \"#utility.yul\":822:828   */\n      dup3\n        /* \"#utility.yul\":811:820   */\n      dup6\n        /* \"#utility.yul\":807:829   */\n      add\n        /* \"#utility.yul\":803:834   */\n      add\n        /* \"#utility.yul\":796:838   */\n      mstore\n        /* \"#utility.yul\":906:908   */\n      0x40\n        /* \"#utility.yul\":899:901   */\n      0x1f\n        /* \"#utility.yul\":895:902   */\n      not\n        /* \"#utility.yul\":890:892   */\n      0x1f\n        /* \"#utility.yul\":882:888   */\n      dup4\n        /* \"#utility.yul\":878:893   */\n      add\n        /* \"#utility.yul\":874:903   */\n      and\n        /* \"#utility.yul\":863:872   */\n      dup5\n        /* \"#utility.yul\":859:904   */\n      add\n        /* \"#utility.yul\":855:909   */\n      add\n        /* \"#utility.yul\":847:909   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":497:915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":920:1093   */\n    tag_397:\n        /* \"#utility.yul\":988:1008   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1037:1068   */\n      dup2\n      and\n        /* \"#utility.yul\":1027:1069   */\n      dup2\n      eq\n        /* \"#utility.yul\":1017:1087   */\n      tag_406\n      jumpi\n        /* \"#utility.yul\":1083:1084   */\n      0x00\n        /* \"#utility.yul\":1080:1081   */\n      0x00\n        /* \"#utility.yul\":1073:1085   */\n      revert\n        /* \"#utility.yul\":1017:1087   */\n    tag_406:\n        /* \"#utility.yul\":920:1093   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1098:1398   */\n    tag_56:\n        /* \"#utility.yul\":1166:1172   */\n      0x00\n        /* \"#utility.yul\":1174:1180   */\n      0x00\n        /* \"#utility.yul\":1227:1229   */\n      0x40\n        /* \"#utility.yul\":1215:1224   */\n      dup4\n        /* \"#utility.yul\":1206:1213   */\n      dup6\n        /* \"#utility.yul\":1202:1225   */\n      sub\n        /* \"#utility.yul\":1198:1230   */\n      slt\n        /* \"#utility.yul\":1195:1247   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":1243:1244   */\n      0x00\n        /* \"#utility.yul\":1240:1241   */\n      0x00\n        /* \"#utility.yul\":1233:1245   */\n      revert\n        /* \"#utility.yul\":1195:1247   */\n    tag_408:\n        /* \"#utility.yul\":1266:1295   */\n      tag_409\n        /* \"#utility.yul\":1285:1294   */\n      dup4\n        /* \"#utility.yul\":1266:1295   */\n      tag_397\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":1256:1295   */\n      swap5\n        /* \"#utility.yul\":1364:1366   */\n      0x20\n        /* \"#utility.yul\":1349:1367   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1336:1368   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1098:1398   */\n      jump\t// out\n        /* \"#utility.yul\":1403:1749   */\n    tag_61:\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1479:1485   */\n      0x00\n        /* \"#utility.yul\":1532:1534   */\n      0x40\n        /* \"#utility.yul\":1520:1529   */\n      dup4\n        /* \"#utility.yul\":1511:1518   */\n      dup6\n        /* \"#utility.yul\":1507:1530   */\n      sub\n        /* \"#utility.yul\":1503:1535   */\n      slt\n        /* \"#utility.yul\":1500:1552   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":1548:1549   */\n      0x00\n        /* \"#utility.yul\":1545:1546   */\n      0x00\n        /* \"#utility.yul\":1538:1550   */\n      revert\n        /* \"#utility.yul\":1500:1552   */\n    tag_411:\n      pop\n      pop\n        /* \"#utility.yul\":1593:1616   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1713:1715   */\n      0x20\n        /* \"#utility.yul\":1698:1716   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1685:1717   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1403:1749   */\n      jump\t// out\n        /* \"#utility.yul\":1754:2101   */\n    tag_65:\n        /* \"#utility.yul\":1819:1825   */\n      0x00\n        /* \"#utility.yul\":1827:1833   */\n      0x00\n        /* \"#utility.yul\":1880:1882   */\n      0x40\n        /* \"#utility.yul\":1868:1877   */\n      dup4\n        /* \"#utility.yul\":1859:1866   */\n      dup6\n        /* \"#utility.yul\":1855:1878   */\n      sub\n        /* \"#utility.yul\":1851:1883   */\n      slt\n        /* \"#utility.yul\":1848:1900   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":1896:1897   */\n      0x00\n        /* \"#utility.yul\":1893:1894   */\n      0x00\n        /* \"#utility.yul\":1886:1898   */\n      revert\n        /* \"#utility.yul\":1848:1900   */\n    tag_413:\n        /* \"#utility.yul\":1919:1948   */\n      tag_414\n        /* \"#utility.yul\":1938:1947   */\n      dup4\n        /* \"#utility.yul\":1919:1948   */\n      tag_397\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":1909:1948   */\n      swap2\n      pop\n        /* \"#utility.yul\":1998:2000   */\n      0x20\n        /* \"#utility.yul\":1987:1996   */\n      dup4\n        /* \"#utility.yul\":1983:2001   */\n      add\n        /* \"#utility.yul\":1970:2002   */\n      calldataload\n        /* \"#utility.yul\":2045:2050   */\n      dup1\n        /* \"#utility.yul\":2038:2051   */\n      iszero\n        /* \"#utility.yul\":2031:2052   */\n      iszero\n        /* \"#utility.yul\":2024:2029   */\n      dup2\n        /* \"#utility.yul\":2021:2053   */\n      eq\n        /* \"#utility.yul\":2011:2071   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":2067:2068   */\n      0x00\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2057:2069   */\n      revert\n        /* \"#utility.yul\":2011:2071   */\n    tag_415:\n        /* \"#utility.yul\":2090:2095   */\n      dup1\n        /* \"#utility.yul\":2080:2095   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1754:2101   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2288:2662   */\n    tag_73:\n        /* \"#utility.yul\":2365:2371   */\n      0x00\n        /* \"#utility.yul\":2373:2379   */\n      0x00\n        /* \"#utility.yul\":2381:2387   */\n      0x00\n        /* \"#utility.yul\":2434:2436   */\n      0x60\n        /* \"#utility.yul\":2422:2431   */\n      dup5\n        /* \"#utility.yul\":2413:2420   */\n      dup7\n        /* \"#utility.yul\":2409:2432   */\n      sub\n        /* \"#utility.yul\":2405:2437   */\n      slt\n        /* \"#utility.yul\":2402:2454   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":2450:2451   */\n      0x00\n        /* \"#utility.yul\":2447:2448   */\n      0x00\n        /* \"#utility.yul\":2440:2452   */\n      revert\n        /* \"#utility.yul\":2402:2454   */\n    tag_418:\n        /* \"#utility.yul\":2473:2502   */\n      tag_419\n        /* \"#utility.yul\":2492:2501   */\n      dup5\n        /* \"#utility.yul\":2473:2502   */\n      tag_397\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":2463:2502   */\n      swap3\n      pop\n        /* \"#utility.yul\":2521:2559   */\n      tag_420\n        /* \"#utility.yul\":2555:2557   */\n      0x20\n        /* \"#utility.yul\":2544:2553   */\n      dup6\n        /* \"#utility.yul\":2540:2558   */\n      add\n        /* \"#utility.yul\":2521:2559   */\n      tag_397\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":2288:2662   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2511:2559   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2628:2630   */\n      0x40\n        /* \"#utility.yul\":2613:2631   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2600:2632   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2288:2662   */\n      jump\t// out\n        /* \"#utility.yul\":2667:2893   */\n    tag_78:\n        /* \"#utility.yul\":2726:2732   */\n      0x00\n        /* \"#utility.yul\":2779:2781   */\n      0x20\n        /* \"#utility.yul\":2767:2776   */\n      dup3\n        /* \"#utility.yul\":2758:2765   */\n      dup5\n        /* \"#utility.yul\":2754:2777   */\n      sub\n        /* \"#utility.yul\":2750:2782   */\n      slt\n        /* \"#utility.yul\":2747:2799   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":2795:2796   */\n      0x00\n        /* \"#utility.yul\":2792:2793   */\n      0x00\n        /* \"#utility.yul\":2785:2797   */\n      revert\n        /* \"#utility.yul\":2747:2799   */\n    tag_422:\n      pop\n        /* \"#utility.yul\":2840:2863   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2667:2893   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3080:3380   */\n    tag_84:\n        /* \"#utility.yul\":3148:3154   */\n      0x00\n        /* \"#utility.yul\":3156:3162   */\n      0x00\n        /* \"#utility.yul\":3209:3211   */\n      0x40\n        /* \"#utility.yul\":3197:3206   */\n      dup4\n        /* \"#utility.yul\":3188:3195   */\n      dup6\n        /* \"#utility.yul\":3184:3207   */\n      sub\n        /* \"#utility.yul\":3180:3212   */\n      slt\n        /* \"#utility.yul\":3177:3229   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":3225:3226   */\n      0x00\n        /* \"#utility.yul\":3222:3223   */\n      0x00\n        /* \"#utility.yul\":3215:3227   */\n      revert\n        /* \"#utility.yul\":3177:3229   */\n    tag_425:\n        /* \"#utility.yul\":3270:3293   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3336:3374   */\n      tag_426\n        /* \"#utility.yul\":3370:3372   */\n      0x20\n        /* \"#utility.yul\":3355:3373   */\n      dup5\n      add\n        /* \"#utility.yul\":3336:3374   */\n      tag_397\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":3326:3374   */\n      swap1\n      pop\n        /* \"#utility.yul\":3080:3380   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3805:3991   */\n    tag_104:\n        /* \"#utility.yul\":3864:3870   */\n      0x00\n        /* \"#utility.yul\":3917:3919   */\n      0x20\n        /* \"#utility.yul\":3905:3914   */\n      dup3\n        /* \"#utility.yul\":3896:3903   */\n      dup5\n        /* \"#utility.yul\":3892:3915   */\n      sub\n        /* \"#utility.yul\":3888:3920   */\n      slt\n        /* \"#utility.yul\":3885:3937   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":3933:3934   */\n      0x00\n        /* \"#utility.yul\":3930:3931   */\n      0x00\n        /* \"#utility.yul\":3923:3935   */\n      revert\n        /* \"#utility.yul\":3885:3937   */\n    tag_431:\n        /* \"#utility.yul\":3956:3985   */\n      tag_402\n        /* \"#utility.yul\":3975:3984   */\n      dup3\n        /* \"#utility.yul\":3956:3985   */\n      tag_397\n      jump\t// in\n        /* \"#utility.yul\":4204:4464   */\n    tag_163:\n        /* \"#utility.yul\":4272:4278   */\n      0x00\n        /* \"#utility.yul\":4280:4286   */\n      0x00\n        /* \"#utility.yul\":4333:4335   */\n      0x40\n        /* \"#utility.yul\":4321:4330   */\n      dup4\n        /* \"#utility.yul\":4312:4319   */\n      dup6\n        /* \"#utility.yul\":4308:4331   */\n      sub\n        /* \"#utility.yul\":4304:4336   */\n      slt\n        /* \"#utility.yul\":4301:4353   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":4349:4350   */\n      0x00\n        /* \"#utility.yul\":4346:4347   */\n      0x00\n        /* \"#utility.yul\":4339:4351   */\n      revert\n        /* \"#utility.yul\":4301:4353   */\n    tag_435:\n        /* \"#utility.yul\":4372:4401   */\n      tag_436\n        /* \"#utility.yul\":4391:4400   */\n      dup4\n        /* \"#utility.yul\":4372:4401   */\n      tag_397\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":4362:4401   */\n      swap2\n      pop\n        /* \"#utility.yul\":4420:4458   */\n      tag_426\n        /* \"#utility.yul\":4454:4456   */\n      0x20\n        /* \"#utility.yul\":4443:4452   */\n      dup5\n        /* \"#utility.yul\":4439:4457   */\n      add\n        /* \"#utility.yul\":4420:4458   */\n      tag_397\n      jump\t// in\n        /* \"#utility.yul\":4469:4849   */\n    tag_175:\n        /* \"#utility.yul\":4548:4549   */\n      0x01\n        /* \"#utility.yul\":4544:4556   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4591:4603   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4612:4673   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":4666:4670   */\n      0x7f\n        /* \"#utility.yul\":4658:4664   */\n      dup3\n        /* \"#utility.yul\":4654:4671   */\n      and\n        /* \"#utility.yul\":4644:4671   */\n      swap2\n      pop\n        /* \"#utility.yul\":4612:4673   */\n    tag_439:\n        /* \"#utility.yul\":4719:4721   */\n      0x20\n        /* \"#utility.yul\":4711:4717   */\n      dup3\n        /* \"#utility.yul\":4708:4722   */\n      lt\n        /* \"#utility.yul\":4688:4706   */\n      dup2\n        /* \"#utility.yul\":4685:4723   */\n      sub\n        /* \"#utility.yul\":4682:4843   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":4765:4775   */\n      0x4e487b71\n        /* \"#utility.yul\":4760:4763   */\n      0xe0\n        /* \"#utility.yul\":4756:4776   */\n      shl\n        /* \"#utility.yul\":4753:4754   */\n      0x00\n        /* \"#utility.yul\":4746:4777   */\n      mstore\n        /* \"#utility.yul\":4800:4804   */\n      0x22\n        /* \"#utility.yul\":4797:4798   */\n      0x04\n        /* \"#utility.yul\":4790:4805   */\n      mstore\n        /* \"#utility.yul\":4828:4832   */\n      0x24\n        /* \"#utility.yul\":4825:4826   */\n      0x00\n        /* \"#utility.yul\":4818:4833   */\n      revert\n        /* \"#utility.yul\":4682:4843   */\n    tag_440:\n      pop\n        /* \"#utility.yul\":4469:4849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4854:4981   */\n    tag_398:\n        /* \"#utility.yul\":4915:4925   */\n      0x4e487b71\n        /* \"#utility.yul\":4910:4913   */\n      0xe0\n        /* \"#utility.yul\":4906:4926   */\n      shl\n        /* \"#utility.yul\":4903:4904   */\n      0x00\n        /* \"#utility.yul\":4896:4927   */\n      mstore\n        /* \"#utility.yul\":4946:4950   */\n      0x11\n        /* \"#utility.yul\":4943:4944   */\n      0x04\n        /* \"#utility.yul\":4936:4951   */\n      mstore\n        /* \"#utility.yul\":4970:4974   */\n      0x24\n        /* \"#utility.yul\":4967:4968   */\n      0x00\n        /* \"#utility.yul\":4960:4975   */\n      revert\n        /* \"#utility.yul\":4986:5111   */\n    tag_190:\n        /* \"#utility.yul\":5051:5060   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5072:5082   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5069:5105   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":5085:5103   */\n      tag_171\n      tag_398\n      jump\t// in\n        /* \"#utility.yul\":6086:6303   */\n    tag_261:\n        /* \"#utility.yul\":6126:6127   */\n      0x00\n        /* \"#utility.yul\":6152:6153   */\n      dup3\n        /* \"#utility.yul\":6142:6274   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":6196:6206   */\n      0x4e487b71\n        /* \"#utility.yul\":6191:6194   */\n      0xe0\n        /* \"#utility.yul\":6187:6207   */\n      shl\n        /* \"#utility.yul\":6184:6185   */\n      0x00\n        /* \"#utility.yul\":6177:6208   */\n      mstore\n        /* \"#utility.yul\":6231:6235   */\n      0x12\n        /* \"#utility.yul\":6228:6229   */\n      0x04\n        /* \"#utility.yul\":6221:6236   */\n      mstore\n        /* \"#utility.yul\":6259:6263   */\n      0x24\n        /* \"#utility.yul\":6256:6257   */\n      0x00\n        /* \"#utility.yul\":6249:6264   */\n      revert\n        /* \"#utility.yul\":6142:6274   */\n    tag_449:\n      pop\n        /* \"#utility.yul\":6288:6297   */\n      div\n      swap1\n        /* \"#utility.yul\":6086:6303   */\n      jump\t// out\n        /* \"#utility.yul\":8689:8857   */\n    tag_366:\n        /* \"#utility.yul\":8762:8771   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":8793:8802   */\n      dup2\n      iszero\n        /* \"#utility.yul\":8810:8825   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":8804:8826   */\n      dup5\n      eq\n        /* \"#utility.yul\":8790:8827   */\n      or\n        /* \"#utility.yul\":8780:8851   */\n      tag_171\n      jumpi\n        /* \"#utility.yul\":8831:8849   */\n      tag_171\n      tag_398\n      jump\t// in\n        /* \"#utility.yul\":8862:8990   */\n    tag_376:\n        /* \"#utility.yul\":8929:8938   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":8950:8961   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":8947:8984   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":8964:8982   */\n      tag_171\n      tag_398\n      jump\t// in\n    stop\n    data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8 a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n\n    auxdata: 0xa2646970667358221220b1e0272f98e6d173bcb9e6c74035d9ac1fbf042f9fb1d585f10d703661b07e9e64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1566": {
									"entryPoint": null,
									"id": 1566,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_542": {
									"entryPoint": null,
									"id": 542,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_642": {
									"entryPoint": null,
									"id": 642,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_740": {
									"entryPoint": null,
									"id": 740,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 485,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1043": {
									"entryPoint": 658,
									"id": 1043,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1365": {
									"entryPoint": null,
									"id": 1365,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_requireNotPaused_579": {
									"entryPoint": 1340,
									"id": 579,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1010": {
									"entryPoint": 1412,
									"id": 1010,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1712": {
									"entryPoint": 714,
									"id": 1712,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOf_789": {
									"entryPoint": null,
									"id": 789,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": null,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@paused_567": {
									"entryPoint": null,
									"id": 567,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f55ae6815dfdfb35faf31c9e38c52bf64d3d72c827fc76be01fb5a5548d4d4d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a8df1003b4f1898b3f4e673d2d141aba9f3cf0ab33f770d9445773bff9bb0c84__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb7ec3ab8cf4e54e1949e272237f629c67bd685fc80d9d02b42820f52828d272__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1827,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2088,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1751,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6244:13",
										"nodeType": "YulBlock",
										"src": "0:6244:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:13",
													"nodeType": "YulBlock",
													"src": "95:209:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:13",
																"nodeType": "YulBlock",
																"src": "141:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:13",
																					"nodeType": "YulLiteral",
																					"src": "150:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:13",
																					"nodeType": "YulLiteral",
																					"src": "153:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:13"
																			},
																			"nativeSrc": "143:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:13"
																		},
																		"nativeSrc": "143:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:13"
																		},
																		"nativeSrc": "112:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:13",
																		"nodeType": "YulLiteral",
																		"src": "137:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:13"
																},
																"nativeSrc": "108:32:13",
																"nodeType": "YulFunctionCall",
																"src": "108:32:13"
															},
															"nativeSrc": "105:52:13",
															"nodeType": "YulIf",
															"src": "105:52:13"
														},
														{
															"nativeSrc": "166:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:13"
																},
																"nativeSrc": "179:16:13",
																"nodeType": "YulFunctionCall",
																"src": "179:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:13",
																	"nodeType": "YulTypedName",
																	"src": "170:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:13",
																"nodeType": "YulBlock",
																"src": "258:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:13",
																					"nodeType": "YulLiteral",
																					"src": "267:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:13",
																					"nodeType": "YulLiteral",
																					"src": "270:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:13"
																			},
																			"nativeSrc": "260:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:13"
																		},
																		"nativeSrc": "260:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:13",
																										"nodeType": "YulLiteral",
																										"src": "243:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:13",
																										"nodeType": "YulLiteral",
																										"src": "248:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:13"
																								},
																								"nativeSrc": "239:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:13",
																								"nodeType": "YulLiteral",
																								"src": "252:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:13"
																						},
																						"nativeSrc": "235:19:13",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:13"
																				},
																				"nativeSrc": "224:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:13"
																		},
																		"nativeSrc": "214:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:13"
																},
																"nativeSrc": "207:50:13",
																"nodeType": "YulFunctionCall",
																"src": "207:50:13"
															},
															"nativeSrc": "204:70:13",
															"nodeType": "YulIf",
															"src": "204:70:13"
														},
														{
															"nativeSrc": "283:15:13",
															"nodeType": "YulAssignment",
															"src": "283:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:13",
																"nodeType": "YulIdentifier",
																"src": "293:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:13",
														"nodeType": "YulTypedName",
														"src": "61:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:13",
														"nodeType": "YulTypedName",
														"src": "72:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:13",
														"nodeType": "YulTypedName",
														"src": "84:6:13",
														"type": ""
													}
												],
												"src": "14:290:13"
											},
											{
												"body": {
													"nativeSrc": "341:95:13",
													"nodeType": "YulBlock",
													"src": "341:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "358:1:13",
																		"nodeType": "YulLiteral",
																		"src": "358:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "365:3:13",
																				"nodeType": "YulLiteral",
																				"src": "365:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "370:10:13",
																				"nodeType": "YulLiteral",
																				"src": "370:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "361:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:13"
																		},
																		"nativeSrc": "361:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "361:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "351:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:13"
																},
																"nativeSrc": "351:31:13",
																"nodeType": "YulFunctionCall",
																"src": "351:31:13"
															},
															"nativeSrc": "351:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "351:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "398:1:13",
																		"nodeType": "YulLiteral",
																		"src": "398:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "401:4:13",
																		"nodeType": "YulLiteral",
																		"src": "401:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "391:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:13"
																},
																"nativeSrc": "391:15:13",
																"nodeType": "YulFunctionCall",
																"src": "391:15:13"
															},
															"nativeSrc": "391:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "391:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "422:1:13",
																		"nodeType": "YulLiteral",
																		"src": "422:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "425:4:13",
																		"nodeType": "YulLiteral",
																		"src": "425:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "415:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:13"
																},
																"nativeSrc": "415:15:13",
																"nodeType": "YulFunctionCall",
																"src": "415:15:13"
															},
															"nativeSrc": "415:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "415:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "309:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "309:127:13"
											},
											{
												"body": {
													"nativeSrc": "496:325:13",
													"nodeType": "YulBlock",
													"src": "496:325:13",
													"statements": [
														{
															"nativeSrc": "506:22:13",
															"nodeType": "YulAssignment",
															"src": "506:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "520:1:13",
																		"nodeType": "YulLiteral",
																		"src": "520:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "523:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "523:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "516:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:13"
																},
																"nativeSrc": "516:12:13",
																"nodeType": "YulFunctionCall",
																"src": "516:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "506:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "506:6:13"
																}
															]
														},
														{
															"nativeSrc": "537:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "537:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "567:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "567:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "573:1:13",
																		"nodeType": "YulLiteral",
																		"src": "573:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "563:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:13"
																},
																"nativeSrc": "563:12:13",
																"nodeType": "YulFunctionCall",
																"src": "563:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "541:18:13",
																	"nodeType": "YulTypedName",
																	"src": "541:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "614:31:13",
																"nodeType": "YulBlock",
																"src": "614:31:13",
																"statements": [
																	{
																		"nativeSrc": "616:27:13",
																		"nodeType": "YulAssignment",
																		"src": "616:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "630:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "630:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "638:4:13",
																					"nodeType": "YulLiteral",
																					"src": "638:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "626:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "626:3:13"
																			},
																			"nativeSrc": "626:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "626:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "616:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "616:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "594:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "594:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "587:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:13"
																},
																"nativeSrc": "587:26:13",
																"nodeType": "YulFunctionCall",
																"src": "587:26:13"
															},
															"nativeSrc": "584:61:13",
															"nodeType": "YulIf",
															"src": "584:61:13"
														},
														{
															"body": {
																"nativeSrc": "704:111:13",
																"nodeType": "YulBlock",
																"src": "704:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:13",
																					"nodeType": "YulLiteral",
																					"src": "725:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "732:3:13",
																							"nodeType": "YulLiteral",
																							"src": "732:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "737:10:13",
																							"nodeType": "YulLiteral",
																							"src": "737:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "728:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "728:3:13"
																					},
																					"nativeSrc": "728:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "728:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "718:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "718:6:13"
																			},
																			"nativeSrc": "718:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "718:31:13"
																		},
																		"nativeSrc": "718:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "718:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "769:1:13",
																					"nodeType": "YulLiteral",
																					"src": "769:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "772:4:13",
																					"nodeType": "YulLiteral",
																					"src": "772:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "762:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "762:6:13"
																			},
																			"nativeSrc": "762:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "762:15:13"
																		},
																		"nativeSrc": "762:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "762:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "797:1:13",
																					"nodeType": "YulLiteral",
																					"src": "797:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "800:4:13",
																					"nodeType": "YulLiteral",
																					"src": "800:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "790:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:13"
																			},
																			"nativeSrc": "790:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "790:15:13"
																		},
																		"nativeSrc": "790:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "790:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "660:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "660:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "683:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "683:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "691:2:13",
																				"nodeType": "YulLiteral",
																				"src": "691:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "680:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "680:2:13"
																		},
																		"nativeSrc": "680:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "680:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "657:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "657:2:13"
																},
																"nativeSrc": "657:38:13",
																"nodeType": "YulFunctionCall",
																"src": "657:38:13"
															},
															"nativeSrc": "654:161:13",
															"nodeType": "YulIf",
															"src": "654:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "441:380:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "476:4:13",
														"nodeType": "YulTypedName",
														"src": "476:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "485:6:13",
														"nodeType": "YulTypedName",
														"src": "485:6:13",
														"type": ""
													}
												],
												"src": "441:380:13"
											},
											{
												"body": {
													"nativeSrc": "882:65:13",
													"nodeType": "YulBlock",
													"src": "882:65:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "899:1:13",
																		"nodeType": "YulLiteral",
																		"src": "899:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "902:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "902:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "892:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:13"
																},
																"nativeSrc": "892:14:13",
																"nodeType": "YulFunctionCall",
																"src": "892:14:13"
															},
															"nativeSrc": "892:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "892:14:13"
														},
														{
															"nativeSrc": "915:26:13",
															"nodeType": "YulAssignment",
															"src": "915:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "933:1:13",
																		"nodeType": "YulLiteral",
																		"src": "933:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "936:4:13",
																		"nodeType": "YulLiteral",
																		"src": "936:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "923:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "923:9:13"
																},
																"nativeSrc": "923:18:13",
																"nodeType": "YulFunctionCall",
																"src": "923:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "915:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "826:121:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "865:3:13",
														"nodeType": "YulTypedName",
														"src": "865:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "873:4:13",
														"nodeType": "YulTypedName",
														"src": "873:4:13",
														"type": ""
													}
												],
												"src": "826:121:13"
											},
											{
												"body": {
													"nativeSrc": "1033:437:13",
													"nodeType": "YulBlock",
													"src": "1033:437:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1066:398:13",
																"nodeType": "YulBlock",
																"src": "1066:398:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1087:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1087:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1090:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "1090:5:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1080:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1080:6:13"
																			},
																			"nativeSrc": "1080:16:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1080:16:13"
																		},
																		"nativeSrc": "1080:16:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1080:16:13"
																	},
																	{
																		"nativeSrc": "1109:30:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1109:30:13",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1131:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1131:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1134:4:13",
																					"nodeType": "YulLiteral",
																					"src": "1134:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1121:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:13"
																			},
																			"nativeSrc": "1121:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1121:18:13"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1113:4:13",
																				"nodeType": "YulTypedName",
																				"src": "1113:4:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1152:57:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1152:57:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1175:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "1175:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1185:1:13",
																							"nodeType": "YulLiteral",
																							"src": "1185:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1192:10:13",
																									"nodeType": "YulIdentifier",
																									"src": "1192:10:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1204:2:13",
																									"nodeType": "YulLiteral",
																									"src": "1204:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1188:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "1188:3:13"
																							},
																							"nativeSrc": "1188:19:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1188:19:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1181:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "1181:3:13"
																					},
																					"nativeSrc": "1181:27:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1181:27:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1171:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1171:3:13"
																			},
																			"nativeSrc": "1171:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1171:38:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1156:11:13",
																				"nodeType": "YulTypedName",
																				"src": "1156:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1246:23:13",
																			"nodeType": "YulBlock",
																			"src": "1246:23:13",
																			"statements": [
																				{
																					"nativeSrc": "1248:19:13",
																					"nodeType": "YulAssignment",
																					"src": "1248:19:13",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1263:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "1263:4:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1248:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "1248:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1228:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "1228:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1240:4:13",
																					"nodeType": "YulLiteral",
																					"src": "1240:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1225:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "1225:2:13"
																			},
																			"nativeSrc": "1225:20:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1225:20:13"
																		},
																		"nativeSrc": "1222:47:13",
																		"nodeType": "YulIf",
																		"src": "1222:47:13"
																	},
																	{
																		"nativeSrc": "1282:41:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1282:41:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1296:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "1296:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1306:1:13",
																							"nodeType": "YulLiteral",
																							"src": "1306:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1313:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1313:3:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1318:2:13",
																									"nodeType": "YulLiteral",
																									"src": "1318:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1309:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "1309:3:13"
																							},
																							"nativeSrc": "1309:12:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1309:12:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1302:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "1302:3:13"
																					},
																					"nativeSrc": "1302:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1302:20:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1292:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1292:3:13"
																			},
																			"nativeSrc": "1292:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1292:31:13"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1286:2:13",
																				"nodeType": "YulTypedName",
																				"src": "1286:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1336:24:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1336:24:13",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1349:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "1349:11:13"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1340:5:13",
																				"nodeType": "YulTypedName",
																				"src": "1340:5:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1434:20:13",
																			"nodeType": "YulBlock",
																			"src": "1434:20:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1443:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "1443:5:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1450:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1450:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1436:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "1436:6:13"
																						},
																						"nativeSrc": "1436:16:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1436:16:13"
																					},
																					"nativeSrc": "1436:16:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "1436:16:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1384:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "1384:5:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1391:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "1391:2:13"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1381:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "1381:2:13"
																			},
																			"nativeSrc": "1381:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1381:13:13"
																		},
																		"nativeSrc": "1373:81:13",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1395:26:13",
																			"nodeType": "YulBlock",
																			"src": "1395:26:13",
																			"statements": [
																				{
																					"nativeSrc": "1397:22:13",
																					"nodeType": "YulAssignment",
																					"src": "1397:22:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1410:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "1410:5:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1417:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1417:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1406:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1406:3:13"
																						},
																						"nativeSrc": "1406:13:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1406:13:13"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1397:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "1397:5:13"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1377:3:13",
																			"nodeType": "YulBlock",
																			"src": "1377:3:13",
																			"statements": []
																		},
																		"src": "1373:81:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1049:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1049:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1054:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1054:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1046:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:13"
																},
																"nativeSrc": "1046:11:13",
																"nodeType": "YulFunctionCall",
																"src": "1046:11:13"
															},
															"nativeSrc": "1043:421:13",
															"nodeType": "YulIf",
															"src": "1043:421:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "952:518:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1005:5:13",
														"nodeType": "YulTypedName",
														"src": "1005:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1012:3:13",
														"nodeType": "YulTypedName",
														"src": "1012:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1017:10:13",
														"nodeType": "YulTypedName",
														"src": "1017:10:13",
														"type": ""
													}
												],
												"src": "952:518:13"
											},
											{
												"body": {
													"nativeSrc": "1560:81:13",
													"nodeType": "YulBlock",
													"src": "1560:81:13",
													"statements": [
														{
															"nativeSrc": "1570:65:13",
															"nodeType": "YulAssignment",
															"src": "1570:65:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1585:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "1585:4:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1603:1:13",
																										"nodeType": "YulLiteral",
																										"src": "1603:1:13",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1606:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "1606:3:13"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1599:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1599:3:13"
																								},
																								"nativeSrc": "1599:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "1599:11:13"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1616:1:13",
																										"nodeType": "YulLiteral",
																										"src": "1616:1:13",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1612:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1612:3:13"
																								},
																								"nativeSrc": "1612:6:13",
																								"nodeType": "YulFunctionCall",
																								"src": "1612:6:13"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1595:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1595:3:13"
																						},
																						"nativeSrc": "1595:24:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1595:24:13"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1591:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1591:3:13"
																				},
																				"nativeSrc": "1591:29:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1591:29:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1581:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1581:3:13"
																		},
																		"nativeSrc": "1581:40:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1581:40:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1627:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1627:1:13",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1630:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1630:3:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1623:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:13"
																		},
																		"nativeSrc": "1623:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1578:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1578:2:13"
																},
																"nativeSrc": "1578:57:13",
																"nodeType": "YulFunctionCall",
																"src": "1578:57:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1570:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1570:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1475:166:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1537:4:13",
														"nodeType": "YulTypedName",
														"src": "1537:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1543:3:13",
														"nodeType": "YulTypedName",
														"src": "1543:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1551:4:13",
														"nodeType": "YulTypedName",
														"src": "1551:4:13",
														"type": ""
													}
												],
												"src": "1475:166:13"
											},
											{
												"body": {
													"nativeSrc": "1742:1203:13",
													"nodeType": "YulBlock",
													"src": "1742:1203:13",
													"statements": [
														{
															"nativeSrc": "1752:24:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1752:24:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1772:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1772:3:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1766:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1766:5:13"
																},
																"nativeSrc": "1766:10:13",
																"nodeType": "YulFunctionCall",
																"src": "1766:10:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1756:6:13",
																	"nodeType": "YulTypedName",
																	"src": "1756:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1819:22:13",
																"nodeType": "YulBlock",
																"src": "1819:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1821:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1821:16:13"
																			},
																			"nativeSrc": "1821:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1821:18:13"
																		},
																		"nativeSrc": "1821:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1821:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1791:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1791:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1807:2:13",
																						"nodeType": "YulLiteral",
																						"src": "1807:2:13",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1811:1:13",
																						"nodeType": "YulLiteral",
																						"src": "1811:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1803:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1803:3:13"
																				},
																				"nativeSrc": "1803:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1803:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1815:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1815:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1799:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:13"
																		},
																		"nativeSrc": "1799:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1788:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1788:2:13"
																},
																"nativeSrc": "1788:30:13",
																"nodeType": "YulFunctionCall",
																"src": "1788:30:13"
															},
															"nativeSrc": "1785:56:13",
															"nodeType": "YulIf",
															"src": "1785:56:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1894:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1894:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1932:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "1932:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1926:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "1926:5:13"
																				},
																				"nativeSrc": "1926:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1926:11:13"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1900:25:13",
																			"nodeType": "YulIdentifier",
																			"src": "1900:25:13"
																		},
																		"nativeSrc": "1900:38:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:38:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1940:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1940:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1850:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1850:43:13"
																},
																"nativeSrc": "1850:97:13",
																"nodeType": "YulFunctionCall",
																"src": "1850:97:13"
															},
															"nativeSrc": "1850:97:13",
															"nodeType": "YulExpressionStatement",
															"src": "1850:97:13"
														},
														{
															"nativeSrc": "1956:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1956:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1973:1:13",
																"nodeType": "YulLiteral",
																"src": "1973:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1960:9:13",
																	"nodeType": "YulTypedName",
																	"src": "1960:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1983:17:13",
															"nodeType": "YulAssignment",
															"src": "1983:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1996:4:13",
																"nodeType": "YulLiteral",
																"src": "1996:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1983:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "1983:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2046:642:13",
																		"nodeType": "YulBlock",
																		"src": "2046:642:13",
																		"statements": [
																			{
																				"nativeSrc": "2060:35:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2060:35:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2079:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "2079:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2091:2:13",
																									"nodeType": "YulLiteral",
																									"src": "2091:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2087:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "2087:3:13"
																							},
																							"nativeSrc": "2087:7:13",
																							"nodeType": "YulFunctionCall",
																							"src": "2087:7:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2075:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2075:3:13"
																					},
																					"nativeSrc": "2075:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2075:20:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2064:7:13",
																						"nodeType": "YulTypedName",
																						"src": "2064:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2108:49:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2108:49:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2152:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "2152:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2122:29:13",
																						"nodeType": "YulIdentifier",
																						"src": "2122:29:13"
																					},
																					"nativeSrc": "2122:35:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2122:35:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2112:6:13",
																						"nodeType": "YulTypedName",
																						"src": "2112:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2170:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2170:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2179:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2179:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2174:1:13",
																						"nodeType": "YulTypedName",
																						"src": "2174:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2250:165:13",
																					"nodeType": "YulBlock",
																					"src": "2250:165:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2275:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "2275:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2293:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "2293:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2298:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "2298:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2289:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "2289:3:13"
																												},
																												"nativeSrc": "2289:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "2289:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2283:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "2283:5:13"
																										},
																										"nativeSrc": "2283:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "2283:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2268:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "2268:6:13"
																								},
																								"nativeSrc": "2268:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "2268:42:13"
																							},
																							"nativeSrc": "2268:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "2268:42:13"
																						},
																						{
																							"nativeSrc": "2327:24:13",
																							"nodeType": "YulAssignment",
																							"src": "2327:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2341:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "2341:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2349:1:13",
																										"nodeType": "YulLiteral",
																										"src": "2349:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2337:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "2337:3:13"
																								},
																								"nativeSrc": "2337:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "2337:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2327:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "2327:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2368:33:13",
																							"nodeType": "YulAssignment",
																							"src": "2368:33:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2385:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "2385:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2396:4:13",
																										"nodeType": "YulLiteral",
																										"src": "2396:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2381:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "2381:3:13"
																								},
																								"nativeSrc": "2381:20:13",
																								"nodeType": "YulFunctionCall",
																								"src": "2381:20:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2368:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "2368:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2204:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "2204:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2207:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "2207:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2201:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "2201:2:13"
																					},
																					"nativeSrc": "2201:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2201:14:13"
																				},
																				"nativeSrc": "2193:222:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2216:21:13",
																					"nodeType": "YulBlock",
																					"src": "2216:21:13",
																					"statements": [
																						{
																							"nativeSrc": "2218:17:13",
																							"nodeType": "YulAssignment",
																							"src": "2218:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2227:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "2227:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2230:4:13",
																										"nodeType": "YulLiteral",
																										"src": "2230:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2223:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "2223:3:13"
																								},
																								"nativeSrc": "2223:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "2223:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2218:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "2218:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2197:3:13",
																					"nodeType": "YulBlock",
																					"src": "2197:3:13",
																					"statements": []
																				},
																				"src": "2193:222:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "2463:166:13",
																					"nodeType": "YulBlock",
																					"src": "2463:166:13",
																					"statements": [
																						{
																							"nativeSrc": "2481:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2481:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2508:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "2508:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2513:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "2513:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2504:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "2504:3:13"
																										},
																										"nativeSrc": "2504:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "2504:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2498:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "2498:5:13"
																								},
																								"nativeSrc": "2498:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "2498:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2485:9:13",
																									"nodeType": "YulTypedName",
																									"src": "2485:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2548:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "2548:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2560:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "2560:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2587:1:13",
																																				"nodeType": "YulLiteral",
																																				"src": "2587:1:13",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2590:6:13",
																																				"nodeType": "YulIdentifier",
																																				"src": "2590:6:13"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2583:3:13",
																																			"nodeType": "YulIdentifier",
																																			"src": "2583:3:13"
																																		},
																																		"nativeSrc": "2583:14:13",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2583:14:13"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2599:3:13",
																																		"nodeType": "YulLiteral",
																																		"src": "2599:3:13",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2579:3:13",
																																	"nodeType": "YulIdentifier",
																																	"src": "2579:3:13"
																																},
																																"nativeSrc": "2579:24:13",
																																"nodeType": "YulFunctionCall",
																																"src": "2579:24:13"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2609:1:13",
																																		"nodeType": "YulLiteral",
																																		"src": "2609:1:13",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2605:3:13",
																																	"nodeType": "YulIdentifier",
																																	"src": "2605:3:13"
																																},
																																"nativeSrc": "2605:6:13",
																																"nodeType": "YulFunctionCall",
																																"src": "2605:6:13"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2575:3:13",
																															"nodeType": "YulIdentifier",
																															"src": "2575:3:13"
																														},
																														"nativeSrc": "2575:37:13",
																														"nodeType": "YulFunctionCall",
																														"src": "2575:37:13"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2571:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "2571:3:13"
																												},
																												"nativeSrc": "2571:42:13",
																												"nodeType": "YulFunctionCall",
																												"src": "2571:42:13"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2556:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "2556:3:13"
																										},
																										"nativeSrc": "2556:58:13",
																										"nodeType": "YulFunctionCall",
																										"src": "2556:58:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2541:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "2541:6:13"
																								},
																								"nativeSrc": "2541:74:13",
																								"nodeType": "YulFunctionCall",
																								"src": "2541:74:13"
																							},
																							"nativeSrc": "2541:74:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "2541:74:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2434:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "2434:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2443:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "2443:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2431:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "2431:2:13"
																					},
																					"nativeSrc": "2431:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2431:19:13"
																				},
																				"nativeSrc": "2428:201:13",
																				"nodeType": "YulIf",
																				"src": "2428:201:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2649:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "2649:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2663:1:13",
																											"nodeType": "YulLiteral",
																											"src": "2663:1:13",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2666:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "2666:6:13"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2659:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "2659:3:13"
																									},
																									"nativeSrc": "2659:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "2659:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2675:1:13",
																									"nodeType": "YulLiteral",
																									"src": "2675:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2655:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "2655:3:13"
																							},
																							"nativeSrc": "2655:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "2655:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2642:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2642:6:13"
																					},
																					"nativeSrc": "2642:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2642:36:13"
																				},
																				"nativeSrc": "2642:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "2642:36:13"
																			}
																		]
																	},
																	"nativeSrc": "2039:649:13",
																	"nodeType": "YulCase",
																	"src": "2039:649:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2044:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2044:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2705:234:13",
																		"nodeType": "YulBlock",
																		"src": "2705:234:13",
																		"statements": [
																			{
																				"nativeSrc": "2719:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2719:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2732:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2732:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2723:5:13",
																						"nodeType": "YulTypedName",
																						"src": "2723:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2768:67:13",
																					"nodeType": "YulBlock",
																					"src": "2768:67:13",
																					"statements": [
																						{
																							"nativeSrc": "2786:35:13",
																							"nodeType": "YulAssignment",
																							"src": "2786:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2805:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "2805:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2810:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "2810:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2801:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "2801:3:13"
																										},
																										"nativeSrc": "2801:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "2801:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2795:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "2795:5:13"
																								},
																								"nativeSrc": "2795:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "2795:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2786:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "2786:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2749:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "2749:6:13"
																				},
																				"nativeSrc": "2746:89:13",
																				"nodeType": "YulIf",
																				"src": "2746:89:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2855:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "2855:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2914:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "2914:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2921:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "2921:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2861:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "2861:52:13"
																							},
																							"nativeSrc": "2861:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "2861:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2848:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2848:6:13"
																					},
																					"nativeSrc": "2848:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2848:81:13"
																				},
																				"nativeSrc": "2848:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "2848:81:13"
																			}
																		]
																	},
																	"nativeSrc": "2697:242:13",
																	"nodeType": "YulCase",
																	"src": "2697:242:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2019:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2019:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2027:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2027:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2016:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2016:2:13"
																},
																"nativeSrc": "2016:14:13",
																"nodeType": "YulFunctionCall",
																"src": "2016:14:13"
															},
															"nativeSrc": "2009:930:13",
															"nodeType": "YulSwitch",
															"src": "2009:930:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1646:1299:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1727:4:13",
														"nodeType": "YulTypedName",
														"src": "1727:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1733:3:13",
														"nodeType": "YulTypedName",
														"src": "1733:3:13",
														"type": ""
													}
												],
												"src": "1646:1299:13"
											},
											{
												"body": {
													"nativeSrc": "3124:181:13",
													"nodeType": "YulBlock",
													"src": "3124:181:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3141:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3141:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3152:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3152:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3134:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3134:6:13"
																},
																"nativeSrc": "3134:21:13",
																"nodeType": "YulFunctionCall",
																"src": "3134:21:13"
															},
															"nativeSrc": "3134:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "3134:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3175:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3175:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3186:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3186:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3171:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3171:3:13"
																		},
																		"nativeSrc": "3171:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3171:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3191:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3191:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3164:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3164:6:13"
																},
																"nativeSrc": "3164:30:13",
																"nodeType": "YulFunctionCall",
																"src": "3164:30:13"
															},
															"nativeSrc": "3164:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "3164:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3214:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3214:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3225:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3225:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3210:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3210:3:13"
																		},
																		"nativeSrc": "3210:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3210:18:13"
																	},
																	{
																		"hexValue": "4d61726b6574696e672077616c6c65742063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "3230:33:13",
																		"nodeType": "YulLiteral",
																		"src": "3230:33:13",
																		"type": "",
																		"value": "Marketing wallet cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3203:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3203:6:13"
																},
																"nativeSrc": "3203:61:13",
																"nodeType": "YulFunctionCall",
																"src": "3203:61:13"
															},
															"nativeSrc": "3203:61:13",
															"nodeType": "YulExpressionStatement",
															"src": "3203:61:13"
														},
														{
															"nativeSrc": "3273:26:13",
															"nodeType": "YulAssignment",
															"src": "3273:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3285:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3285:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3296:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3296:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3281:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3281:3:13"
																},
																"nativeSrc": "3281:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3281:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3273:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3273:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a8df1003b4f1898b3f4e673d2d141aba9f3cf0ab33f770d9445773bff9bb0c84__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2950:355:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3101:9:13",
														"nodeType": "YulTypedName",
														"src": "3101:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3115:4:13",
														"nodeType": "YulTypedName",
														"src": "3115:4:13",
														"type": ""
													}
												],
												"src": "2950:355:13"
											},
											{
												"body": {
													"nativeSrc": "3342:95:13",
													"nodeType": "YulBlock",
													"src": "3342:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3359:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3359:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3366:3:13",
																				"nodeType": "YulLiteral",
																				"src": "3366:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3371:10:13",
																				"nodeType": "YulLiteral",
																				"src": "3371:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3362:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3362:3:13"
																		},
																		"nativeSrc": "3362:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3362:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3352:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3352:6:13"
																},
																"nativeSrc": "3352:31:13",
																"nodeType": "YulFunctionCall",
																"src": "3352:31:13"
															},
															"nativeSrc": "3352:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "3352:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3399:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3399:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3402:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3402:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3392:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3392:6:13"
																},
																"nativeSrc": "3392:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3392:15:13"
															},
															"nativeSrc": "3392:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3392:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3423:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3423:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3426:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3426:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3416:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3416:6:13"
																},
																"nativeSrc": "3416:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3416:15:13"
															},
															"nativeSrc": "3416:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3416:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3310:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "3310:127:13"
											},
											{
												"body": {
													"nativeSrc": "3488:171:13",
													"nodeType": "YulBlock",
													"src": "3488:171:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3519:111:13",
																"nodeType": "YulBlock",
																"src": "3519:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3540:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3540:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3547:3:13",
																							"nodeType": "YulLiteral",
																							"src": "3547:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3552:10:13",
																							"nodeType": "YulLiteral",
																							"src": "3552:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3543:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "3543:3:13"
																					},
																					"nativeSrc": "3543:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3543:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3533:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3533:6:13"
																			},
																			"nativeSrc": "3533:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3533:31:13"
																		},
																		"nativeSrc": "3533:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3533:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3584:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3584:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3587:4:13",
																					"nodeType": "YulLiteral",
																					"src": "3587:4:13",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3577:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3577:6:13"
																			},
																			"nativeSrc": "3577:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3577:15:13"
																		},
																		"nativeSrc": "3577:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3577:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3612:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3612:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3615:4:13",
																					"nodeType": "YulLiteral",
																					"src": "3615:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3605:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3605:6:13"
																			},
																			"nativeSrc": "3605:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3605:15:13"
																		},
																		"nativeSrc": "3605:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3605:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3508:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3508:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3501:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3501:6:13"
																},
																"nativeSrc": "3501:9:13",
																"nodeType": "YulFunctionCall",
																"src": "3501:9:13"
															},
															"nativeSrc": "3498:132:13",
															"nodeType": "YulIf",
															"src": "3498:132:13"
														},
														{
															"nativeSrc": "3639:14:13",
															"nodeType": "YulAssignment",
															"src": "3639:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3648:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3648:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3651:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3651:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3644:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3644:3:13"
																},
																"nativeSrc": "3644:9:13",
																"nodeType": "YulFunctionCall",
																"src": "3644:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3639:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "3639:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "3442:217:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3473:1:13",
														"nodeType": "YulTypedName",
														"src": "3473:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3476:1:13",
														"nodeType": "YulTypedName",
														"src": "3476:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3482:1:13",
														"nodeType": "YulTypedName",
														"src": "3482:1:13",
														"type": ""
													}
												],
												"src": "3442:217:13"
											},
											{
												"body": {
													"nativeSrc": "3765:102:13",
													"nodeType": "YulBlock",
													"src": "3765:102:13",
													"statements": [
														{
															"nativeSrc": "3775:26:13",
															"nodeType": "YulAssignment",
															"src": "3775:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3787:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3787:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3798:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3798:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3783:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3783:3:13"
																},
																"nativeSrc": "3783:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3783:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3775:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3775:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3817:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3817:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3832:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3832:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3848:3:13",
																								"nodeType": "YulLiteral",
																								"src": "3848:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3853:1:13",
																								"nodeType": "YulLiteral",
																								"src": "3853:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3844:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "3844:3:13"
																						},
																						"nativeSrc": "3844:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "3844:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3857:1:13",
																						"nodeType": "YulLiteral",
																						"src": "3857:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3840:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3840:3:13"
																				},
																				"nativeSrc": "3840:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3840:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3828:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3828:3:13"
																		},
																		"nativeSrc": "3828:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3828:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3810:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3810:6:13"
																},
																"nativeSrc": "3810:51:13",
																"nodeType": "YulFunctionCall",
																"src": "3810:51:13"
															},
															"nativeSrc": "3810:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "3810:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3664:203:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3734:9:13",
														"nodeType": "YulTypedName",
														"src": "3734:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3745:6:13",
														"nodeType": "YulTypedName",
														"src": "3745:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3756:4:13",
														"nodeType": "YulTypedName",
														"src": "3756:4:13",
														"type": ""
													}
												],
												"src": "3664:203:13"
											},
											{
												"body": {
													"nativeSrc": "4046:172:13",
													"nodeType": "YulBlock",
													"src": "4046:172:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4063:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4063:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4074:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4074:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4056:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4056:6:13"
																},
																"nativeSrc": "4056:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4056:21:13"
															},
															"nativeSrc": "4056:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "4056:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4097:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4097:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4108:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4108:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4093:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4093:3:13"
																		},
																		"nativeSrc": "4093:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4113:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4113:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4086:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:13"
																},
																"nativeSrc": "4086:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4086:30:13"
															},
															"nativeSrc": "4086:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "4086:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4136:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4136:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4147:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4147:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4132:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4132:3:13"
																		},
																		"nativeSrc": "4132:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4132:18:13"
																	},
																	{
																		"hexValue": "4164647265737320697320626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "4152:24:13",
																		"nodeType": "YulLiteral",
																		"src": "4152:24:13",
																		"type": "",
																		"value": "Address is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4125:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4125:6:13"
																},
																"nativeSrc": "4125:52:13",
																"nodeType": "YulFunctionCall",
																"src": "4125:52:13"
															},
															"nativeSrc": "4125:52:13",
															"nodeType": "YulExpressionStatement",
															"src": "4125:52:13"
														},
														{
															"nativeSrc": "4186:26:13",
															"nodeType": "YulAssignment",
															"src": "4186:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4198:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4198:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4209:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4209:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4194:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4194:3:13"
																},
																"nativeSrc": "4194:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4194:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4186:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4186:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3872:346:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4023:9:13",
														"nodeType": "YulTypedName",
														"src": "4023:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4037:4:13",
														"nodeType": "YulTypedName",
														"src": "4037:4:13",
														"type": ""
													}
												],
												"src": "3872:346:13"
											},
											{
												"body": {
													"nativeSrc": "4397:180:13",
													"nodeType": "YulBlock",
													"src": "4397:180:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4414:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4414:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4425:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4425:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4407:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4407:6:13"
																},
																"nativeSrc": "4407:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4407:21:13"
															},
															"nativeSrc": "4407:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "4407:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4448:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4448:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4459:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4459:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4444:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4444:3:13"
																		},
																		"nativeSrc": "4444:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4444:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4464:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4464:2:13",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4437:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4437:6:13"
																},
																"nativeSrc": "4437:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4437:30:13"
															},
															"nativeSrc": "4437:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "4437:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4487:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4487:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4498:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4498:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4483:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4483:3:13"
																		},
																		"nativeSrc": "4483:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4483:18:13"
																	},
																	{
																		"hexValue": "45786365656473206d6178207472616e73616374696f6e20616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "4503:32:13",
																		"nodeType": "YulLiteral",
																		"src": "4503:32:13",
																		"type": "",
																		"value": "Exceeds max transaction amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4476:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4476:6:13"
																},
																"nativeSrc": "4476:60:13",
																"nodeType": "YulFunctionCall",
																"src": "4476:60:13"
															},
															"nativeSrc": "4476:60:13",
															"nodeType": "YulExpressionStatement",
															"src": "4476:60:13"
														},
														{
															"nativeSrc": "4545:26:13",
															"nodeType": "YulAssignment",
															"src": "4545:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4557:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4557:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4568:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4568:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4553:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4553:3:13"
																},
																"nativeSrc": "4553:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4553:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4545:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4545:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f55ae6815dfdfb35faf31c9e38c52bf64d3d72c827fc76be01fb5a5548d4d4d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4223:354:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4374:9:13",
														"nodeType": "YulTypedName",
														"src": "4374:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4388:4:13",
														"nodeType": "YulTypedName",
														"src": "4388:4:13",
														"type": ""
													}
												],
												"src": "4223:354:13"
											},
											{
												"body": {
													"nativeSrc": "4630:77:13",
													"nodeType": "YulBlock",
													"src": "4630:77:13",
													"statements": [
														{
															"nativeSrc": "4640:16:13",
															"nodeType": "YulAssignment",
															"src": "4640:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4651:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4651:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4654:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4654:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4647:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4647:3:13"
																},
																"nativeSrc": "4647:9:13",
																"nodeType": "YulFunctionCall",
																"src": "4647:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4640:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4640:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4679:22:13",
																"nodeType": "YulBlock",
																"src": "4679:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4681:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4681:16:13"
																			},
																			"nativeSrc": "4681:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4681:18:13"
																		},
																		"nativeSrc": "4681:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4681:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4671:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4671:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4674:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4674:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4668:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4668:2:13"
																},
																"nativeSrc": "4668:10:13",
																"nodeType": "YulFunctionCall",
																"src": "4668:10:13"
															},
															"nativeSrc": "4665:36:13",
															"nodeType": "YulIf",
															"src": "4665:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4582:125:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4613:1:13",
														"nodeType": "YulTypedName",
														"src": "4613:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4616:1:13",
														"nodeType": "YulTypedName",
														"src": "4616:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4622:3:13",
														"nodeType": "YulTypedName",
														"src": "4622:3:13",
														"type": ""
													}
												],
												"src": "4582:125:13"
											},
											{
												"body": {
													"nativeSrc": "4886:173:13",
													"nodeType": "YulBlock",
													"src": "4886:173:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4903:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4903:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4914:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4914:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4896:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4896:6:13"
																},
																"nativeSrc": "4896:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4896:21:13"
															},
															"nativeSrc": "4896:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "4896:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4937:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4937:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4948:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4948:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4933:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4933:3:13"
																		},
																		"nativeSrc": "4933:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4933:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4953:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4953:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4926:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4926:6:13"
																},
																"nativeSrc": "4926:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4926:30:13"
															},
															"nativeSrc": "4926:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "4926:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4976:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4976:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4987:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4987:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4972:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4972:3:13"
																		},
																		"nativeSrc": "4972:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4972:18:13"
																	},
																	{
																		"hexValue": "45786365656473206d61782077616c6c65742073697a65",
																		"kind": "string",
																		"nativeSrc": "4992:25:13",
																		"nodeType": "YulLiteral",
																		"src": "4992:25:13",
																		"type": "",
																		"value": "Exceeds max wallet size"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4965:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:13"
																},
																"nativeSrc": "4965:53:13",
																"nodeType": "YulFunctionCall",
																"src": "4965:53:13"
															},
															"nativeSrc": "4965:53:13",
															"nodeType": "YulExpressionStatement",
															"src": "4965:53:13"
														},
														{
															"nativeSrc": "5027:26:13",
															"nodeType": "YulAssignment",
															"src": "5027:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5039:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5039:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5050:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5050:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5035:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5035:3:13"
																},
																"nativeSrc": "5035:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5035:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5027:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5027:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb7ec3ab8cf4e54e1949e272237f629c67bd685fc80d9d02b42820f52828d272__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4712:347:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4863:9:13",
														"nodeType": "YulTypedName",
														"src": "4863:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4877:4:13",
														"nodeType": "YulTypedName",
														"src": "4877:4:13",
														"type": ""
													}
												],
												"src": "4712:347:13"
											},
											{
												"body": {
													"nativeSrc": "5116:116:13",
													"nodeType": "YulBlock",
													"src": "5116:116:13",
													"statements": [
														{
															"nativeSrc": "5126:20:13",
															"nodeType": "YulAssignment",
															"src": "5126:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5141:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5141:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5144:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5144:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5137:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5137:3:13"
																},
																"nativeSrc": "5137:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5137:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5126:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "5126:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5204:22:13",
																"nodeType": "YulBlock",
																"src": "5204:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5206:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5206:16:13"
																			},
																			"nativeSrc": "5206:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5206:18:13"
																		},
																		"nativeSrc": "5206:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5206:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5175:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "5175:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5168:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "5168:6:13"
																				},
																				"nativeSrc": "5168:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5168:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5182:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "5182:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5189:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "5189:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5198:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "5198:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5185:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "5185:3:13"
																						},
																						"nativeSrc": "5185:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "5185:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5179:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5179:2:13"
																				},
																				"nativeSrc": "5179:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5179:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5165:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5165:2:13"
																		},
																		"nativeSrc": "5165:37:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5165:37:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5158:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5158:6:13"
																},
																"nativeSrc": "5158:45:13",
																"nodeType": "YulFunctionCall",
																"src": "5158:45:13"
															},
															"nativeSrc": "5155:71:13",
															"nodeType": "YulIf",
															"src": "5155:71:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5064:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5095:1:13",
														"nodeType": "YulTypedName",
														"src": "5095:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5098:1:13",
														"nodeType": "YulTypedName",
														"src": "5098:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5104:7:13",
														"nodeType": "YulTypedName",
														"src": "5104:7:13",
														"type": ""
													}
												],
												"src": "5064:168:13"
											},
											{
												"body": {
													"nativeSrc": "5286:79:13",
													"nodeType": "YulBlock",
													"src": "5286:79:13",
													"statements": [
														{
															"nativeSrc": "5296:17:13",
															"nodeType": "YulAssignment",
															"src": "5296:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5308:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5308:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5311:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5311:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5304:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5304:3:13"
																},
																"nativeSrc": "5304:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5304:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5296:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5296:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5337:22:13",
																"nodeType": "YulBlock",
																"src": "5337:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5339:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5339:16:13"
																			},
																			"nativeSrc": "5339:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5339:18:13"
																		},
																		"nativeSrc": "5339:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5339:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5328:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5328:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5334:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5334:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5325:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5325:2:13"
																},
																"nativeSrc": "5325:11:13",
																"nodeType": "YulFunctionCall",
																"src": "5325:11:13"
															},
															"nativeSrc": "5322:37:13",
															"nodeType": "YulIf",
															"src": "5322:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5237:128:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5268:1:13",
														"nodeType": "YulTypedName",
														"src": "5268:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5271:1:13",
														"nodeType": "YulTypedName",
														"src": "5271:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5277:4:13",
														"nodeType": "YulTypedName",
														"src": "5277:4:13",
														"type": ""
													}
												],
												"src": "5237:128:13"
											},
											{
												"body": {
													"nativeSrc": "5544:166:13",
													"nodeType": "YulBlock",
													"src": "5544:166:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5561:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5561:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5572:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5572:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5554:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5554:6:13"
																},
																"nativeSrc": "5554:21:13",
																"nodeType": "YulFunctionCall",
																"src": "5554:21:13"
															},
															"nativeSrc": "5554:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "5554:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5595:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5595:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5606:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5606:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5591:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5591:3:13"
																		},
																		"nativeSrc": "5591:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5591:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5611:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5611:2:13",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5584:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5584:6:13"
																},
																"nativeSrc": "5584:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5584:30:13"
															},
															"nativeSrc": "5584:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "5584:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5634:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5634:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5645:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5645:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5630:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5630:3:13"
																		},
																		"nativeSrc": "5630:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5630:18:13"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "5650:18:13",
																		"nodeType": "YulLiteral",
																		"src": "5650:18:13",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5623:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5623:6:13"
																},
																"nativeSrc": "5623:46:13",
																"nodeType": "YulFunctionCall",
																"src": "5623:46:13"
															},
															"nativeSrc": "5623:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "5623:46:13"
														},
														{
															"nativeSrc": "5678:26:13",
															"nodeType": "YulAssignment",
															"src": "5678:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5690:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5690:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5701:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5701:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5686:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5686:3:13"
																},
																"nativeSrc": "5686:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5686:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5678:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5678:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5370:340:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5521:9:13",
														"nodeType": "YulTypedName",
														"src": "5521:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5535:4:13",
														"nodeType": "YulTypedName",
														"src": "5535:4:13",
														"type": ""
													}
												],
												"src": "5370:340:13"
											},
											{
												"body": {
													"nativeSrc": "5872:188:13",
													"nodeType": "YulBlock",
													"src": "5872:188:13",
													"statements": [
														{
															"nativeSrc": "5882:26:13",
															"nodeType": "YulAssignment",
															"src": "5882:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5894:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5894:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5905:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5905:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5890:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5890:3:13"
																},
																"nativeSrc": "5890:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5890:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5882:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5882:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5924:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5924:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5939:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5939:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5955:3:13",
																								"nodeType": "YulLiteral",
																								"src": "5955:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5960:1:13",
																								"nodeType": "YulLiteral",
																								"src": "5960:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5951:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "5951:3:13"
																						},
																						"nativeSrc": "5951:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "5951:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5964:1:13",
																						"nodeType": "YulLiteral",
																						"src": "5964:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5947:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5947:3:13"
																				},
																				"nativeSrc": "5947:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5947:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5935:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5935:3:13"
																		},
																		"nativeSrc": "5935:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5935:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5917:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5917:6:13"
																},
																"nativeSrc": "5917:51:13",
																"nodeType": "YulFunctionCall",
																"src": "5917:51:13"
															},
															"nativeSrc": "5917:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "5917:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5988:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5988:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5999:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5999:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5984:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5984:3:13"
																		},
																		"nativeSrc": "5984:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5984:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6004:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6004:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5977:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5977:6:13"
																},
																"nativeSrc": "5977:34:13",
																"nodeType": "YulFunctionCall",
																"src": "5977:34:13"
															},
															"nativeSrc": "5977:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "5977:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6031:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6031:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6042:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6042:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6027:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6027:3:13"
																		},
																		"nativeSrc": "6027:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6027:18:13"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6047:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6047:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6020:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6020:6:13"
																},
																"nativeSrc": "6020:34:13",
																"nodeType": "YulFunctionCall",
																"src": "6020:34:13"
															},
															"nativeSrc": "6020:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "6020:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5715:345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5825:9:13",
														"nodeType": "YulTypedName",
														"src": "5825:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5836:6:13",
														"nodeType": "YulTypedName",
														"src": "5836:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:13",
														"nodeType": "YulTypedName",
														"src": "5844:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5852:6:13",
														"nodeType": "YulTypedName",
														"src": "5852:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5863:4:13",
														"nodeType": "YulTypedName",
														"src": "5863:4:13",
														"type": ""
													}
												],
												"src": "5715:345:13"
											},
											{
												"body": {
													"nativeSrc": "6166:76:13",
													"nodeType": "YulBlock",
													"src": "6166:76:13",
													"statements": [
														{
															"nativeSrc": "6176:26:13",
															"nodeType": "YulAssignment",
															"src": "6176:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6188:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6188:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6199:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6199:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6184:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6184:3:13"
																},
																"nativeSrc": "6184:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6184:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6176:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6176:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6218:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6218:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6229:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6229:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6211:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6211:6:13"
																},
																"nativeSrc": "6211:25:13",
																"nodeType": "YulFunctionCall",
																"src": "6211:25:13"
															},
															"nativeSrc": "6211:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "6211:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6065:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6135:9:13",
														"nodeType": "YulTypedName",
														"src": "6135:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6146:6:13",
														"nodeType": "YulTypedName",
														"src": "6146:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6157:4:13",
														"nodeType": "YulTypedName",
														"src": "6157:4:13",
														"type": ""
													}
												],
												"src": "6065:177:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_a8df1003b4f1898b3f4e673d2d141aba9f3cf0ab33f770d9445773bff9bb0c84__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Marketing wallet cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Address is blacklisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1f55ae6815dfdfb35faf31c9e38c52bf64d3d72c827fc76be01fb5a5548d4d4d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Exceeds max transaction amount\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_eb7ec3ab8cf4e54e1949e272237f629c67bd685fc80d9d02b42820f52828d272__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Exceeds max wallet size\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260026008556003600955348015610019575f5ffd5b50604051611d6e380380611d6e833981016040819052610038916106aa565b604051806040016040528060088152602001674c756749742e636f60c01b815250604051806040016040528060038152602001624c474760e81b8152508160039081610084919061076e565b506004610091828261076e565b50506006805460ff191690555060016007556001600160a01b0381166100fe5760405162461bcd60e51b815260206004820152601f60248201527f4d61726b6574696e672077616c6c65742063616e6e6f74206265207a65726f0060448201526064015b60405180910390fd5b6101085f336101e5565b506101337fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775336101e5565b50600a80546001600160a01b0319166001600160a01b03831617905561016660646b033b2e3c9fd0803ce800000061083c565b600b5561018060326b033b2e3c9fd0803ce800000061083c565b600c55335f818152600d60205260408082208054600160ff19918216811790925530845282842080548216831790556001600160a01b038616845291909220805490911690911790556101df906b033b2e3c9fd0803ce8000000610292565b50610898565b5f8281526005602090815260408083206001600160a01b038516845290915281205460ff16610289575f8381526005602090815260408083206001600160a01b03861684529091529020805460ff191660011790556102413390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600161028c565b505f5b92915050565b6001600160a01b0382166102bb5760405163ec442f0560e01b81525f60048201526024016100f5565b6102c65f83836102ca565b5050565b6102d261053c565b6001600160a01b03831615806102ef57506001600160a01b038216155b15610304576102ff838383610584565b505050565b6001600160a01b0383165f908152600e602052604090205460ff1615801561034457506001600160a01b0382165f908152600e602052604090205460ff16155b6103905760405162461bcd60e51b815260206004820152601660248201527f4164647265737320697320626c61636b6c69737465640000000000000000000060448201526064016100f5565b6001600160a01b0383165f908152600d602052604090205460ff161580156103d057506001600160a01b0382165f908152600d602052604090205460ff16155b1561053157600b548111156104275760405162461bcd60e51b815260206004820152601e60248201527f45786365656473206d6178207472616e73616374696f6e20616d6f756e74000060448201526064016100f5565b600c5481610449846001600160a01b03165f9081526020819052604090205490565b610453919061085b565b11156104a15760405162461bcd60e51b815260206004820152601760248201527f45786365656473206d61782077616c6c65742073697a6500000000000000000060448201526064016100f5565b5f6064600854836104b2919061086e565b6104bc919061083c565b90505f6064600954846104cf919061086e565b6104d9919061083c565b90505f6104e6828461085b565b9050801561052d57600a546105069087906001600160a01b031685610584565b610511863084610584565b61052586866105208488610885565b610584565b505050505050565b5050505b6102ff838383610584565b60065460ff16156105825760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016100f5565b565b6001600160a01b0383166105ae578060025f8282546105a3919061085b565b9091555061061e9050565b6001600160a01b0383165f90815260208190526040902054818110156106005760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100f5565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661063a57600280548290039055610658565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161069d91815260200190565b60405180910390a3505050565b5f602082840312156106ba575f5ffd5b81516001600160a01b03811681146106d0575f5ffd5b9392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806106ff57607f821691505b60208210810361071d57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156102ff57805f5260205f20601f840160051c810160208510156107485750805b601f840160051c820191505b81811015610767575f8155600101610754565b5050505050565b81516001600160401b03811115610787576107876106d7565b61079b8161079584546106eb565b84610723565b6020601f8211600181146107cd575f83156107b65750848201515b5f19600385901b1c1916600184901b178455610767565b5f84815260208120601f198516915b828110156107fc57878501518255602094850194600190920191016107dc565b508482101561081957868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b5f8261085657634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561028c5761028c610828565b808202811582820484141761028c5761028c610828565b8181038181111561028c5761028c610828565b6114c9806108a55f395ff3fe608060405234801561000f575f5ffd5b50600436106101fd575f3560e01c80636b67c4df1161011457806395d89b41116100a9578063a9059cbb11610079578063a9059cbb14610435578063c8c8ebe414610448578063d547741f14610451578063dd62ed3e14610464578063fe575a871461049c575f5ffd5b806395d89b411461040a57806398118cb4146104125780639d913ef51461041b578063a217fddf1461042e575f5ffd5b806379cc6790116100e457806379cc6790146103d35780638456cb59146103e65780638f3fa860146103ee57806391d14854146103f7575f5ffd5b80636b67c4df1461036357806370a082311461036c57806375b238fc1461039457806375f0a874146103a8575f5ffd5b80632f2ff15d116101955780633f4ba83a116101655780633f4ba83a1461030857806342966c68146103105780635342acb4146103235780635c975abb146103455780635d098b3814610350575f5ffd5b80632f2ff15d146102c057806330b94cd5146102d3578063313ce567146102e657806336568abe146102f5575f5ffd5b8063153b0d1e116101d0578063153b0d1e1461026657806318160ddd1461027957806323b872dd1461028b578063248a9ca31461029e575f5ffd5b806301ffc9a71461020157806306fdde0314610229578063095ea7b31461023e5780630b78f9c014610251575b5f5ffd5b61021461020f366004611210565b6104be565b60405190151581526020015b60405180910390f35b6102316104ce565b604051610220919061123e565b61021461024c36600461128e565b61055e565b61026461025f3660046112b6565b610575565b005b6102646102743660046112d6565b610634565b6002545b604051908152602001610220565b61021461029936600461130f565b6106aa565b61027d6102ac366004611349565b5f9081526005602052604090206001015490565b6102646102ce366004611360565b6106cd565b6102646102e13660046112d6565b6106f7565b60405160128152602001610220565b610264610303366004611360565b610739565b610264610771565b61026461031e366004611349565b610793565b61021461033136600461138a565b600d6020525f908152604090205460ff1681565b60065460ff16610214565b61026461035e36600461138a565b61079d565b61027d60085481565b61027d61037a36600461138a565b6001600160a01b03165f9081526020819052604090205490565b61027d5f5160206114745f395f51905f5281565b600a546103bb906001600160a01b031681565b6040516001600160a01b039091168152602001610220565b6102646103e136600461128e565b61085f565b610264610878565b61027d600c5481565b610214610405366004611360565b610897565b6102316108c1565b61027d60095481565b6102646104293660046112b6565b6108d0565b61027d5f81565b61021461044336600461128e565b6109db565b61027d600b5481565b61026461045f366004611360565b6109e8565b61027d6104723660046113a3565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6102146104aa36600461138a565b600e6020525f908152604090205460ff1681565b5f6104c882610a0c565b92915050565b6060600380546104dd906113cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610509906113cb565b80156105545780601f1061052b57610100808354040283529160200191610554565b820191905f5260205f20905b81548152906001019060200180831161053757829003601f168201915b5050505050905090565b5f3361056b818585610a40565b5060019392505050565b5f5160206114745f395f51905f5261058c81610a4d565b600a6105988385611417565b11156105eb5760405162461bcd60e51b815260206004820152601c60248201527f546f74616c20666565732063616e6e6f7420657863656564203130250000000060448201526064015b60405180910390fd5b6008839055600982905560408051848152602081018490527f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a191015b60405180910390a1505050565b5f5160206114745f395f51905f5261064b81610a4d565b6001600160a01b0383165f818152600e6020908152604091829020805460ff191686151590811790915591519182527f6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac910160405180910390a2505050565b5f336106b7858285610a57565b6106c2858585610acc565b506001949350505050565b5f828152600560205260409020600101546106e781610a4d565b6106f18383610b29565b50505050565b5f5160206114745f395f51905f5261070e81610a4d565b506001600160a01b03919091165f908152600d60205260409020805460ff1916911515919091179055565b6001600160a01b03811633146107625760405163334bd91960e11b815260040160405180910390fd5b61076c8282610bba565b505050565b5f5160206114745f395f51905f5261078881610a4d565b610790610c25565b50565b6107903382610c77565b5f5160206114745f395f51905f526107b481610a4d565b6001600160a01b03821661080a5760405162461bcd60e51b815260206004820152601f60248201527f4d61726b6574696e672077616c6c65742063616e6e6f74206265207a65726f0060448201526064016105e2565b600a80546001600160a01b0319166001600160a01b0384169081179091556040519081527fbf86feedee5b30c30a8243bd21deebb704d141478d39b1be04fe5ee739f214e79060200160405180910390a15050565b61086a823383610a57565b6108748282610c77565b5050565b5f5160206114745f395f51905f5261088f81610a4d565b610790610cab565b5f9182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600480546104dd906113cb565b5f5160206114745f395f51905f526108e781610a4d565b6108ff6103e86b033b2e3c9fd0803ce800000061142a565b83101561093f5760405162461bcd60e51b815260206004820152600e60248201526d4d617820545820746f6f206c6f7760901b60448201526064016105e2565b6109576103e86b033b2e3c9fd0803ce800000061142a565b82101561099b5760405162461bcd60e51b81526020600482015260126024820152714d61782077616c6c657420746f6f206c6f7760701b60448201526064016105e2565b600b839055600c82905560408051848152602081018490527fb6cf947475d47632612a3265c7bc83f5cfed7429546220bfb088c3634f91c2299101610627565b5f3361056b818585610acc565b5f82815260056020526040902060010154610a0281610a4d565b6106f18383610bba565b5f6001600160e01b03198216637965db0b60e01b14806104c857506301ffc9a760e01b6001600160e01b03198316146104c8565b61076c8383836001610ce8565b6107908133610dba565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146106f15781811015610abe57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016105e2565b6106f184848484035f610ce8565b6001600160a01b038316610af557604051634b637e8f60e11b81525f60048201526024016105e2565b6001600160a01b038216610b1e5760405163ec442f0560e01b81525f60048201526024016105e2565b61076c838383610df3565b5f610b348383610897565b610bb3575f8381526005602090815260408083206001600160a01b03861684529091529020805460ff19166001179055610b6b3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016104c8565b505f6104c8565b5f610bc58383610897565b15610bb3575f8381526005602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016104c8565b610c2d611059565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610ca057604051634b637e8f60e11b81525f60048201526024016105e2565b610874825f83610df3565b610cb36110a4565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c5a3390565b6001600160a01b038416610d115760405163e602df0560e01b81525f60048201526024016105e2565b6001600160a01b038316610d3a57604051634a1406b160e11b81525f60048201526024016105e2565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156106f157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610dac91815260200190565b60405180910390a350505050565b610dc48282610897565b6108745760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016105e2565b610dfb6110a4565b6001600160a01b0383161580610e1857506001600160a01b038216155b15610e285761076c8383836110ea565b6001600160a01b0383165f908152600e602052604090205460ff16158015610e6857506001600160a01b0382165f908152600e602052604090205460ff16155b610ead5760405162461bcd60e51b81526020600482015260166024820152751059191c995cdcc81a5cc8189b1858dadb1a5cdd195960521b60448201526064016105e2565b6001600160a01b0383165f908152600d602052604090205460ff16158015610eed57506001600160a01b0382165f908152600d602052604090205460ff16155b1561104e57600b54811115610f445760405162461bcd60e51b815260206004820152601e60248201527f45786365656473206d6178207472616e73616374696f6e20616d6f756e74000060448201526064016105e2565b600c5481610f66846001600160a01b03165f9081526020819052604090205490565b610f709190611417565b1115610fbe5760405162461bcd60e51b815260206004820152601760248201527f45786365656473206d61782077616c6c65742073697a6500000000000000000060448201526064016105e2565b5f606460085483610fcf9190611449565b610fd9919061142a565b90505f606460095484610fec9190611449565b610ff6919061142a565b90505f6110038284611417565b9050801561104a57600a546110239087906001600160a01b0316856110ea565b61102e8630846110ea565b611042868661103d8488611460565b6110ea565b505050505050565b5050505b61076c8383836110ea565b60065460ff166110a25760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105e2565b565b60065460ff16156110a25760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105e2565b6001600160a01b038316611114578060025f8282546111099190611417565b909155506111849050565b6001600160a01b0383165f90815260208190526040902054818110156111665760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016105e2565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166111a0576002805482900390556111be565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161120391815260200190565b60405180910390a3505050565b5f60208284031215611220575f5ffd5b81356001600160e01b031981168114611237575f5ffd5b9392505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114611289575f5ffd5b919050565b5f5f6040838503121561129f575f5ffd5b6112a883611273565b946020939093013593505050565b5f5f604083850312156112c7575f5ffd5b50508035926020909101359150565b5f5f604083850312156112e7575f5ffd5b6112f083611273565b915060208301358015158114611304575f5ffd5b809150509250929050565b5f5f5f60608486031215611321575f5ffd5b61132a84611273565b925061133860208501611273565b929592945050506040919091013590565b5f60208284031215611359575f5ffd5b5035919050565b5f5f60408385031215611371575f5ffd5b8235915061138160208401611273565b90509250929050565b5f6020828403121561139a575f5ffd5b61123782611273565b5f5f604083850312156113b4575f5ffd5b6113bd83611273565b915061138160208401611273565b600181811c908216806113df57607f821691505b6020821081036113fd57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156104c8576104c8611403565b5f8261144457634e487b7160e01b5f52601260045260245ffd5b500490565b80820281158282048414176104c8576104c8611403565b818103818111156104c8576104c861140356fea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220b1e0272f98e6d173bcb9e6c74035d9ac1fbf042f9fb1d585f10d703661b07e9e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2 PUSH1 0x8 SSTORE PUSH1 0x3 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x19 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1D6E CODESIZE SUB DUP1 PUSH2 0x1D6E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x38 SWAP2 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x4C756749742E636F PUSH1 0xC0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4C4747 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x76E JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x91 DUP3 DUP3 PUSH2 0x76E JUMP JUMPDEST POP POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E672077616C6C65742063616E6E6F74206265207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x108 PUSH0 CALLER PUSH2 0x1E5 JUMP JUMPDEST POP PUSH2 0x133 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x1E5 JUMP JUMPDEST POP PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH2 0x166 PUSH1 0x64 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x83C JUMP JUMPDEST PUSH1 0xB SSTORE PUSH2 0x180 PUSH1 0x32 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x83C JUMP JUMPDEST PUSH1 0xC SSTORE CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE ADDRESS DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1DF SWAP1 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x292 JUMP JUMPDEST POP PUSH2 0x898 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x289 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x241 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x28C JUMP JUMPDEST POP PUSH0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2BB JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xF5 JUMP JUMPDEST PUSH2 0x2C6 PUSH0 DUP4 DUP4 PUSH2 0x2CA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2D2 PUSH2 0x53C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0x2EF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x304 JUMPI PUSH2 0x2FF DUP4 DUP4 DUP4 PUSH2 0x584 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x344 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x390 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320697320626C61636B6C697374656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x3D0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x531 JUMPI PUSH1 0xB SLOAD DUP2 GT ISZERO PUSH2 0x427 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178207472616E73616374696F6E20616D6F756E740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF5 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 PUSH2 0x449 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST GT ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D61782077616C6C65742073697A65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF5 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP4 PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0x86E JUMP JUMPDEST PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x83C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP5 PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x86E JUMP JUMPDEST PUSH2 0x4D9 SWAP2 SWAP1 PUSH2 0x83C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x4E6 DUP3 DUP5 PUSH2 0x85B JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0xA SLOAD PUSH2 0x506 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH2 0x584 JUMP JUMPDEST PUSH2 0x511 DUP7 ADDRESS DUP5 PUSH2 0x584 JUMP JUMPDEST PUSH2 0x525 DUP7 DUP7 PUSH2 0x520 DUP5 DUP9 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x584 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP JUMPDEST PUSH2 0x2FF DUP4 DUP4 DUP4 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x582 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5AE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5A3 SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x61E SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x600 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x63A JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x658 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x69D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x6FF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x71D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2FF JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x748 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x767 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x754 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x787 JUMPI PUSH2 0x787 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x79B DUP2 PUSH2 0x795 DUP5 SLOAD PUSH2 0x6EB JUMP JUMPDEST DUP5 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x7CD JUMPI PUSH0 DUP4 ISZERO PUSH2 0x7B6 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x767 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x7FC JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x7DC JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x819 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x856 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x28C JUMPI PUSH2 0x28C PUSH2 0x828 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x28C JUMPI PUSH2 0x28C PUSH2 0x828 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x28C JUMPI PUSH2 0x28C PUSH2 0x828 JUMP JUMPDEST PUSH2 0x14C9 DUP1 PUSH2 0x8A5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B67C4DF GT PUSH2 0x114 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0xC8C8EBE4 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x49C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x98118CB4 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x9D913EF5 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x42E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x79CC6790 GT PUSH2 0xE4 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x8F3FA860 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3F7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6B67C4DF EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x3A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x165 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x5D098B38 EQ PUSH2 0x350 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x30B94CD5 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x153B0D1E GT PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x29E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xB78F9C0 EQ PUSH2 0x251 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x214 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH2 0x214 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x55E JUMP JUMPDEST PUSH2 0x264 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x264 PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0x634 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x220 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x130F JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x27D PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x264 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1360 JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x264 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x220 JUMP JUMPDEST PUSH2 0x264 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x1360 JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST PUSH2 0x264 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x264 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0x793 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x138A JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x214 JUMP JUMPDEST PUSH2 0x264 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x138A JUMP JUMPDEST PUSH2 0x79D JUMP JUMPDEST PUSH2 0x27D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x138A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x27D PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1474 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x3BB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x220 JUMP JUMPDEST PUSH2 0x264 PUSH2 0x3E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x85F JUMP JUMPDEST PUSH2 0x264 PUSH2 0x878 JUMP JUMPDEST PUSH2 0x27D PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x1360 JUMP JUMPDEST PUSH2 0x897 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x264 PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x8D0 JUMP JUMPDEST PUSH2 0x27D PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x9DB JUMP JUMPDEST PUSH2 0x27D PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x264 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x1360 JUMP JUMPDEST PUSH2 0x9E8 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x472 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x4AA CALLDATASIZE PUSH1 0x4 PUSH2 0x138A JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x4C8 DUP3 PUSH2 0xA0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4DD SWAP1 PUSH2 0x13CB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x509 SWAP1 PUSH2 0x13CB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x554 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x52B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x554 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x537 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x56B DUP2 DUP6 DUP6 PUSH2 0xA40 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1474 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x58C DUP2 PUSH2 0xA4D JUMP JUMPDEST PUSH1 0xA PUSH2 0x598 DUP4 DUP6 PUSH2 0x1417 JUMP JUMPDEST GT ISZERO PUSH2 0x5EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20666565732063616E6E6F74206578636565642031302500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP4 SWAP1 SSTORE PUSH1 0x9 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x5C6323BF1C2D7AAEA2C091A4751C1C87AF7F2864650C336507A77D0557AF37A1 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1474 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x64B DUP2 PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x6B7 DUP6 DUP3 DUP6 PUSH2 0xA57 JUMP JUMPDEST PUSH2 0x6C2 DUP6 DUP6 DUP6 PUSH2 0xACC JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x6E7 DUP2 PUSH2 0xA4D JUMP JUMPDEST PUSH2 0x6F1 DUP4 DUP4 PUSH2 0xB29 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1474 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x70E DUP2 PUSH2 0xA4D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x762 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76C DUP3 DUP3 PUSH2 0xBBA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1474 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x788 DUP2 PUSH2 0xA4D JUMP JUMPDEST PUSH2 0x790 PUSH2 0xC25 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x790 CALLER DUP3 PUSH2 0xC77 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1474 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x7B4 DUP2 PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x80A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E672077616C6C65742063616E6E6F74206265207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xBF86FEEDEE5B30C30A8243BD21DEEBB704D141478D39B1BE04FE5EE739F214E7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x86A DUP3 CALLER DUP4 PUSH2 0xA57 JUMP JUMPDEST PUSH2 0x874 DUP3 DUP3 PUSH2 0xC77 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1474 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x88F DUP2 PUSH2 0xA4D JUMP JUMPDEST PUSH2 0x790 PUSH2 0xCAB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4DD SWAP1 PUSH2 0x13CB JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1474 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x8E7 DUP2 PUSH2 0xA4D JUMP JUMPDEST PUSH2 0x8FF PUSH2 0x3E8 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x142A JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x93F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4D617820545820746F6F206C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x957 PUSH2 0x3E8 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x142A JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x99B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4D61782077616C6C657420746F6F206C6F77 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xB DUP4 SWAP1 SSTORE PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xB6CF947475D47632612A3265C7BC83F5CFED7429546220BFB088C3634F91C229 SWAP2 ADD PUSH2 0x627 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x56B DUP2 DUP6 DUP6 PUSH2 0xACC JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA02 DUP2 PUSH2 0xA4D JUMP JUMPDEST PUSH2 0x6F1 DUP4 DUP4 PUSH2 0xBBA JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4C8 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x76C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0x790 DUP2 CALLER PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x6F1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xABE JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x6F1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x76C DUP4 DUP4 DUP4 PUSH2 0xDF3 JUMP JUMPDEST PUSH0 PUSH2 0xB34 DUP4 DUP4 PUSH2 0x897 JUMP JUMPDEST PUSH2 0xBB3 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xB6B CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4C8 JUMP JUMPDEST POP PUSH0 PUSH2 0x4C8 JUMP JUMPDEST PUSH0 PUSH2 0xBC5 DUP4 DUP4 PUSH2 0x897 JUMP JUMPDEST ISZERO PUSH2 0xBB3 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0xC2D PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCA0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x874 DUP3 PUSH0 DUP4 PUSH2 0xDF3 JUMP JUMPDEST PUSH2 0xCB3 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xC5A CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD11 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD3A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x6F1 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDAC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xDC4 DUP3 DUP3 PUSH2 0x897 JUMP JUMPDEST PUSH2 0x874 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0xDFB PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0xE18 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0xE28 JUMPI PUSH2 0x76C DUP4 DUP4 DUP4 PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xE68 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xEAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1059191C995CDCC81A5CC8189B1858DADB1A5CDD1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xEED JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x104E JUMPI PUSH1 0xB SLOAD DUP2 GT ISZERO PUSH2 0xF44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178207472616E73616374696F6E20616D6F756E740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 PUSH2 0xF66 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF70 SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST GT ISZERO PUSH2 0xFBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D61782077616C6C65742073697A65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP4 PUSH2 0xFCF SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH2 0xFD9 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP5 PUSH2 0xFEC SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH2 0xFF6 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1003 DUP3 DUP5 PUSH2 0x1417 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x104A JUMPI PUSH1 0xA SLOAD PUSH2 0x1023 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH2 0x10EA JUMP JUMPDEST PUSH2 0x102E DUP7 ADDRESS DUP5 PUSH2 0x10EA JUMP JUMPDEST PUSH2 0x1042 DUP7 DUP7 PUSH2 0x103D DUP5 DUP9 PUSH2 0x1460 JUMP JUMPDEST PUSH2 0x10EA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP JUMPDEST PUSH2 0x76C DUP4 DUP4 DUP4 PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x10A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1114 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1109 SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1184 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1166 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11A0 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1203 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1220 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1237 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1289 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x129F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x12A8 DUP4 PUSH2 0x1273 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x12F0 DUP4 PUSH2 0x1273 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1304 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1321 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x132A DUP5 PUSH2 0x1273 JUMP JUMPDEST SWAP3 POP PUSH2 0x1338 PUSH1 0x20 DUP6 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1359 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1371 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1381 PUSH1 0x20 DUP5 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x139A JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1237 DUP3 PUSH2 0x1273 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x13BD DUP4 PUSH2 0x1273 JUMP JUMPDEST SWAP2 POP PUSH2 0x1381 PUSH1 0x20 DUP5 ADD PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x13DF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13FD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4C8 JUMPI PUSH2 0x4C8 PUSH2 0x1403 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1444 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4C8 JUMPI PUSH2 0x4C8 PUSH2 0x1403 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4C8 JUMPI PUSH2 0x4C8 PUSH2 0x1403 JUMP INVALID LOG4 SWAP9 SMOD KECCAK256 TLOAD 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA2646970667358221220B1E0272F98E6D173BCB9E6C7 BLOCKHASH CALLDATALOAD 0xD9 0xAC 0x1F 0xBF DIV 0x2F SWAP16 0xB1 0xD5 DUP6 CALL 0xD PUSH17 0x3661B07E9E64736F6C634300081C003300 ",
							"sourceMap": "377:4934:12:-:0;;;710:1;680:31;;754:1;724:31;;1324:798;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1601:113:5;;;;;;;;;;;;;-1:-1:-1;;;1601:113:5;;;;;;;;;;;;;;;;-1:-1:-1;;;1601:113:5;;;1675:5;1667;:13;;;;;;:::i;:::-;-1:-1:-1;1690:7:5;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;;996:7:3;:15;;-1:-1:-1;;996:15:3;;;-1:-1:-1;996:15:3;1821:7:4;:22;-1:-1:-1;;;;;1406:30:12;::::1;1398:74;;;::::0;-1:-1:-1;;;1398:74:12;;3152:2:13;1398:74:12::1;::::0;::::1;3134:21:13::0;3191:2;3171:18;;;3164:30;3230:33;3210:18;;;3203:61;3281:18;;1398:74:12::1;;;;;;;;;1524:42;2232:4:0;1555:10:12;1524;:42::i;:::-;-1:-1:-1::0;1577:34:12::1;505:23;1600:10;1577;:34::i;:::-;-1:-1:-1::0;1670:15:12::1;:34:::0;;-1:-1:-1;;;;;;1670:34:12::1;-1:-1:-1::0;;;;;1670:34:12;::::1;;::::0;;1738:18:::1;1753:3;599:22;1738:18;:::i;:::-;1715:20;:41:::0;1789:17:::1;1804:2;599:22;1789:17;:::i;:::-;1773:13;:33:::0;1904:10:::1;1886:29;::::0;;;:17:::1;:29;::::0;;;;;:36;;1918:4:::1;-1:-1:-1::0;;1886:36:12;;::::1;::::0;::::1;::::0;;;1959:4:::1;1933:32:::0;;;;;:39;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;1983:35:12;::::1;::::0;;;;;;:42;;;;::::1;::::0;;::::1;::::0;;2083:31:::1;::::0;599:22:::1;2083:5;:31::i;:::-;1324:798:::0;377:4934;;6179:316:0;6256:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:9;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6272:217;6179:316;;;;:::o;7458:208:5:-;-1:-1:-1;;;;;7528:21:5;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:5;;7601:1;7572:32;;;3810:51:13;3783:18;;7572:32:5;3664:203:13;7524:91:5;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;2134:1238:12:-;1239:19:3;:17;:19::i;:::-;-1:-1:-1;;;;;2319:18:12;::::1;::::0;;:38:::1;;-1:-1:-1::0;;;;;;2341:16:12;::::1;::::0;2319:38:::1;2315:123;;;2374:31;2388:4:::0;2394:2;2398:6;2374:13:::1;:31::i;:::-;2134:1238:::0;;;:::o;2315:123::-:1;-1:-1:-1::0;;;;;2467:19:12;::::1;;::::0;;;:13:::1;:19;::::0;;;;;::::1;;2466:20;:42:::0;::::1;;;-1:-1:-1::0;;;;;;2491:17:12;::::1;;::::0;;;:13:::1;:17;::::0;;;;;::::1;;2490:18;2466:42;2458:77;;;::::0;-1:-1:-1;;;2458:77:12;;4074:2:13;2458:77:12::1;::::0;::::1;4056:21:13::0;4113:2;4093:18;;;4086:30;4152:24;4132:18;;;4125:52;4194:18;;2458:77:12::1;3872:346:13::0;2458:77:12::1;-1:-1:-1::0;;;;;2561:23:12;::::1;;::::0;;;:17:::1;:23;::::0;;;;;::::1;;2560:24;:50:::0;::::1;;;-1:-1:-1::0;;;;;;2589:21:12;::::1;;::::0;;;:17:::1;:21;::::0;;;;;::::1;;2588:22;2560:50;2556:757;;;2645:20;;2635:6;:30;;2627:73;;;::::0;-1:-1:-1;;;2627:73:12;;4425:2:13;2627:73:12::1;::::0;::::1;4407:21:13::0;4464:2;4444:18;;;4437:30;4503:32;4483:18;;;4476:60;4553:18;;2627:73:12::1;4223:354:13::0;2627:73:12::1;2749:13;::::0;2739:6;2723:13:::1;2733:2:::0;-1:-1:-1;;;;;3095:18:5;3069:7;3095:18;;;;;;;;;;;;3004:116;2723:13:12::1;:22;;;;:::i;:::-;:39;;2715:75;;;::::0;-1:-1:-1;;;2715:75:12;;4914:2:13;2715:75:12::1;::::0;::::1;4896:21:13::0;4953:2;4933:18;;;4926:30;4992:25;4972:18;;;4965:53;5035:18;;2715:75:12::1;4712:347:13::0;2715:75:12::1;2819:23;2871:3;2855:12;;2846:6;:21;;;;:::i;:::-;2845:29;;;;:::i;:::-;2819:55;;2889:23;2941:3;2925:12;;2916:6;:21;;;;:::i;:::-;2915:29;;;;:::i;:::-;2889:55:::0;-1:-1:-1;2959:16:12::1;2978:33;2889:55:::0;2978:15;:33:::1;:::i;:::-;2959:52:::0;-1:-1:-1;3044:12:12;;3040:262:::1;;3097:15;::::0;3077:53:::1;::::0;3091:4;;-1:-1:-1;;;;;3097:15:12::1;3114::::0;3077:13:::1;:53::i;:::-;3149:51;3163:4:::0;3177::::1;3184:15:::0;3149:13:::1;:51::i;:::-;3219:42;3233:4:::0;3239:2;3243:17:::1;3252:8:::0;3243:6;:17:::1;:::i;:::-;3219:13;:42::i;:::-;3280:7;;;2134:1238:::0;;;:::o;3040:262::-:1;2612:701;;;2556:757;3333:31;3347:4:::0;3353:2;3357:6;3333:13:::1;:31::i;1767:106:3:-:0;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:3;;5572:2:13;1828:38:3;;;5554:21:13;5611:2;5591:18;;;5584:30;-1:-1:-1;;;5630:18:13;;;5623:46;5686:18;;1828:38:3;5370:340:13;1828:38:3;1767:106::o;6008:1107:5:-;-1:-1:-1;;;;;6097:18:5;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:5;;-1:-1:-1;6093:540:5;;-1:-1:-1;;;;;6307:15:5;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:5;;-1:-1:-1;;;;;5935:32:13;;6386:50:5;;;5917:51:13;5984:18;;;5977:34;;;6027:18;;;6020:34;;;5890:18;;6386:50:5;5715:345:13;6336:115:5;-1:-1:-1;;;;;6571:15:5;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:5;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:5;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:5;7092:4;-1:-1:-1;;;;;7083:25:5;;7102:5;7083:25;;;;6211::13;;6199:2;6184:18;;6065:177;7083:25:5;;;;;;;;6008:1107;;;:::o;14:290:13:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:13;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:13:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:13;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;952:518;;;:::o;1646:1299::-;1766:10;;-1:-1:-1;;;;;1788:30:13;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;1996:4;2027:2;2016:14;;2044:1;2039:649;;;;2732:1;2749:6;2746:89;;;-1:-1:-1;2801:19:13;;;2795:26;2746:89;-1:-1:-1;;1603:1:13;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2848:81;;2009:930;;2039:649;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2075:20:13;;;2193:222;2207:7;2204:1;2201:14;2193:222;;;2289:19;;;2283:26;2268:42;;2396:4;2381:20;;;;2349:1;2337:14;;;;2223:12;2193:222;;;2197:3;2443:6;2434:7;2431:19;2428:201;;;2504:19;;;2498:26;-1:-1:-1;;2587:1:13;2583:14;;;2599:3;2579:24;2575:37;2571:42;2556:58;2541:74;;2428:201;-1:-1:-1;;;;2675:1:13;2659:14;;;2655:22;2642:36;;-1:-1:-1;1646:1299:13:o;3310:127::-;3371:10;3366:3;3362:20;3359:1;3352:31;3402:4;3399:1;3392:15;3426:4;3423:1;3416:15;3442:217;3482:1;3508;3498:132;;3552:10;3547:3;3543:20;3540:1;3533:31;3587:4;3584:1;3577:15;3615:4;3612:1;3605:15;3498:132;-1:-1:-1;3644:9:13;;3442:217::o;4582:125::-;4647:9;;;4668:10;;;4665:36;;;4681:18;;:::i;5064:168::-;5137:9;;;5168;;5185:15;;;5179:22;;5165:37;5155:71;;5206:18;;:::i;5237:128::-;5304:9;;;5325:11;;;5322:37;;;5339:18;;:::i;6065:177::-;377:4934:12;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_1441": {
									"entryPoint": null,
									"id": 1441,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1094": {
									"entryPoint": 2624,
									"id": 1094,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1154": {
									"entryPoint": 3304,
									"id": 1154,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1076": {
									"entryPoint": 3191,
									"id": 1076,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 3514,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 2637,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 2857,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1365": {
									"entryPoint": null,
									"id": 1365,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_606": {
									"entryPoint": 3243,
									"id": 606,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_579": {
									"entryPoint": 4260,
									"id": 579,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_590": {
									"entryPoint": 4185,
									"id": 590,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 3002,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1202": {
									"entryPoint": 2647,
									"id": 1202,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_933": {
									"entryPoint": 2764,
									"id": 933,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_622": {
									"entryPoint": 3109,
									"id": 622,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1010": {
									"entryPoint": 4330,
									"id": 1010,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1712": {
									"entryPoint": 3571,
									"id": 1712,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_830": {
									"entryPoint": null,
									"id": 830,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_854": {
									"entryPoint": 1374,
									"id": 854,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_789": {
									"entryPoint": null,
									"id": 789,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1326": {
									"entryPoint": 2143,
									"id": 1326,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1305": {
									"entryPoint": 1939,
									"id": 1305,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": null,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 1741,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 2199,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isBlacklisted_1468": {
									"entryPoint": null,
									"id": 1468,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isExcludedFromFee_1464": {
									"entryPoint": null,
									"id": 1464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidityFee_1454": {
									"entryPoint": null,
									"id": 1454,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@marketingFee_1451": {
									"entryPoint": null,
									"id": 1451,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@marketingWallet_1456": {
									"entryPoint": null,
									"id": 1456,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxTransactionAmount_1458": {
									"entryPoint": null,
									"id": 1458,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxWalletSize_1460": {
									"entryPoint": null,
									"id": 1460,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_749": {
									"entryPoint": 1230,
									"id": 749,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1863": {
									"entryPoint": 2168,
									"id": 1863,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_567": {
									"entryPoint": null,
									"id": 567,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 1849,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 2536,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBlacklist_1836": {
									"entryPoint": 1588,
									"id": 1836,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setFeeExclusion_1853": {
									"entryPoint": 1783,
									"id": 1853,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setFees_1772": {
									"entryPoint": 1397,
									"id": 1772,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setMarketingWallet_1739": {
									"entryPoint": 1949,
									"id": 1739,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMaxLimits_1814": {
									"entryPoint": 2256,
									"id": 1814,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1406": {
									"entryPoint": null,
									"id": 1406,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1888": {
									"entryPoint": 1214,
									"id": 1888,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 2572,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_758": {
									"entryPoint": 2241,
									"id": 758,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_776": {
									"entryPoint": null,
									"id": 776,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_886": {
									"entryPoint": 1706,
									"id": 886,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_813": {
									"entryPoint": 2523,
									"id": 813,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1873": {
									"entryPoint": 1905,
									"id": 1873,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 4937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 4960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f55ae6815dfdfb35faf31c9e38c52bf64d3d72c827fc76be01fb5a5548d4d4d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2ca3153f92d285b48e1a6bebdcbc4d3ee7498a2363249a201db98c3f869548dc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ad570219bc04ec8fe93d528087e9ef29c51349a8200323b11e6294bbeb0858a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a8df1003b4f1898b3f4e673d2d141aba9f3cf0ab33f770d9445773bff9bb0c84__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c4e1d858486171900ca25120b06e2607ab69f3bcfcf4340f0c39befc3a4fa003__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb7ec3ab8cf4e54e1949e272237f629c67bd685fc80d9d02b42820f52828d272__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5123,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9686:13",
										"nodeType": "YulBlock",
										"src": "0:9686:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:217:13",
													"nodeType": "YulBlock",
													"src": "83:217:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:13",
																"nodeType": "YulBlock",
																"src": "129:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:13",
																					"nodeType": "YulLiteral",
																					"src": "138:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:13",
																					"nodeType": "YulLiteral",
																					"src": "141:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:13"
																			},
																			"nativeSrc": "131:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:13"
																		},
																		"nativeSrc": "131:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:13"
																		},
																		"nativeSrc": "100:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:13",
																		"nodeType": "YulLiteral",
																		"src": "125:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:13"
																},
																"nativeSrc": "96:32:13",
																"nodeType": "YulFunctionCall",
																"src": "96:32:13"
															},
															"nativeSrc": "93:52:13",
															"nodeType": "YulIf",
															"src": "93:52:13"
														},
														{
															"nativeSrc": "154:36:13",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:13"
																},
																"nativeSrc": "167:23:13",
																"nodeType": "YulFunctionCall",
																"src": "167:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:13",
																	"nodeType": "YulTypedName",
																	"src": "158:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:13",
																"nodeType": "YulBlock",
																"src": "254:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:13",
																					"nodeType": "YulLiteral",
																					"src": "263:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:13",
																					"nodeType": "YulLiteral",
																					"src": "266:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:13"
																			},
																			"nativeSrc": "256:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:13"
																		},
																		"nativeSrc": "256:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "234:3:13",
																								"nodeType": "YulLiteral",
																								"src": "234:3:13",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "239:10:13",
																								"nodeType": "YulLiteral",
																								"src": "239:10:13",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "230:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:13"
																						},
																						"nativeSrc": "230:20:13",
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:13"
																				},
																				"nativeSrc": "219:32:13",
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:13"
																		},
																		"nativeSrc": "209:43:13",
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:13"
																},
																"nativeSrc": "202:51:13",
																"nodeType": "YulFunctionCall",
																"src": "202:51:13"
															},
															"nativeSrc": "199:71:13",
															"nodeType": "YulIf",
															"src": "199:71:13"
														},
														{
															"nativeSrc": "279:15:13",
															"nodeType": "YulAssignment",
															"src": "279:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:13",
																"nodeType": "YulIdentifier",
																"src": "289:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:286:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:13",
														"nodeType": "YulTypedName",
														"src": "49:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:13",
														"nodeType": "YulTypedName",
														"src": "60:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:13",
														"nodeType": "YulTypedName",
														"src": "72:6:13",
														"type": ""
													}
												],
												"src": "14:286:13"
											},
											{
												"body": {
													"nativeSrc": "400:92:13",
													"nodeType": "YulBlock",
													"src": "400:92:13",
													"statements": [
														{
															"nativeSrc": "410:26:13",
															"nodeType": "YulAssignment",
															"src": "410:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "433:2:13",
																		"nodeType": "YulLiteral",
																		"src": "433:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "418:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:13"
																},
																"nativeSrc": "418:18:13",
																"nodeType": "YulFunctionCall",
																"src": "418:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "410:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "452:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "477:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "470:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:13"
																				},
																				"nativeSrc": "470:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "463:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:13"
																		},
																		"nativeSrc": "463:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "445:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:13"
																},
																"nativeSrc": "445:41:13",
																"nodeType": "YulFunctionCall",
																"src": "445:41:13"
															},
															"nativeSrc": "445:41:13",
															"nodeType": "YulExpressionStatement",
															"src": "445:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "305:187:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "369:9:13",
														"nodeType": "YulTypedName",
														"src": "369:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "380:6:13",
														"nodeType": "YulTypedName",
														"src": "380:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "391:4:13",
														"nodeType": "YulTypedName",
														"src": "391:4:13",
														"type": ""
													}
												],
												"src": "305:187:13"
											},
											{
												"body": {
													"nativeSrc": "618:297:13",
													"nodeType": "YulBlock",
													"src": "618:297:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "635:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "635:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "646:2:13",
																		"nodeType": "YulLiteral",
																		"src": "646:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "628:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "628:6:13"
																},
																"nativeSrc": "628:21:13",
																"nodeType": "YulFunctionCall",
																"src": "628:21:13"
															},
															"nativeSrc": "628:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "628:21:13"
														},
														{
															"nativeSrc": "658:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "658:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "678:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "678:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "672:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "672:5:13"
																},
																"nativeSrc": "672:13:13",
																"nodeType": "YulFunctionCall",
																"src": "672:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "662:6:13",
																	"nodeType": "YulTypedName",
																	"src": "662:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "705:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "705:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "716:2:13",
																				"nodeType": "YulLiteral",
																				"src": "716:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "701:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "701:3:13"
																		},
																		"nativeSrc": "701:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "701:18:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "721:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "721:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "694:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "694:6:13"
																},
																"nativeSrc": "694:34:13",
																"nodeType": "YulFunctionCall",
																"src": "694:34:13"
															},
															"nativeSrc": "694:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "694:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "747:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "747:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "758:2:13",
																				"nodeType": "YulLiteral",
																				"src": "758:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "743:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "743:3:13"
																		},
																		"nativeSrc": "743:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "743:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "767:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "767:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "775:2:13",
																				"nodeType": "YulLiteral",
																				"src": "775:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "763:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "763:3:13"
																		},
																		"nativeSrc": "763:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "763:15:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "780:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "737:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "737:5:13"
																},
																"nativeSrc": "737:50:13",
																"nodeType": "YulFunctionCall",
																"src": "737:50:13"
															},
															"nativeSrc": "737:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "737:50:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "811:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "811:9:13"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "822:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "822:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "807:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "807:3:13"
																				},
																				"nativeSrc": "807:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "807:22:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "831:2:13",
																				"nodeType": "YulLiteral",
																				"src": "831:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "803:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "803:3:13"
																		},
																		"nativeSrc": "803:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "803:31:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "836:1:13",
																		"nodeType": "YulLiteral",
																		"src": "836:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "796:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "796:6:13"
																},
																"nativeSrc": "796:42:13",
																"nodeType": "YulFunctionCall",
																"src": "796:42:13"
															},
															"nativeSrc": "796:42:13",
															"nodeType": "YulExpressionStatement",
															"src": "796:42:13"
														},
														{
															"nativeSrc": "847:62:13",
															"nodeType": "YulAssignment",
															"src": "847:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "863:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "863:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "882:6:13",
																								"nodeType": "YulIdentifier",
																								"src": "882:6:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "890:2:13",
																								"nodeType": "YulLiteral",
																								"src": "890:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "878:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "878:3:13"
																						},
																						"nativeSrc": "878:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "878:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "899:2:13",
																								"nodeType": "YulLiteral",
																								"src": "899:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "895:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "895:3:13"
																						},
																						"nativeSrc": "895:7:13",
																						"nodeType": "YulFunctionCall",
																						"src": "895:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "874:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "874:3:13"
																				},
																				"nativeSrc": "874:29:13",
																				"nodeType": "YulFunctionCall",
																				"src": "874:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "859:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "859:3:13"
																		},
																		"nativeSrc": "859:45:13",
																		"nodeType": "YulFunctionCall",
																		"src": "859:45:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:2:13",
																		"nodeType": "YulLiteral",
																		"src": "906:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "855:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "855:3:13"
																},
																"nativeSrc": "855:54:13",
																"nodeType": "YulFunctionCall",
																"src": "855:54:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "847:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "847:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "497:418:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "587:9:13",
														"nodeType": "YulTypedName",
														"src": "587:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "598:6:13",
														"nodeType": "YulTypedName",
														"src": "598:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "609:4:13",
														"nodeType": "YulTypedName",
														"src": "609:4:13",
														"type": ""
													}
												],
												"src": "497:418:13"
											},
											{
												"body": {
													"nativeSrc": "969:124:13",
													"nodeType": "YulBlock",
													"src": "969:124:13",
													"statements": [
														{
															"nativeSrc": "979:29:13",
															"nodeType": "YulAssignment",
															"src": "979:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1001:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1001:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "988:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "988:12:13"
																},
																"nativeSrc": "988:20:13",
																"nodeType": "YulFunctionCall",
																"src": "988:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "979:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "979:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1071:16:13",
																"nodeType": "YulBlock",
																"src": "1071:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1080:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1083:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1083:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1073:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1073:6:13"
																			},
																			"nativeSrc": "1073:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1073:12:13"
																		},
																		"nativeSrc": "1073:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1073:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1030:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1030:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1041:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1041:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1056:3:13",
																										"nodeType": "YulLiteral",
																										"src": "1056:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1061:1:13",
																										"nodeType": "YulLiteral",
																										"src": "1061:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1052:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1052:3:13"
																								},
																								"nativeSrc": "1052:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "1052:11:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1065:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1065:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1048:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1048:3:13"
																						},
																						"nativeSrc": "1048:19:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1048:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1037:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1037:3:13"
																				},
																				"nativeSrc": "1037:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1037:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1027:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1027:2:13"
																		},
																		"nativeSrc": "1027:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1027:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1020:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1020:6:13"
																},
																"nativeSrc": "1020:50:13",
																"nodeType": "YulFunctionCall",
																"src": "1020:50:13"
															},
															"nativeSrc": "1017:70:13",
															"nodeType": "YulIf",
															"src": "1017:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "920:173:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "948:6:13",
														"nodeType": "YulTypedName",
														"src": "948:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "959:5:13",
														"nodeType": "YulTypedName",
														"src": "959:5:13",
														"type": ""
													}
												],
												"src": "920:173:13"
											},
											{
												"body": {
													"nativeSrc": "1185:213:13",
													"nodeType": "YulBlock",
													"src": "1185:213:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1231:16:13",
																"nodeType": "YulBlock",
																"src": "1231:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1240:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1240:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1243:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1243:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1233:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1233:6:13"
																			},
																			"nativeSrc": "1233:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1233:12:13"
																		},
																		"nativeSrc": "1233:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1233:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1206:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1206:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1215:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1215:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1202:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1202:3:13"
																		},
																		"nativeSrc": "1202:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1202:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1227:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1227:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1198:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1198:3:13"
																},
																"nativeSrc": "1198:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1198:32:13"
															},
															"nativeSrc": "1195:52:13",
															"nodeType": "YulIf",
															"src": "1195:52:13"
														},
														{
															"nativeSrc": "1256:39:13",
															"nodeType": "YulAssignment",
															"src": "1256:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1285:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1285:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1266:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1266:18:13"
																},
																"nativeSrc": "1266:29:13",
																"nodeType": "YulFunctionCall",
																"src": "1266:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1256:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																}
															]
														},
														{
															"nativeSrc": "1304:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1304:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1317:1:13",
																"nodeType": "YulLiteral",
																"src": "1317:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1308:5:13",
																	"nodeType": "YulTypedName",
																	"src": "1308:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1327:41:13",
															"nodeType": "YulAssignment",
															"src": "1327:41:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1353:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1353:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1364:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1364:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1349:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1349:3:13"
																		},
																		"nativeSrc": "1349:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1349:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1336:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1336:12:13"
																},
																"nativeSrc": "1336:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1336:32:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1327:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1327:5:13"
																}
															]
														},
														{
															"nativeSrc": "1377:15:13",
															"nodeType": "YulAssignment",
															"src": "1377:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "1387:5:13",
																"nodeType": "YulIdentifier",
																"src": "1387:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1377:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1377:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1098:300:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1143:9:13",
														"nodeType": "YulTypedName",
														"src": "1143:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1154:7:13",
														"nodeType": "YulTypedName",
														"src": "1154:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1166:6:13",
														"nodeType": "YulTypedName",
														"src": "1166:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1174:6:13",
														"nodeType": "YulTypedName",
														"src": "1174:6:13",
														"type": ""
													}
												],
												"src": "1098:300:13"
											},
											{
												"body": {
													"nativeSrc": "1490:259:13",
													"nodeType": "YulBlock",
													"src": "1490:259:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1536:16:13",
																"nodeType": "YulBlock",
																"src": "1536:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1545:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1545:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1548:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1548:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1538:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1538:6:13"
																			},
																			"nativeSrc": "1538:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1538:12:13"
																		},
																		"nativeSrc": "1538:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1538:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1511:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1511:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1520:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1520:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1507:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1507:3:13"
																		},
																		"nativeSrc": "1507:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1507:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1532:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1532:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1503:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1503:3:13"
																},
																"nativeSrc": "1503:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1503:32:13"
															},
															"nativeSrc": "1500:52:13",
															"nodeType": "YulIf",
															"src": "1500:52:13"
														},
														{
															"nativeSrc": "1561:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1561:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1574:1:13",
																"nodeType": "YulLiteral",
																"src": "1574:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1565:5:13",
																	"nodeType": "YulTypedName",
																	"src": "1565:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1584:32:13",
															"nodeType": "YulAssignment",
															"src": "1584:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1606:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1606:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1593:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1593:12:13"
																},
																"nativeSrc": "1593:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1593:23:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1584:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1584:5:13"
																}
															]
														},
														{
															"nativeSrc": "1625:15:13",
															"nodeType": "YulAssignment",
															"src": "1625:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "1635:5:13",
																"nodeType": "YulIdentifier",
																"src": "1635:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1625:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1625:6:13"
																}
															]
														},
														{
															"nativeSrc": "1649:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1649:16:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1664:1:13",
																"nodeType": "YulLiteral",
																"src": "1664:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1653:7:13",
																	"nodeType": "YulTypedName",
																	"src": "1653:7:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1674:43:13",
															"nodeType": "YulAssignment",
															"src": "1674:43:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1702:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1702:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1713:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1713:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1698:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1698:3:13"
																		},
																		"nativeSrc": "1698:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1685:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1685:12:13"
																},
																"nativeSrc": "1685:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1685:32:13"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1674:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1674:7:13"
																}
															]
														},
														{
															"nativeSrc": "1726:17:13",
															"nodeType": "YulAssignment",
															"src": "1726:17:13",
															"value": {
																"name": "value_1",
																"nativeSrc": "1736:7:13",
																"nodeType": "YulIdentifier",
																"src": "1736:7:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1726:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1726:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1403:346:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1448:9:13",
														"nodeType": "YulTypedName",
														"src": "1448:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1459:7:13",
														"nodeType": "YulTypedName",
														"src": "1459:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1471:6:13",
														"nodeType": "YulTypedName",
														"src": "1471:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1479:6:13",
														"nodeType": "YulTypedName",
														"src": "1479:6:13",
														"type": ""
													}
												],
												"src": "1403:346:13"
											},
											{
												"body": {
													"nativeSrc": "1838:263:13",
													"nodeType": "YulBlock",
													"src": "1838:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1884:16:13",
																"nodeType": "YulBlock",
																"src": "1884:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1893:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1893:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1896:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1896:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1886:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1886:6:13"
																			},
																			"nativeSrc": "1886:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1886:12:13"
																		},
																		"nativeSrc": "1886:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1886:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1859:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1859:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1868:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1868:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1855:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1855:3:13"
																		},
																		"nativeSrc": "1855:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1855:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1880:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1880:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1851:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:13"
																},
																"nativeSrc": "1851:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1851:32:13"
															},
															"nativeSrc": "1848:52:13",
															"nodeType": "YulIf",
															"src": "1848:52:13"
														},
														{
															"nativeSrc": "1909:39:13",
															"nodeType": "YulAssignment",
															"src": "1909:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1938:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1938:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1919:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1919:18:13"
																},
																"nativeSrc": "1919:29:13",
																"nodeType": "YulFunctionCall",
																"src": "1919:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1909:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1909:6:13"
																}
															]
														},
														{
															"nativeSrc": "1957:45:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1957:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1987:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1987:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1998:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1998:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1983:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1983:3:13"
																		},
																		"nativeSrc": "1983:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1983:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1970:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1970:12:13"
																},
																"nativeSrc": "1970:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1970:32:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1961:5:13",
																	"nodeType": "YulTypedName",
																	"src": "1961:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2055:16:13",
																"nodeType": "YulBlock",
																"src": "2055:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2064:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2067:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2067:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2057:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2057:6:13"
																			},
																			"nativeSrc": "2057:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2057:12:13"
																		},
																		"nativeSrc": "2057:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2057:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2024:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2024:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2045:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "2045:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2038:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "2038:6:13"
																						},
																						"nativeSrc": "2038:13:13",
																						"nodeType": "YulFunctionCall",
																						"src": "2038:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2031:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "2031:6:13"
																				},
																				"nativeSrc": "2031:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2031:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2021:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2021:2:13"
																		},
																		"nativeSrc": "2021:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2021:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2014:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2014:6:13"
																},
																"nativeSrc": "2014:40:13",
																"nodeType": "YulFunctionCall",
																"src": "2014:40:13"
															},
															"nativeSrc": "2011:60:13",
															"nodeType": "YulIf",
															"src": "2011:60:13"
														},
														{
															"nativeSrc": "2080:15:13",
															"nodeType": "YulAssignment",
															"src": "2080:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "2090:5:13",
																"nodeType": "YulIdentifier",
																"src": "2090:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2080:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2080:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "1754:347:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1796:9:13",
														"nodeType": "YulTypedName",
														"src": "1796:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1807:7:13",
														"nodeType": "YulTypedName",
														"src": "1807:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1819:6:13",
														"nodeType": "YulTypedName",
														"src": "1819:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1827:6:13",
														"nodeType": "YulTypedName",
														"src": "1827:6:13",
														"type": ""
													}
												],
												"src": "1754:347:13"
											},
											{
												"body": {
													"nativeSrc": "2207:76:13",
													"nodeType": "YulBlock",
													"src": "2207:76:13",
													"statements": [
														{
															"nativeSrc": "2217:26:13",
															"nodeType": "YulAssignment",
															"src": "2217:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2229:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2229:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2240:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2240:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2225:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2225:3:13"
																},
																"nativeSrc": "2225:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2225:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2217:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2217:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2259:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2259:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2270:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2270:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2252:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2252:6:13"
																},
																"nativeSrc": "2252:25:13",
																"nodeType": "YulFunctionCall",
																"src": "2252:25:13"
															},
															"nativeSrc": "2252:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "2252:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2106:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2176:9:13",
														"nodeType": "YulTypedName",
														"src": "2176:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2187:6:13",
														"nodeType": "YulTypedName",
														"src": "2187:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2198:4:13",
														"nodeType": "YulTypedName",
														"src": "2198:4:13",
														"type": ""
													}
												],
												"src": "2106:177:13"
											},
											{
												"body": {
													"nativeSrc": "2392:270:13",
													"nodeType": "YulBlock",
													"src": "2392:270:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2438:16:13",
																"nodeType": "YulBlock",
																"src": "2438:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2447:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2447:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2450:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2450:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2440:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2440:6:13"
																			},
																			"nativeSrc": "2440:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:12:13"
																		},
																		"nativeSrc": "2440:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2413:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2413:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2422:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2422:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2409:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:13"
																		},
																		"nativeSrc": "2409:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2434:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2434:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2405:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2405:3:13"
																},
																"nativeSrc": "2405:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2405:32:13"
															},
															"nativeSrc": "2402:52:13",
															"nodeType": "YulIf",
															"src": "2402:52:13"
														},
														{
															"nativeSrc": "2463:39:13",
															"nodeType": "YulAssignment",
															"src": "2463:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2492:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2492:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2473:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2473:18:13"
																},
																"nativeSrc": "2473:29:13",
																"nodeType": "YulFunctionCall",
																"src": "2473:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2463:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2463:6:13"
																}
															]
														},
														{
															"nativeSrc": "2511:48:13",
															"nodeType": "YulAssignment",
															"src": "2511:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2544:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2544:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2555:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2555:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2540:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2540:3:13"
																		},
																		"nativeSrc": "2540:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2540:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2521:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2521:18:13"
																},
																"nativeSrc": "2521:38:13",
																"nodeType": "YulFunctionCall",
																"src": "2521:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2511:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2511:6:13"
																}
															]
														},
														{
															"nativeSrc": "2568:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2568:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "2581:1:13",
																"nodeType": "YulLiteral",
																"src": "2581:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2572:5:13",
																	"nodeType": "YulTypedName",
																	"src": "2572:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2591:41:13",
															"nodeType": "YulAssignment",
															"src": "2591:41:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2617:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2617:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2628:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2628:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2613:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2613:3:13"
																		},
																		"nativeSrc": "2613:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2613:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2600:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2600:12:13"
																},
																"nativeSrc": "2600:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2600:32:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2591:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2591:5:13"
																}
															]
														},
														{
															"nativeSrc": "2641:15:13",
															"nodeType": "YulAssignment",
															"src": "2641:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "2651:5:13",
																"nodeType": "YulIdentifier",
																"src": "2651:5:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2641:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2641:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2288:374:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2342:9:13",
														"nodeType": "YulTypedName",
														"src": "2342:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2353:7:13",
														"nodeType": "YulTypedName",
														"src": "2353:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2365:6:13",
														"nodeType": "YulTypedName",
														"src": "2365:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2373:6:13",
														"nodeType": "YulTypedName",
														"src": "2373:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2381:6:13",
														"nodeType": "YulTypedName",
														"src": "2381:6:13",
														"type": ""
													}
												],
												"src": "2288:374:13"
											},
											{
												"body": {
													"nativeSrc": "2737:156:13",
													"nodeType": "YulBlock",
													"src": "2737:156:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2783:16:13",
																"nodeType": "YulBlock",
																"src": "2783:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2792:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2792:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2795:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2795:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2785:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2785:6:13"
																			},
																			"nativeSrc": "2785:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2785:12:13"
																		},
																		"nativeSrc": "2785:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2785:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2758:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2758:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2767:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2767:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2754:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2754:3:13"
																		},
																		"nativeSrc": "2754:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2754:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2779:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2779:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2750:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2750:3:13"
																},
																"nativeSrc": "2750:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2750:32:13"
															},
															"nativeSrc": "2747:52:13",
															"nodeType": "YulIf",
															"src": "2747:52:13"
														},
														{
															"nativeSrc": "2808:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2808:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "2821:1:13",
																"nodeType": "YulLiteral",
																"src": "2821:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2812:5:13",
																	"nodeType": "YulTypedName",
																	"src": "2812:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2831:32:13",
															"nodeType": "YulAssignment",
															"src": "2831:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2853:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2853:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2840:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2840:12:13"
																},
																"nativeSrc": "2840:23:13",
																"nodeType": "YulFunctionCall",
																"src": "2840:23:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2831:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2831:5:13"
																}
															]
														},
														{
															"nativeSrc": "2872:15:13",
															"nodeType": "YulAssignment",
															"src": "2872:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "2882:5:13",
																"nodeType": "YulIdentifier",
																"src": "2882:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2872:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2872:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "2667:226:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2703:9:13",
														"nodeType": "YulTypedName",
														"src": "2703:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2714:7:13",
														"nodeType": "YulTypedName",
														"src": "2714:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2726:6:13",
														"nodeType": "YulTypedName",
														"src": "2726:6:13",
														"type": ""
													}
												],
												"src": "2667:226:13"
											},
											{
												"body": {
													"nativeSrc": "2999:76:13",
													"nodeType": "YulBlock",
													"src": "2999:76:13",
													"statements": [
														{
															"nativeSrc": "3009:26:13",
															"nodeType": "YulAssignment",
															"src": "3009:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3021:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3021:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3032:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3032:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3017:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3017:3:13"
																},
																"nativeSrc": "3017:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3017:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3009:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3009:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3051:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3051:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3062:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3062:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3044:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3044:6:13"
																},
																"nativeSrc": "3044:25:13",
																"nodeType": "YulFunctionCall",
																"src": "3044:25:13"
															},
															"nativeSrc": "3044:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "3044:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2898:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2968:9:13",
														"nodeType": "YulTypedName",
														"src": "2968:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2979:6:13",
														"nodeType": "YulTypedName",
														"src": "2979:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2990:4:13",
														"nodeType": "YulTypedName",
														"src": "2990:4:13",
														"type": ""
													}
												],
												"src": "2898:177:13"
											},
											{
												"body": {
													"nativeSrc": "3167:213:13",
													"nodeType": "YulBlock",
													"src": "3167:213:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3213:16:13",
																"nodeType": "YulBlock",
																"src": "3213:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3222:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3222:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3225:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3225:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3215:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3215:6:13"
																			},
																			"nativeSrc": "3215:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3215:12:13"
																		},
																		"nativeSrc": "3215:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3215:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3188:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3188:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3197:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3197:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3184:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3184:3:13"
																		},
																		"nativeSrc": "3184:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3184:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3209:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3180:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3180:3:13"
																},
																"nativeSrc": "3180:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3180:32:13"
															},
															"nativeSrc": "3177:52:13",
															"nodeType": "YulIf",
															"src": "3177:52:13"
														},
														{
															"nativeSrc": "3238:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3238:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3251:1:13",
																"nodeType": "YulLiteral",
																"src": "3251:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3242:5:13",
																	"nodeType": "YulTypedName",
																	"src": "3242:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3261:32:13",
															"nodeType": "YulAssignment",
															"src": "3261:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3283:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3283:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3270:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3270:12:13"
																},
																"nativeSrc": "3270:23:13",
																"nodeType": "YulFunctionCall",
																"src": "3270:23:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3261:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3261:5:13"
																}
															]
														},
														{
															"nativeSrc": "3302:15:13",
															"nodeType": "YulAssignment",
															"src": "3302:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "3312:5:13",
																"nodeType": "YulIdentifier",
																"src": "3312:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3302:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3302:6:13"
																}
															]
														},
														{
															"nativeSrc": "3326:48:13",
															"nodeType": "YulAssignment",
															"src": "3326:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3359:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3359:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3370:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3370:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3355:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3355:3:13"
																		},
																		"nativeSrc": "3355:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3355:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3336:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "3336:18:13"
																},
																"nativeSrc": "3336:38:13",
																"nodeType": "YulFunctionCall",
																"src": "3336:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3326:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3080:300:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3125:9:13",
														"nodeType": "YulTypedName",
														"src": "3125:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3136:7:13",
														"nodeType": "YulTypedName",
														"src": "3136:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3148:6:13",
														"nodeType": "YulTypedName",
														"src": "3148:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3156:6:13",
														"nodeType": "YulTypedName",
														"src": "3156:6:13",
														"type": ""
													}
												],
												"src": "3080:300:13"
											},
											{
												"body": {
													"nativeSrc": "3482:87:13",
													"nodeType": "YulBlock",
													"src": "3482:87:13",
													"statements": [
														{
															"nativeSrc": "3492:26:13",
															"nodeType": "YulAssignment",
															"src": "3492:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3504:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3504:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3515:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3515:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3500:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3500:3:13"
																},
																"nativeSrc": "3500:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3500:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3492:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3492:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3534:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3534:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3549:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3549:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3557:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3557:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3545:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3545:3:13"
																		},
																		"nativeSrc": "3545:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3545:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3527:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3527:6:13"
																},
																"nativeSrc": "3527:36:13",
																"nodeType": "YulFunctionCall",
																"src": "3527:36:13"
															},
															"nativeSrc": "3527:36:13",
															"nodeType": "YulExpressionStatement",
															"src": "3527:36:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "3385:184:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3451:9:13",
														"nodeType": "YulTypedName",
														"src": "3451:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3462:6:13",
														"nodeType": "YulTypedName",
														"src": "3462:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3473:4:13",
														"nodeType": "YulTypedName",
														"src": "3473:4:13",
														"type": ""
													}
												],
												"src": "3385:184:13"
											},
											{
												"body": {
													"nativeSrc": "3644:156:13",
													"nodeType": "YulBlock",
													"src": "3644:156:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3690:16:13",
																"nodeType": "YulBlock",
																"src": "3690:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3699:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3699:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3702:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3702:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3692:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3692:6:13"
																			},
																			"nativeSrc": "3692:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3692:12:13"
																		},
																		"nativeSrc": "3692:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3692:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3665:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3665:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3674:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3674:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3661:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3661:3:13"
																		},
																		"nativeSrc": "3661:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3661:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3686:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3686:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3657:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3657:3:13"
																},
																"nativeSrc": "3657:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3657:32:13"
															},
															"nativeSrc": "3654:52:13",
															"nodeType": "YulIf",
															"src": "3654:52:13"
														},
														{
															"nativeSrc": "3715:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3715:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3728:1:13",
																"nodeType": "YulLiteral",
																"src": "3728:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3719:5:13",
																	"nodeType": "YulTypedName",
																	"src": "3719:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3738:32:13",
															"nodeType": "YulAssignment",
															"src": "3738:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3760:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3760:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3747:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3747:12:13"
																},
																"nativeSrc": "3747:23:13",
																"nodeType": "YulFunctionCall",
																"src": "3747:23:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3738:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3738:5:13"
																}
															]
														},
														{
															"nativeSrc": "3779:15:13",
															"nodeType": "YulAssignment",
															"src": "3779:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "3789:5:13",
																"nodeType": "YulIdentifier",
																"src": "3789:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3779:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3779:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3574:226:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3610:9:13",
														"nodeType": "YulTypedName",
														"src": "3610:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3621:7:13",
														"nodeType": "YulTypedName",
														"src": "3621:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3633:6:13",
														"nodeType": "YulTypedName",
														"src": "3633:6:13",
														"type": ""
													}
												],
												"src": "3574:226:13"
											},
											{
												"body": {
													"nativeSrc": "3875:116:13",
													"nodeType": "YulBlock",
													"src": "3875:116:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3921:16:13",
																"nodeType": "YulBlock",
																"src": "3921:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3930:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3930:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3933:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3933:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3923:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3923:6:13"
																			},
																			"nativeSrc": "3923:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3923:12:13"
																		},
																		"nativeSrc": "3923:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3923:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3896:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3896:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3905:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3905:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3892:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3892:3:13"
																		},
																		"nativeSrc": "3892:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3917:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3917:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3888:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3888:3:13"
																},
																"nativeSrc": "3888:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3888:32:13"
															},
															"nativeSrc": "3885:52:13",
															"nodeType": "YulIf",
															"src": "3885:52:13"
														},
														{
															"nativeSrc": "3946:39:13",
															"nodeType": "YulAssignment",
															"src": "3946:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3975:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3975:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3956:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "3956:18:13"
																},
																"nativeSrc": "3956:29:13",
																"nodeType": "YulFunctionCall",
																"src": "3956:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3946:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3946:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3805:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3841:9:13",
														"nodeType": "YulTypedName",
														"src": "3841:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3852:7:13",
														"nodeType": "YulTypedName",
														"src": "3852:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3864:6:13",
														"nodeType": "YulTypedName",
														"src": "3864:6:13",
														"type": ""
													}
												],
												"src": "3805:186:13"
											},
											{
												"body": {
													"nativeSrc": "4097:102:13",
													"nodeType": "YulBlock",
													"src": "4097:102:13",
													"statements": [
														{
															"nativeSrc": "4107:26:13",
															"nodeType": "YulAssignment",
															"src": "4107:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4119:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4119:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4130:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4130:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4115:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4115:3:13"
																},
																"nativeSrc": "4115:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4115:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4107:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4107:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4149:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4149:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4164:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4164:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4180:3:13",
																								"nodeType": "YulLiteral",
																								"src": "4180:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4185:1:13",
																								"nodeType": "YulLiteral",
																								"src": "4185:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4176:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "4176:3:13"
																						},
																						"nativeSrc": "4176:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "4176:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4189:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4189:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4172:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4172:3:13"
																				},
																				"nativeSrc": "4172:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4172:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4160:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4160:3:13"
																		},
																		"nativeSrc": "4160:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4160:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4142:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4142:6:13"
																},
																"nativeSrc": "4142:51:13",
																"nodeType": "YulFunctionCall",
																"src": "4142:51:13"
															},
															"nativeSrc": "4142:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "4142:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3996:203:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4066:9:13",
														"nodeType": "YulTypedName",
														"src": "4066:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4077:6:13",
														"nodeType": "YulTypedName",
														"src": "4077:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4088:4:13",
														"nodeType": "YulTypedName",
														"src": "4088:4:13",
														"type": ""
													}
												],
												"src": "3996:203:13"
											},
											{
												"body": {
													"nativeSrc": "4291:173:13",
													"nodeType": "YulBlock",
													"src": "4291:173:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4337:16:13",
																"nodeType": "YulBlock",
																"src": "4337:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4346:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4346:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4349:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4349:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4339:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4339:6:13"
																			},
																			"nativeSrc": "4339:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4339:12:13"
																		},
																		"nativeSrc": "4339:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4339:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4312:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4312:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4321:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4321:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4308:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4308:3:13"
																		},
																		"nativeSrc": "4308:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4308:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4333:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4333:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4304:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4304:3:13"
																},
																"nativeSrc": "4304:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4304:32:13"
															},
															"nativeSrc": "4301:52:13",
															"nodeType": "YulIf",
															"src": "4301:52:13"
														},
														{
															"nativeSrc": "4362:39:13",
															"nodeType": "YulAssignment",
															"src": "4362:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4391:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4391:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4372:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "4372:18:13"
																},
																"nativeSrc": "4372:29:13",
																"nodeType": "YulFunctionCall",
																"src": "4372:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4362:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4362:6:13"
																}
															]
														},
														{
															"nativeSrc": "4410:48:13",
															"nodeType": "YulAssignment",
															"src": "4410:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4443:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4443:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4454:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4454:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4439:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4439:3:13"
																		},
																		"nativeSrc": "4439:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4439:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4420:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "4420:18:13"
																},
																"nativeSrc": "4420:38:13",
																"nodeType": "YulFunctionCall",
																"src": "4420:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4410:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4410:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4204:260:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4249:9:13",
														"nodeType": "YulTypedName",
														"src": "4249:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4260:7:13",
														"nodeType": "YulTypedName",
														"src": "4260:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4272:6:13",
														"nodeType": "YulTypedName",
														"src": "4272:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4280:6:13",
														"nodeType": "YulTypedName",
														"src": "4280:6:13",
														"type": ""
													}
												],
												"src": "4204:260:13"
											},
											{
												"body": {
													"nativeSrc": "4524:325:13",
													"nodeType": "YulBlock",
													"src": "4524:325:13",
													"statements": [
														{
															"nativeSrc": "4534:22:13",
															"nodeType": "YulAssignment",
															"src": "4534:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4548:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4548:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4551:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4551:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4544:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4544:3:13"
																},
																"nativeSrc": "4544:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4544:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4534:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4534:6:13"
																}
															]
														},
														{
															"nativeSrc": "4565:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4565:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4595:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4595:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4601:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4601:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4591:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4591:3:13"
																},
																"nativeSrc": "4591:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4591:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4569:18:13",
																	"nodeType": "YulTypedName",
																	"src": "4569:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4642:31:13",
																"nodeType": "YulBlock",
																"src": "4642:31:13",
																"statements": [
																	{
																		"nativeSrc": "4644:27:13",
																		"nodeType": "YulAssignment",
																		"src": "4644:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4658:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "4658:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4666:4:13",
																					"nodeType": "YulLiteral",
																					"src": "4666:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4654:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4654:3:13"
																			},
																			"nativeSrc": "4654:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4654:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4644:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4644:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4622:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "4622:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4615:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4615:6:13"
																},
																"nativeSrc": "4615:26:13",
																"nodeType": "YulFunctionCall",
																"src": "4615:26:13"
															},
															"nativeSrc": "4612:61:13",
															"nodeType": "YulIf",
															"src": "4612:61:13"
														},
														{
															"body": {
																"nativeSrc": "4732:111:13",
																"nodeType": "YulBlock",
																"src": "4732:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4753:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4753:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4760:3:13",
																							"nodeType": "YulLiteral",
																							"src": "4760:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4765:10:13",
																							"nodeType": "YulLiteral",
																							"src": "4765:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4756:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "4756:3:13"
																					},
																					"nativeSrc": "4756:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4756:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4746:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4746:6:13"
																			},
																			"nativeSrc": "4746:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4746:31:13"
																		},
																		"nativeSrc": "4746:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4746:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4797:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4797:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4800:4:13",
																					"nodeType": "YulLiteral",
																					"src": "4800:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4790:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4790:6:13"
																			},
																			"nativeSrc": "4790:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4790:15:13"
																		},
																		"nativeSrc": "4790:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4790:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4825:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4825:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4828:4:13",
																					"nodeType": "YulLiteral",
																					"src": "4828:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4818:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4818:6:13"
																			},
																			"nativeSrc": "4818:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4818:15:13"
																		},
																		"nativeSrc": "4818:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4818:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4688:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "4688:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4711:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4711:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4719:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4719:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4708:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4708:2:13"
																		},
																		"nativeSrc": "4708:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4708:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4685:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4685:2:13"
																},
																"nativeSrc": "4685:38:13",
																"nodeType": "YulFunctionCall",
																"src": "4685:38:13"
															},
															"nativeSrc": "4682:161:13",
															"nodeType": "YulIf",
															"src": "4682:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4469:380:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4504:4:13",
														"nodeType": "YulTypedName",
														"src": "4504:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4513:6:13",
														"nodeType": "YulTypedName",
														"src": "4513:6:13",
														"type": ""
													}
												],
												"src": "4469:380:13"
											},
											{
												"body": {
													"nativeSrc": "4886:95:13",
													"nodeType": "YulBlock",
													"src": "4886:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4903:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4903:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4910:3:13",
																				"nodeType": "YulLiteral",
																				"src": "4910:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4915:10:13",
																				"nodeType": "YulLiteral",
																				"src": "4915:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4906:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4906:3:13"
																		},
																		"nativeSrc": "4906:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4906:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4896:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4896:6:13"
																},
																"nativeSrc": "4896:31:13",
																"nodeType": "YulFunctionCall",
																"src": "4896:31:13"
															},
															"nativeSrc": "4896:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "4896:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4943:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4943:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4946:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4946:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4936:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4936:6:13"
																},
																"nativeSrc": "4936:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4936:15:13"
															},
															"nativeSrc": "4936:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4936:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4967:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4967:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4970:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4970:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4960:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4960:6:13"
																},
																"nativeSrc": "4960:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4960:15:13"
															},
															"nativeSrc": "4960:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4960:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4854:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "4854:127:13"
											},
											{
												"body": {
													"nativeSrc": "5034:77:13",
													"nodeType": "YulBlock",
													"src": "5034:77:13",
													"statements": [
														{
															"nativeSrc": "5044:16:13",
															"nodeType": "YulAssignment",
															"src": "5044:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5055:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5055:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5058:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5058:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5051:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5051:3:13"
																},
																"nativeSrc": "5051:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5051:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5044:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5044:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5083:22:13",
																"nodeType": "YulBlock",
																"src": "5083:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5085:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5085:16:13"
																			},
																			"nativeSrc": "5085:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5085:18:13"
																		},
																		"nativeSrc": "5085:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5085:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5075:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5075:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5078:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5078:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5072:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5072:2:13"
																},
																"nativeSrc": "5072:10:13",
																"nodeType": "YulFunctionCall",
																"src": "5072:10:13"
															},
															"nativeSrc": "5069:36:13",
															"nodeType": "YulIf",
															"src": "5069:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4986:125:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5017:1:13",
														"nodeType": "YulTypedName",
														"src": "5017:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5020:1:13",
														"nodeType": "YulTypedName",
														"src": "5020:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5026:3:13",
														"nodeType": "YulTypedName",
														"src": "5026:3:13",
														"type": ""
													}
												],
												"src": "4986:125:13"
											},
											{
												"body": {
													"nativeSrc": "5290:178:13",
													"nodeType": "YulBlock",
													"src": "5290:178:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5307:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5307:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5318:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5318:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5300:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5300:6:13"
																},
																"nativeSrc": "5300:21:13",
																"nodeType": "YulFunctionCall",
																"src": "5300:21:13"
															},
															"nativeSrc": "5300:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "5300:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5341:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5341:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5352:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5352:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5337:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5337:3:13"
																		},
																		"nativeSrc": "5337:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5337:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5357:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5357:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5330:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5330:6:13"
																},
																"nativeSrc": "5330:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5330:30:13"
															},
															"nativeSrc": "5330:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "5330:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5380:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5380:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5391:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5391:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5376:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5376:3:13"
																		},
																		"nativeSrc": "5376:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5376:18:13"
																	},
																	{
																		"hexValue": "546f74616c20666565732063616e6e6f742065786365656420313025",
																		"kind": "string",
																		"nativeSrc": "5396:30:13",
																		"nodeType": "YulLiteral",
																		"src": "5396:30:13",
																		"type": "",
																		"value": "Total fees cannot exceed 10%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5369:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5369:6:13"
																},
																"nativeSrc": "5369:58:13",
																"nodeType": "YulFunctionCall",
																"src": "5369:58:13"
															},
															"nativeSrc": "5369:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "5369:58:13"
														},
														{
															"nativeSrc": "5436:26:13",
															"nodeType": "YulAssignment",
															"src": "5436:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5448:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5448:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5459:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5459:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5444:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5444:3:13"
																},
																"nativeSrc": "5444:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5444:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5436:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5436:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ad570219bc04ec8fe93d528087e9ef29c51349a8200323b11e6294bbeb0858a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5116:352:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5267:9:13",
														"nodeType": "YulTypedName",
														"src": "5267:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5281:4:13",
														"nodeType": "YulTypedName",
														"src": "5281:4:13",
														"type": ""
													}
												],
												"src": "5116:352:13"
											},
											{
												"body": {
													"nativeSrc": "5602:119:13",
													"nodeType": "YulBlock",
													"src": "5602:119:13",
													"statements": [
														{
															"nativeSrc": "5612:26:13",
															"nodeType": "YulAssignment",
															"src": "5612:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5624:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5624:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5635:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5635:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5620:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5620:3:13"
																},
																"nativeSrc": "5620:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5620:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5612:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5612:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5654:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5654:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5665:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5665:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5647:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5647:6:13"
																},
																"nativeSrc": "5647:25:13",
																"nodeType": "YulFunctionCall",
																"src": "5647:25:13"
															},
															"nativeSrc": "5647:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "5647:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5692:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5692:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5703:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5703:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5688:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5688:3:13"
																		},
																		"nativeSrc": "5688:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5688:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5708:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5708:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5681:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5681:6:13"
																},
																"nativeSrc": "5681:34:13",
																"nodeType": "YulFunctionCall",
																"src": "5681:34:13"
															},
															"nativeSrc": "5681:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "5681:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5473:248:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5563:9:13",
														"nodeType": "YulTypedName",
														"src": "5563:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5574:6:13",
														"nodeType": "YulTypedName",
														"src": "5574:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5582:6:13",
														"nodeType": "YulTypedName",
														"src": "5582:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5593:4:13",
														"nodeType": "YulTypedName",
														"src": "5593:4:13",
														"type": ""
													}
												],
												"src": "5473:248:13"
											},
											{
												"body": {
													"nativeSrc": "5900:181:13",
													"nodeType": "YulBlock",
													"src": "5900:181:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5917:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5917:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5928:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5928:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5910:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5910:6:13"
																},
																"nativeSrc": "5910:21:13",
																"nodeType": "YulFunctionCall",
																"src": "5910:21:13"
															},
															"nativeSrc": "5910:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "5910:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5951:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5951:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5962:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5962:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5947:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5947:3:13"
																		},
																		"nativeSrc": "5947:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5947:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5967:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5967:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5940:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5940:6:13"
																},
																"nativeSrc": "5940:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5940:30:13"
															},
															"nativeSrc": "5940:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "5940:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5990:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5990:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6001:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6001:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5986:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5986:3:13"
																		},
																		"nativeSrc": "5986:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5986:18:13"
																	},
																	{
																		"hexValue": "4d61726b6574696e672077616c6c65742063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "6006:33:13",
																		"nodeType": "YulLiteral",
																		"src": "6006:33:13",
																		"type": "",
																		"value": "Marketing wallet cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5979:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:13"
																},
																"nativeSrc": "5979:61:13",
																"nodeType": "YulFunctionCall",
																"src": "5979:61:13"
															},
															"nativeSrc": "5979:61:13",
															"nodeType": "YulExpressionStatement",
															"src": "5979:61:13"
														},
														{
															"nativeSrc": "6049:26:13",
															"nodeType": "YulAssignment",
															"src": "6049:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6061:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6061:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6072:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6072:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6057:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6057:3:13"
																},
																"nativeSrc": "6057:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6057:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6049:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6049:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a8df1003b4f1898b3f4e673d2d141aba9f3cf0ab33f770d9445773bff9bb0c84__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5726:355:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5877:9:13",
														"nodeType": "YulTypedName",
														"src": "5877:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5891:4:13",
														"nodeType": "YulTypedName",
														"src": "5891:4:13",
														"type": ""
													}
												],
												"src": "5726:355:13"
											},
											{
												"body": {
													"nativeSrc": "6132:171:13",
													"nodeType": "YulBlock",
													"src": "6132:171:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6163:111:13",
																"nodeType": "YulBlock",
																"src": "6163:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6184:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6184:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6191:3:13",
																							"nodeType": "YulLiteral",
																							"src": "6191:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6196:10:13",
																							"nodeType": "YulLiteral",
																							"src": "6196:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6187:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "6187:3:13"
																					},
																					"nativeSrc": "6187:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6187:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6177:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6177:6:13"
																			},
																			"nativeSrc": "6177:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6177:31:13"
																		},
																		"nativeSrc": "6177:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6177:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6228:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6228:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6231:4:13",
																					"nodeType": "YulLiteral",
																					"src": "6231:4:13",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6221:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6221:6:13"
																			},
																			"nativeSrc": "6221:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6221:15:13"
																		},
																		"nativeSrc": "6221:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6221:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6256:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6256:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6259:4:13",
																					"nodeType": "YulLiteral",
																					"src": "6259:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6249:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6249:6:13"
																			},
																			"nativeSrc": "6249:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6249:15:13"
																		},
																		"nativeSrc": "6249:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6249:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6152:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6152:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6145:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6145:6:13"
																},
																"nativeSrc": "6145:9:13",
																"nodeType": "YulFunctionCall",
																"src": "6145:9:13"
															},
															"nativeSrc": "6142:132:13",
															"nodeType": "YulIf",
															"src": "6142:132:13"
														},
														{
															"nativeSrc": "6283:14:13",
															"nodeType": "YulAssignment",
															"src": "6283:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6292:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6292:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6295:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6295:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6288:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6288:3:13"
																},
																"nativeSrc": "6288:9:13",
																"nodeType": "YulFunctionCall",
																"src": "6288:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6283:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "6283:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6086:217:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6117:1:13",
														"nodeType": "YulTypedName",
														"src": "6117:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6120:1:13",
														"nodeType": "YulTypedName",
														"src": "6120:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6126:1:13",
														"nodeType": "YulTypedName",
														"src": "6126:1:13",
														"type": ""
													}
												],
												"src": "6086:217:13"
											},
											{
												"body": {
													"nativeSrc": "6482:164:13",
													"nodeType": "YulBlock",
													"src": "6482:164:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6499:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6499:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6510:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6510:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6492:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6492:6:13"
																},
																"nativeSrc": "6492:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6492:21:13"
															},
															"nativeSrc": "6492:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "6492:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6533:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6533:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6544:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6544:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6529:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6529:3:13"
																		},
																		"nativeSrc": "6529:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6529:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6549:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6549:2:13",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6522:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6522:6:13"
																},
																"nativeSrc": "6522:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6522:30:13"
															},
															"nativeSrc": "6522:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "6522:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6572:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6572:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6583:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6583:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6568:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6568:3:13"
																		},
																		"nativeSrc": "6568:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6568:18:13"
																	},
																	{
																		"hexValue": "4d617820545820746f6f206c6f77",
																		"kind": "string",
																		"nativeSrc": "6588:16:13",
																		"nodeType": "YulLiteral",
																		"src": "6588:16:13",
																		"type": "",
																		"value": "Max TX too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6561:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6561:6:13"
																},
																"nativeSrc": "6561:44:13",
																"nodeType": "YulFunctionCall",
																"src": "6561:44:13"
															},
															"nativeSrc": "6561:44:13",
															"nodeType": "YulExpressionStatement",
															"src": "6561:44:13"
														},
														{
															"nativeSrc": "6614:26:13",
															"nodeType": "YulAssignment",
															"src": "6614:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6626:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6626:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6637:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6637:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6622:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6622:3:13"
																},
																"nativeSrc": "6622:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6622:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6614:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6614:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c4e1d858486171900ca25120b06e2607ab69f3bcfcf4340f0c39befc3a4fa003__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6308:338:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6459:9:13",
														"nodeType": "YulTypedName",
														"src": "6459:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6473:4:13",
														"nodeType": "YulTypedName",
														"src": "6473:4:13",
														"type": ""
													}
												],
												"src": "6308:338:13"
											},
											{
												"body": {
													"nativeSrc": "6825:168:13",
													"nodeType": "YulBlock",
													"src": "6825:168:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6842:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6842:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6853:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6853:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6835:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6835:6:13"
																},
																"nativeSrc": "6835:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6835:21:13"
															},
															"nativeSrc": "6835:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "6835:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6876:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6876:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6887:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6887:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6872:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6872:3:13"
																		},
																		"nativeSrc": "6872:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6872:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6892:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6892:2:13",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6865:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6865:6:13"
																},
																"nativeSrc": "6865:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6865:30:13"
															},
															"nativeSrc": "6865:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "6865:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6915:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6915:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6926:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6926:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6911:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6911:3:13"
																		},
																		"nativeSrc": "6911:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6911:18:13"
																	},
																	{
																		"hexValue": "4d61782077616c6c657420746f6f206c6f77",
																		"kind": "string",
																		"nativeSrc": "6931:20:13",
																		"nodeType": "YulLiteral",
																		"src": "6931:20:13",
																		"type": "",
																		"value": "Max wallet too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6904:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6904:6:13"
																},
																"nativeSrc": "6904:48:13",
																"nodeType": "YulFunctionCall",
																"src": "6904:48:13"
															},
															"nativeSrc": "6904:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "6904:48:13"
														},
														{
															"nativeSrc": "6961:26:13",
															"nodeType": "YulAssignment",
															"src": "6961:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6973:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6973:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6984:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6984:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6969:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6969:3:13"
																},
																"nativeSrc": "6969:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6969:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6961:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6961:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2ca3153f92d285b48e1a6bebdcbc4d3ee7498a2363249a201db98c3f869548dc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6651:342:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6802:9:13",
														"nodeType": "YulTypedName",
														"src": "6802:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6816:4:13",
														"nodeType": "YulTypedName",
														"src": "6816:4:13",
														"type": ""
													}
												],
												"src": "6651:342:13"
											},
											{
												"body": {
													"nativeSrc": "7155:188:13",
													"nodeType": "YulBlock",
													"src": "7155:188:13",
													"statements": [
														{
															"nativeSrc": "7165:26:13",
															"nodeType": "YulAssignment",
															"src": "7165:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7177:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7177:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7188:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7188:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7173:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7173:3:13"
																},
																"nativeSrc": "7173:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7173:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7165:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7165:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7207:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7207:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7222:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7222:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7238:3:13",
																								"nodeType": "YulLiteral",
																								"src": "7238:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7243:1:13",
																								"nodeType": "YulLiteral",
																								"src": "7243:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7234:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "7234:3:13"
																						},
																						"nativeSrc": "7234:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "7234:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7247:1:13",
																						"nodeType": "YulLiteral",
																						"src": "7247:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7230:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7230:3:13"
																				},
																				"nativeSrc": "7230:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7230:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7218:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7218:3:13"
																		},
																		"nativeSrc": "7218:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7218:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7200:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7200:6:13"
																},
																"nativeSrc": "7200:51:13",
																"nodeType": "YulFunctionCall",
																"src": "7200:51:13"
															},
															"nativeSrc": "7200:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "7200:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7271:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7271:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7282:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7282:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7267:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7267:3:13"
																		},
																		"nativeSrc": "7267:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7267:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7287:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7287:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7260:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7260:6:13"
																},
																"nativeSrc": "7260:34:13",
																"nodeType": "YulFunctionCall",
																"src": "7260:34:13"
															},
															"nativeSrc": "7260:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "7260:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7314:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7314:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7325:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7325:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7310:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7310:3:13"
																		},
																		"nativeSrc": "7310:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7310:18:13"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7330:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7330:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7303:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7303:6:13"
																},
																"nativeSrc": "7303:34:13",
																"nodeType": "YulFunctionCall",
																"src": "7303:34:13"
															},
															"nativeSrc": "7303:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "7303:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6998:345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7108:9:13",
														"nodeType": "YulTypedName",
														"src": "7108:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7119:6:13",
														"nodeType": "YulTypedName",
														"src": "7119:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7127:6:13",
														"nodeType": "YulTypedName",
														"src": "7127:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7135:6:13",
														"nodeType": "YulTypedName",
														"src": "7135:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7146:4:13",
														"nodeType": "YulTypedName",
														"src": "7146:4:13",
														"type": ""
													}
												],
												"src": "6998:345:13"
											},
											{
												"body": {
													"nativeSrc": "7477:145:13",
													"nodeType": "YulBlock",
													"src": "7477:145:13",
													"statements": [
														{
															"nativeSrc": "7487:26:13",
															"nodeType": "YulAssignment",
															"src": "7487:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7499:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7499:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7510:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7510:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7495:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7495:3:13"
																},
																"nativeSrc": "7495:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7495:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7487:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7487:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7529:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7529:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7544:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7544:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7560:3:13",
																								"nodeType": "YulLiteral",
																								"src": "7560:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7565:1:13",
																								"nodeType": "YulLiteral",
																								"src": "7565:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7556:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "7556:3:13"
																						},
																						"nativeSrc": "7556:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "7556:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7569:1:13",
																						"nodeType": "YulLiteral",
																						"src": "7569:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7552:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7552:3:13"
																				},
																				"nativeSrc": "7552:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7552:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7540:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7540:3:13"
																		},
																		"nativeSrc": "7540:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7540:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7522:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7522:6:13"
																},
																"nativeSrc": "7522:51:13",
																"nodeType": "YulFunctionCall",
																"src": "7522:51:13"
															},
															"nativeSrc": "7522:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "7522:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7593:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7593:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7604:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7604:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7589:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:13"
																		},
																		"nativeSrc": "7589:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7589:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7609:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7609:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7582:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7582:6:13"
																},
																"nativeSrc": "7582:34:13",
																"nodeType": "YulFunctionCall",
																"src": "7582:34:13"
															},
															"nativeSrc": "7582:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "7582:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "7348:274:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7438:9:13",
														"nodeType": "YulTypedName",
														"src": "7438:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7449:6:13",
														"nodeType": "YulTypedName",
														"src": "7449:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7457:6:13",
														"nodeType": "YulTypedName",
														"src": "7457:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7468:4:13",
														"nodeType": "YulTypedName",
														"src": "7468:4:13",
														"type": ""
													}
												],
												"src": "7348:274:13"
											},
											{
												"body": {
													"nativeSrc": "7801:172:13",
													"nodeType": "YulBlock",
													"src": "7801:172:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7818:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7818:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7829:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7829:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7811:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7811:6:13"
																},
																"nativeSrc": "7811:21:13",
																"nodeType": "YulFunctionCall",
																"src": "7811:21:13"
															},
															"nativeSrc": "7811:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "7811:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7852:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7852:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7863:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7863:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7848:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7848:3:13"
																		},
																		"nativeSrc": "7848:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7848:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7868:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7868:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7841:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7841:6:13"
																},
																"nativeSrc": "7841:30:13",
																"nodeType": "YulFunctionCall",
																"src": "7841:30:13"
															},
															"nativeSrc": "7841:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "7841:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7891:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7891:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7902:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7902:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7887:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7887:3:13"
																		},
																		"nativeSrc": "7887:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7887:18:13"
																	},
																	{
																		"hexValue": "4164647265737320697320626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "7907:24:13",
																		"nodeType": "YulLiteral",
																		"src": "7907:24:13",
																		"type": "",
																		"value": "Address is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7880:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7880:6:13"
																},
																"nativeSrc": "7880:52:13",
																"nodeType": "YulFunctionCall",
																"src": "7880:52:13"
															},
															"nativeSrc": "7880:52:13",
															"nodeType": "YulExpressionStatement",
															"src": "7880:52:13"
														},
														{
															"nativeSrc": "7941:26:13",
															"nodeType": "YulAssignment",
															"src": "7941:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7953:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7953:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7964:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7964:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7949:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7949:3:13"
																},
																"nativeSrc": "7949:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7949:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7941:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7941:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7627:346:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7778:9:13",
														"nodeType": "YulTypedName",
														"src": "7778:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7792:4:13",
														"nodeType": "YulTypedName",
														"src": "7792:4:13",
														"type": ""
													}
												],
												"src": "7627:346:13"
											},
											{
												"body": {
													"nativeSrc": "8152:180:13",
													"nodeType": "YulBlock",
													"src": "8152:180:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8169:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8169:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8180:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8180:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8162:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8162:6:13"
																},
																"nativeSrc": "8162:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8162:21:13"
															},
															"nativeSrc": "8162:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "8162:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8203:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8203:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8214:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8214:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8199:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8199:3:13"
																		},
																		"nativeSrc": "8199:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8199:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8219:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8219:2:13",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8192:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8192:6:13"
																},
																"nativeSrc": "8192:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8192:30:13"
															},
															"nativeSrc": "8192:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "8192:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8242:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8242:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8253:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8253:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8238:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8238:3:13"
																		},
																		"nativeSrc": "8238:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8238:18:13"
																	},
																	{
																		"hexValue": "45786365656473206d6178207472616e73616374696f6e20616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "8258:32:13",
																		"nodeType": "YulLiteral",
																		"src": "8258:32:13",
																		"type": "",
																		"value": "Exceeds max transaction amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8231:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8231:6:13"
																},
																"nativeSrc": "8231:60:13",
																"nodeType": "YulFunctionCall",
																"src": "8231:60:13"
															},
															"nativeSrc": "8231:60:13",
															"nodeType": "YulExpressionStatement",
															"src": "8231:60:13"
														},
														{
															"nativeSrc": "8300:26:13",
															"nodeType": "YulAssignment",
															"src": "8300:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8312:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8312:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8323:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8323:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8308:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8308:3:13"
																},
																"nativeSrc": "8308:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8308:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8300:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8300:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f55ae6815dfdfb35faf31c9e38c52bf64d3d72c827fc76be01fb5a5548d4d4d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7978:354:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8129:9:13",
														"nodeType": "YulTypedName",
														"src": "8129:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8143:4:13",
														"nodeType": "YulTypedName",
														"src": "8143:4:13",
														"type": ""
													}
												],
												"src": "7978:354:13"
											},
											{
												"body": {
													"nativeSrc": "8511:173:13",
													"nodeType": "YulBlock",
													"src": "8511:173:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8528:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8528:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8539:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8539:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8521:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8521:6:13"
																},
																"nativeSrc": "8521:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8521:21:13"
															},
															"nativeSrc": "8521:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "8521:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8562:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8562:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8573:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8573:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8558:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8558:3:13"
																		},
																		"nativeSrc": "8558:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8558:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8578:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8578:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8551:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8551:6:13"
																},
																"nativeSrc": "8551:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8551:30:13"
															},
															"nativeSrc": "8551:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "8551:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8601:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8601:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8612:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8612:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8597:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8597:3:13"
																		},
																		"nativeSrc": "8597:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8597:18:13"
																	},
																	{
																		"hexValue": "45786365656473206d61782077616c6c65742073697a65",
																		"kind": "string",
																		"nativeSrc": "8617:25:13",
																		"nodeType": "YulLiteral",
																		"src": "8617:25:13",
																		"type": "",
																		"value": "Exceeds max wallet size"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8590:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8590:6:13"
																},
																"nativeSrc": "8590:53:13",
																"nodeType": "YulFunctionCall",
																"src": "8590:53:13"
															},
															"nativeSrc": "8590:53:13",
															"nodeType": "YulExpressionStatement",
															"src": "8590:53:13"
														},
														{
															"nativeSrc": "8652:26:13",
															"nodeType": "YulAssignment",
															"src": "8652:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8664:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8664:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8675:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8675:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8660:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8660:3:13"
																},
																"nativeSrc": "8660:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8660:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8652:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8652:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb7ec3ab8cf4e54e1949e272237f629c67bd685fc80d9d02b42820f52828d272__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8337:347:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8488:9:13",
														"nodeType": "YulTypedName",
														"src": "8488:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8502:4:13",
														"nodeType": "YulTypedName",
														"src": "8502:4:13",
														"type": ""
													}
												],
												"src": "8337:347:13"
											},
											{
												"body": {
													"nativeSrc": "8741:116:13",
													"nodeType": "YulBlock",
													"src": "8741:116:13",
													"statements": [
														{
															"nativeSrc": "8751:20:13",
															"nodeType": "YulAssignment",
															"src": "8751:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8766:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8766:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8769:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8769:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8762:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8762:3:13"
																},
																"nativeSrc": "8762:9:13",
																"nodeType": "YulFunctionCall",
																"src": "8762:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8751:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "8751:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8829:22:13",
																"nodeType": "YulBlock",
																"src": "8829:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8831:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8831:16:13"
																			},
																			"nativeSrc": "8831:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8831:18:13"
																		},
																		"nativeSrc": "8831:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8831:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8800:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "8800:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8793:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "8793:6:13"
																				},
																				"nativeSrc": "8793:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8793:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8807:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "8807:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8814:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "8814:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8823:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "8823:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8810:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "8810:3:13"
																						},
																						"nativeSrc": "8810:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "8810:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8804:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "8804:2:13"
																				},
																				"nativeSrc": "8804:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8804:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8790:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8790:2:13"
																		},
																		"nativeSrc": "8790:37:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8790:37:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8783:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8783:6:13"
																},
																"nativeSrc": "8783:45:13",
																"nodeType": "YulFunctionCall",
																"src": "8783:45:13"
															},
															"nativeSrc": "8780:71:13",
															"nodeType": "YulIf",
															"src": "8780:71:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8689:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8720:1:13",
														"nodeType": "YulTypedName",
														"src": "8720:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8723:1:13",
														"nodeType": "YulTypedName",
														"src": "8723:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8729:7:13",
														"nodeType": "YulTypedName",
														"src": "8729:7:13",
														"type": ""
													}
												],
												"src": "8689:168:13"
											},
											{
												"body": {
													"nativeSrc": "8911:79:13",
													"nodeType": "YulBlock",
													"src": "8911:79:13",
													"statements": [
														{
															"nativeSrc": "8921:17:13",
															"nodeType": "YulAssignment",
															"src": "8921:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8933:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8933:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8936:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8936:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8929:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8929:3:13"
																},
																"nativeSrc": "8929:9:13",
																"nodeType": "YulFunctionCall",
																"src": "8929:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8921:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8921:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8962:22:13",
																"nodeType": "YulBlock",
																"src": "8962:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8964:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8964:16:13"
																			},
																			"nativeSrc": "8964:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8964:18:13"
																		},
																		"nativeSrc": "8964:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8964:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8953:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8953:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8959:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8959:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8950:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8950:2:13"
																},
																"nativeSrc": "8950:11:13",
																"nodeType": "YulFunctionCall",
																"src": "8950:11:13"
															},
															"nativeSrc": "8947:37:13",
															"nodeType": "YulIf",
															"src": "8947:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8862:128:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8893:1:13",
														"nodeType": "YulTypedName",
														"src": "8893:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8896:1:13",
														"nodeType": "YulTypedName",
														"src": "8896:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8902:4:13",
														"nodeType": "YulTypedName",
														"src": "8902:4:13",
														"type": ""
													}
												],
												"src": "8862:128:13"
											},
											{
												"body": {
													"nativeSrc": "9169:170:13",
													"nodeType": "YulBlock",
													"src": "9169:170:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9186:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9186:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9197:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9197:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9179:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9179:6:13"
																},
																"nativeSrc": "9179:21:13",
																"nodeType": "YulFunctionCall",
																"src": "9179:21:13"
															},
															"nativeSrc": "9179:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "9179:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9220:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9220:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9231:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9231:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9216:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9216:3:13"
																		},
																		"nativeSrc": "9216:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9216:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9236:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9236:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9209:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9209:6:13"
																},
																"nativeSrc": "9209:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9209:30:13"
															},
															"nativeSrc": "9209:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "9209:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9259:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9259:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9270:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9270:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9255:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9255:3:13"
																		},
																		"nativeSrc": "9255:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9255:18:13"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "9275:22:13",
																		"nodeType": "YulLiteral",
																		"src": "9275:22:13",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9248:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9248:6:13"
																},
																"nativeSrc": "9248:50:13",
																"nodeType": "YulFunctionCall",
																"src": "9248:50:13"
															},
															"nativeSrc": "9248:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "9248:50:13"
														},
														{
															"nativeSrc": "9307:26:13",
															"nodeType": "YulAssignment",
															"src": "9307:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9319:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9319:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9330:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9330:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9315:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9315:3:13"
																},
																"nativeSrc": "9315:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9315:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9307:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9307:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8995:344:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9146:9:13",
														"nodeType": "YulTypedName",
														"src": "9146:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9160:4:13",
														"nodeType": "YulTypedName",
														"src": "9160:4:13",
														"type": ""
													}
												],
												"src": "8995:344:13"
											},
											{
												"body": {
													"nativeSrc": "9518:166:13",
													"nodeType": "YulBlock",
													"src": "9518:166:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9535:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9535:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9546:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9546:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9528:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9528:6:13"
																},
																"nativeSrc": "9528:21:13",
																"nodeType": "YulFunctionCall",
																"src": "9528:21:13"
															},
															"nativeSrc": "9528:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "9528:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9569:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9569:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9580:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9580:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9565:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9565:3:13"
																		},
																		"nativeSrc": "9565:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9565:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9585:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9585:2:13",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9558:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9558:6:13"
																},
																"nativeSrc": "9558:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9558:30:13"
															},
															"nativeSrc": "9558:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "9558:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9608:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9608:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9619:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9619:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9604:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9604:3:13"
																		},
																		"nativeSrc": "9604:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9604:18:13"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "9624:18:13",
																		"nodeType": "YulLiteral",
																		"src": "9624:18:13",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9597:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9597:6:13"
																},
																"nativeSrc": "9597:46:13",
																"nodeType": "YulFunctionCall",
																"src": "9597:46:13"
															},
															"nativeSrc": "9597:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "9597:46:13"
														},
														{
															"nativeSrc": "9652:26:13",
															"nodeType": "YulAssignment",
															"src": "9652:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9664:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9664:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9675:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9675:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9660:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9660:3:13"
																},
																"nativeSrc": "9660:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9660:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9652:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9652:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9344:340:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9495:9:13",
														"nodeType": "YulTypedName",
														"src": "9495:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9509:4:13",
														"nodeType": "YulTypedName",
														"src": "9509:4:13",
														"type": ""
													}
												],
												"src": "9344:340:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_8ad570219bc04ec8fe93d528087e9ef29c51349a8200323b11e6294bbeb0858a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Total fees cannot exceed 10%\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_a8df1003b4f1898b3f4e673d2d141aba9f3cf0ab33f770d9445773bff9bb0c84__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Marketing wallet cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_c4e1d858486171900ca25120b06e2607ab69f3bcfcf4340f0c39befc3a4fa003__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Max TX too low\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2ca3153f92d285b48e1a6bebdcbc4d3ee7498a2363249a201db98c3f869548dc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Max wallet too low\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Address is blacklisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1f55ae6815dfdfb35faf31c9e38c52bf64d3d72c827fc76be01fb5a5548d4d4d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Exceeds max transaction amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_eb7ec3ab8cf4e54e1949e272237f629c67bd685fc80d9d02b42820f52828d272__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Exceeds max wallet size\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106101fd575f3560e01c80636b67c4df1161011457806395d89b41116100a9578063a9059cbb11610079578063a9059cbb14610435578063c8c8ebe414610448578063d547741f14610451578063dd62ed3e14610464578063fe575a871461049c575f5ffd5b806395d89b411461040a57806398118cb4146104125780639d913ef51461041b578063a217fddf1461042e575f5ffd5b806379cc6790116100e457806379cc6790146103d35780638456cb59146103e65780638f3fa860146103ee57806391d14854146103f7575f5ffd5b80636b67c4df1461036357806370a082311461036c57806375b238fc1461039457806375f0a874146103a8575f5ffd5b80632f2ff15d116101955780633f4ba83a116101655780633f4ba83a1461030857806342966c68146103105780635342acb4146103235780635c975abb146103455780635d098b3814610350575f5ffd5b80632f2ff15d146102c057806330b94cd5146102d3578063313ce567146102e657806336568abe146102f5575f5ffd5b8063153b0d1e116101d0578063153b0d1e1461026657806318160ddd1461027957806323b872dd1461028b578063248a9ca31461029e575f5ffd5b806301ffc9a71461020157806306fdde0314610229578063095ea7b31461023e5780630b78f9c014610251575b5f5ffd5b61021461020f366004611210565b6104be565b60405190151581526020015b60405180910390f35b6102316104ce565b604051610220919061123e565b61021461024c36600461128e565b61055e565b61026461025f3660046112b6565b610575565b005b6102646102743660046112d6565b610634565b6002545b604051908152602001610220565b61021461029936600461130f565b6106aa565b61027d6102ac366004611349565b5f9081526005602052604090206001015490565b6102646102ce366004611360565b6106cd565b6102646102e13660046112d6565b6106f7565b60405160128152602001610220565b610264610303366004611360565b610739565b610264610771565b61026461031e366004611349565b610793565b61021461033136600461138a565b600d6020525f908152604090205460ff1681565b60065460ff16610214565b61026461035e36600461138a565b61079d565b61027d60085481565b61027d61037a36600461138a565b6001600160a01b03165f9081526020819052604090205490565b61027d5f5160206114745f395f51905f5281565b600a546103bb906001600160a01b031681565b6040516001600160a01b039091168152602001610220565b6102646103e136600461128e565b61085f565b610264610878565b61027d600c5481565b610214610405366004611360565b610897565b6102316108c1565b61027d60095481565b6102646104293660046112b6565b6108d0565b61027d5f81565b61021461044336600461128e565b6109db565b61027d600b5481565b61026461045f366004611360565b6109e8565b61027d6104723660046113a3565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6102146104aa36600461138a565b600e6020525f908152604090205460ff1681565b5f6104c882610a0c565b92915050565b6060600380546104dd906113cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610509906113cb565b80156105545780601f1061052b57610100808354040283529160200191610554565b820191905f5260205f20905b81548152906001019060200180831161053757829003601f168201915b5050505050905090565b5f3361056b818585610a40565b5060019392505050565b5f5160206114745f395f51905f5261058c81610a4d565b600a6105988385611417565b11156105eb5760405162461bcd60e51b815260206004820152601c60248201527f546f74616c20666565732063616e6e6f7420657863656564203130250000000060448201526064015b60405180910390fd5b6008839055600982905560408051848152602081018490527f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a191015b60405180910390a1505050565b5f5160206114745f395f51905f5261064b81610a4d565b6001600160a01b0383165f818152600e6020908152604091829020805460ff191686151590811790915591519182527f6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac910160405180910390a2505050565b5f336106b7858285610a57565b6106c2858585610acc565b506001949350505050565b5f828152600560205260409020600101546106e781610a4d565b6106f18383610b29565b50505050565b5f5160206114745f395f51905f5261070e81610a4d565b506001600160a01b03919091165f908152600d60205260409020805460ff1916911515919091179055565b6001600160a01b03811633146107625760405163334bd91960e11b815260040160405180910390fd5b61076c8282610bba565b505050565b5f5160206114745f395f51905f5261078881610a4d565b610790610c25565b50565b6107903382610c77565b5f5160206114745f395f51905f526107b481610a4d565b6001600160a01b03821661080a5760405162461bcd60e51b815260206004820152601f60248201527f4d61726b6574696e672077616c6c65742063616e6e6f74206265207a65726f0060448201526064016105e2565b600a80546001600160a01b0319166001600160a01b0384169081179091556040519081527fbf86feedee5b30c30a8243bd21deebb704d141478d39b1be04fe5ee739f214e79060200160405180910390a15050565b61086a823383610a57565b6108748282610c77565b5050565b5f5160206114745f395f51905f5261088f81610a4d565b610790610cab565b5f9182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600480546104dd906113cb565b5f5160206114745f395f51905f526108e781610a4d565b6108ff6103e86b033b2e3c9fd0803ce800000061142a565b83101561093f5760405162461bcd60e51b815260206004820152600e60248201526d4d617820545820746f6f206c6f7760901b60448201526064016105e2565b6109576103e86b033b2e3c9fd0803ce800000061142a565b82101561099b5760405162461bcd60e51b81526020600482015260126024820152714d61782077616c6c657420746f6f206c6f7760701b60448201526064016105e2565b600b839055600c82905560408051848152602081018490527fb6cf947475d47632612a3265c7bc83f5cfed7429546220bfb088c3634f91c2299101610627565b5f3361056b818585610acc565b5f82815260056020526040902060010154610a0281610a4d565b6106f18383610bba565b5f6001600160e01b03198216637965db0b60e01b14806104c857506301ffc9a760e01b6001600160e01b03198316146104c8565b61076c8383836001610ce8565b6107908133610dba565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146106f15781811015610abe57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016105e2565b6106f184848484035f610ce8565b6001600160a01b038316610af557604051634b637e8f60e11b81525f60048201526024016105e2565b6001600160a01b038216610b1e5760405163ec442f0560e01b81525f60048201526024016105e2565b61076c838383610df3565b5f610b348383610897565b610bb3575f8381526005602090815260408083206001600160a01b03861684529091529020805460ff19166001179055610b6b3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016104c8565b505f6104c8565b5f610bc58383610897565b15610bb3575f8381526005602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016104c8565b610c2d611059565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610ca057604051634b637e8f60e11b81525f60048201526024016105e2565b610874825f83610df3565b610cb36110a4565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c5a3390565b6001600160a01b038416610d115760405163e602df0560e01b81525f60048201526024016105e2565b6001600160a01b038316610d3a57604051634a1406b160e11b81525f60048201526024016105e2565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156106f157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610dac91815260200190565b60405180910390a350505050565b610dc48282610897565b6108745760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016105e2565b610dfb6110a4565b6001600160a01b0383161580610e1857506001600160a01b038216155b15610e285761076c8383836110ea565b6001600160a01b0383165f908152600e602052604090205460ff16158015610e6857506001600160a01b0382165f908152600e602052604090205460ff16155b610ead5760405162461bcd60e51b81526020600482015260166024820152751059191c995cdcc81a5cc8189b1858dadb1a5cdd195960521b60448201526064016105e2565b6001600160a01b0383165f908152600d602052604090205460ff16158015610eed57506001600160a01b0382165f908152600d602052604090205460ff16155b1561104e57600b54811115610f445760405162461bcd60e51b815260206004820152601e60248201527f45786365656473206d6178207472616e73616374696f6e20616d6f756e74000060448201526064016105e2565b600c5481610f66846001600160a01b03165f9081526020819052604090205490565b610f709190611417565b1115610fbe5760405162461bcd60e51b815260206004820152601760248201527f45786365656473206d61782077616c6c65742073697a6500000000000000000060448201526064016105e2565b5f606460085483610fcf9190611449565b610fd9919061142a565b90505f606460095484610fec9190611449565b610ff6919061142a565b90505f6110038284611417565b9050801561104a57600a546110239087906001600160a01b0316856110ea565b61102e8630846110ea565b611042868661103d8488611460565b6110ea565b505050505050565b5050505b61076c8383836110ea565b60065460ff166110a25760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105e2565b565b60065460ff16156110a25760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105e2565b6001600160a01b038316611114578060025f8282546111099190611417565b909155506111849050565b6001600160a01b0383165f90815260208190526040902054818110156111665760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016105e2565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166111a0576002805482900390556111be565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161120391815260200190565b60405180910390a3505050565b5f60208284031215611220575f5ffd5b81356001600160e01b031981168114611237575f5ffd5b9392505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114611289575f5ffd5b919050565b5f5f6040838503121561129f575f5ffd5b6112a883611273565b946020939093013593505050565b5f5f604083850312156112c7575f5ffd5b50508035926020909101359150565b5f5f604083850312156112e7575f5ffd5b6112f083611273565b915060208301358015158114611304575f5ffd5b809150509250929050565b5f5f5f60608486031215611321575f5ffd5b61132a84611273565b925061133860208501611273565b929592945050506040919091013590565b5f60208284031215611359575f5ffd5b5035919050565b5f5f60408385031215611371575f5ffd5b8235915061138160208401611273565b90509250929050565b5f6020828403121561139a575f5ffd5b61123782611273565b5f5f604083850312156113b4575f5ffd5b6113bd83611273565b915061138160208401611273565b600181811c908216806113df57607f821691505b6020821081036113fd57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156104c8576104c8611403565b5f8261144457634e487b7160e01b5f52601260045260245ffd5b500490565b80820281158282048414176104c8576104c8611403565b818103818111156104c8576104c861140356fea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220b1e0272f98e6d173bcb9e6c74035d9ac1fbf042f9fb1d585f10d703661b07e9e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B67C4DF GT PUSH2 0x114 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0xC8C8EBE4 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x49C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x98118CB4 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x9D913EF5 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x42E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x79CC6790 GT PUSH2 0xE4 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x8F3FA860 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3F7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6B67C4DF EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x3A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x165 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x5D098B38 EQ PUSH2 0x350 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x30B94CD5 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x153B0D1E GT PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x29E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xB78F9C0 EQ PUSH2 0x251 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x214 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH2 0x214 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x55E JUMP JUMPDEST PUSH2 0x264 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x264 PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0x634 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x220 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x130F JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x27D PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x264 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1360 JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x264 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x220 JUMP JUMPDEST PUSH2 0x264 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x1360 JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST PUSH2 0x264 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x264 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0x793 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x138A JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x214 JUMP JUMPDEST PUSH2 0x264 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x138A JUMP JUMPDEST PUSH2 0x79D JUMP JUMPDEST PUSH2 0x27D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x138A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x27D PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1474 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x3BB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x220 JUMP JUMPDEST PUSH2 0x264 PUSH2 0x3E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x85F JUMP JUMPDEST PUSH2 0x264 PUSH2 0x878 JUMP JUMPDEST PUSH2 0x27D PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x1360 JUMP JUMPDEST PUSH2 0x897 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x264 PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x8D0 JUMP JUMPDEST PUSH2 0x27D PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x9DB JUMP JUMPDEST PUSH2 0x27D PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x264 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x1360 JUMP JUMPDEST PUSH2 0x9E8 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x472 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x4AA CALLDATASIZE PUSH1 0x4 PUSH2 0x138A JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x4C8 DUP3 PUSH2 0xA0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4DD SWAP1 PUSH2 0x13CB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x509 SWAP1 PUSH2 0x13CB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x554 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x52B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x554 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x537 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x56B DUP2 DUP6 DUP6 PUSH2 0xA40 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1474 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x58C DUP2 PUSH2 0xA4D JUMP JUMPDEST PUSH1 0xA PUSH2 0x598 DUP4 DUP6 PUSH2 0x1417 JUMP JUMPDEST GT ISZERO PUSH2 0x5EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20666565732063616E6E6F74206578636565642031302500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP4 SWAP1 SSTORE PUSH1 0x9 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x5C6323BF1C2D7AAEA2C091A4751C1C87AF7F2864650C336507A77D0557AF37A1 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1474 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x64B DUP2 PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x6B7 DUP6 DUP3 DUP6 PUSH2 0xA57 JUMP JUMPDEST PUSH2 0x6C2 DUP6 DUP6 DUP6 PUSH2 0xACC JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x6E7 DUP2 PUSH2 0xA4D JUMP JUMPDEST PUSH2 0x6F1 DUP4 DUP4 PUSH2 0xB29 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1474 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x70E DUP2 PUSH2 0xA4D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x762 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76C DUP3 DUP3 PUSH2 0xBBA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1474 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x788 DUP2 PUSH2 0xA4D JUMP JUMPDEST PUSH2 0x790 PUSH2 0xC25 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x790 CALLER DUP3 PUSH2 0xC77 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1474 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x7B4 DUP2 PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x80A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E672077616C6C65742063616E6E6F74206265207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xBF86FEEDEE5B30C30A8243BD21DEEBB704D141478D39B1BE04FE5EE739F214E7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x86A DUP3 CALLER DUP4 PUSH2 0xA57 JUMP JUMPDEST PUSH2 0x874 DUP3 DUP3 PUSH2 0xC77 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1474 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x88F DUP2 PUSH2 0xA4D JUMP JUMPDEST PUSH2 0x790 PUSH2 0xCAB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4DD SWAP1 PUSH2 0x13CB JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x1474 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH2 0x8E7 DUP2 PUSH2 0xA4D JUMP JUMPDEST PUSH2 0x8FF PUSH2 0x3E8 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x142A JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x93F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4D617820545820746F6F206C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x957 PUSH2 0x3E8 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x142A JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x99B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4D61782077616C6C657420746F6F206C6F77 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xB DUP4 SWAP1 SSTORE PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xB6CF947475D47632612A3265C7BC83F5CFED7429546220BFB088C3634F91C229 SWAP2 ADD PUSH2 0x627 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x56B DUP2 DUP6 DUP6 PUSH2 0xACC JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA02 DUP2 PUSH2 0xA4D JUMP JUMPDEST PUSH2 0x6F1 DUP4 DUP4 PUSH2 0xBBA JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4C8 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x76C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0x790 DUP2 CALLER PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x6F1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xABE JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x6F1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x76C DUP4 DUP4 DUP4 PUSH2 0xDF3 JUMP JUMPDEST PUSH0 PUSH2 0xB34 DUP4 DUP4 PUSH2 0x897 JUMP JUMPDEST PUSH2 0xBB3 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xB6B CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4C8 JUMP JUMPDEST POP PUSH0 PUSH2 0x4C8 JUMP JUMPDEST PUSH0 PUSH2 0xBC5 DUP4 DUP4 PUSH2 0x897 JUMP JUMPDEST ISZERO PUSH2 0xBB3 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0xC2D PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCA0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x874 DUP3 PUSH0 DUP4 PUSH2 0xDF3 JUMP JUMPDEST PUSH2 0xCB3 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xC5A CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD11 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD3A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x6F1 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDAC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xDC4 DUP3 DUP3 PUSH2 0x897 JUMP JUMPDEST PUSH2 0x874 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0xDFB PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0xE18 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0xE28 JUMPI PUSH2 0x76C DUP4 DUP4 DUP4 PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xE68 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xEAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1059191C995CDCC81A5CC8189B1858DADB1A5CDD1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xEED JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x104E JUMPI PUSH1 0xB SLOAD DUP2 GT ISZERO PUSH2 0xF44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178207472616E73616374696F6E20616D6F756E740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 PUSH2 0xF66 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF70 SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST GT ISZERO PUSH2 0xFBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D61782077616C6C65742073697A65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP4 PUSH2 0xFCF SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH2 0xFD9 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP5 PUSH2 0xFEC SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH2 0xFF6 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1003 DUP3 DUP5 PUSH2 0x1417 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x104A JUMPI PUSH1 0xA SLOAD PUSH2 0x1023 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH2 0x10EA JUMP JUMPDEST PUSH2 0x102E DUP7 ADDRESS DUP5 PUSH2 0x10EA JUMP JUMPDEST PUSH2 0x1042 DUP7 DUP7 PUSH2 0x103D DUP5 DUP9 PUSH2 0x1460 JUMP JUMPDEST PUSH2 0x10EA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP JUMPDEST PUSH2 0x76C DUP4 DUP4 DUP4 PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND PUSH2 0x10A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1114 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1109 SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1184 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1166 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11A0 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1203 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1220 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1237 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1289 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x129F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x12A8 DUP4 PUSH2 0x1273 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x12F0 DUP4 PUSH2 0x1273 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1304 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1321 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x132A DUP5 PUSH2 0x1273 JUMP JUMPDEST SWAP3 POP PUSH2 0x1338 PUSH1 0x20 DUP6 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1359 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1371 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1381 PUSH1 0x20 DUP5 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x139A JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1237 DUP3 PUSH2 0x1273 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x13BD DUP4 PUSH2 0x1273 JUMP JUMPDEST SWAP2 POP PUSH2 0x1381 PUSH1 0x20 DUP5 ADD PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x13DF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13FD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4C8 JUMPI PUSH2 0x4C8 PUSH2 0x1403 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1444 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4C8 JUMPI PUSH2 0x4C8 PUSH2 0x1403 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4C8 JUMPI PUSH2 0x4C8 PUSH2 0x1403 JUMP INVALID LOG4 SWAP9 SMOD KECCAK256 TLOAD 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA2646970667358221220B1E0272F98E6D173BCB9E6C7 BLOCKHASH CALLDATALOAD 0xD9 0xAC 0x1F 0xBF DIV 0x2F SWAP16 0xB1 0xD5 DUP6 CALL 0xD PUSH17 0x3661B07E9E64736F6C634300081C003300 ",
							"sourceMap": "377:4934:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5107:201;;;;;;:::i;:::-;;:::i;:::-;;;470:14:13;;463:22;445:41;;433:2;418:18;5107:201:12;;;;;;;;1779:89:5;;;:::i;:::-;;;;;;;:::i;3998:186::-;;;;;;:::i;:::-;;:::i;3698:323:12:-;;;;;;:::i;:::-;;:::i;:::-;;4481:196;;;;;;:::i;:::-;;:::i;2849:97:5:-;2927:12;;2849:97;;;2252:25:13;;;2240:2;2225:18;2849:97:5;2106:177:13;4776:244:5;;;;;;:::i;:::-;;:::i;3810:120:0:-;;;;;;:::i;:::-;3875:7;3901:12;;;:6;:12;;;;;:22;;;;3810:120;4226:136;;;;;;:::i;:::-;;:::i;4722:143:12:-;;;;;;:::i;:::-;;:::i;2707:82:5:-;;;2780:2;3527:36:13;;3515:2;3500:18;2707:82:5;3385:184:13;5328:245:0;;;;;;:::i;:::-;;:::i;4991:78:12:-;;;:::i;618:87:7:-;;;;;;:::i;:::-;;:::i;934:49:12:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1615:84:3;1685:7;;;;1615:84;;3408:278:12;;;;;;:::i;:::-;;:::i;680:31::-;;;;;;3004:116:5;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:5;3069:7;3095:18;;;;;;;;;;;;3004:116;468:60:12;;-1:-1:-1;;;;;;;;;;;468:60:12;;768:30;;;;;-1:-1:-1;;;;;768:30:12;;;;;;-1:-1:-1;;;;;4160:32:13;;;4142:51;;4130:2;4115:18;768:30:12;3996:203:13;1021:158:7;;;;;;:::i;:::-;;:::i;4905:74:12:-;;;:::i;876:28::-;;;;;;2854:136:0;;;;;;:::i;:::-;;:::i;1981:93:5:-;;;:::i;724:31:12:-;;;;;;4033:407;;;;;;:::i;:::-;;:::i;2187:49:0:-;;2232:4;2187:49;;3315:178:5;;;;;;:::i;:::-;;:::i;834:35:12:-;;;;;;4642:138:0;;;;;;:::i;:::-;;:::i;3551:140:5:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:5;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;990:45:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5107:201;5235:4;5264:36;5288:11;5264:23;:36::i;:::-;5257:43;5107:201;-1:-1:-1;;5107:201:12:o;1779:89:5:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:9;4125:31:5;735:10:9;4141:7:5;4150:5;4125:8;:31::i;:::-;-1:-1:-1;4173:4:5;;3998:186;-1:-1:-1;;;3998:186:5:o;3698:323:12:-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;3843:2:12::1;3810:29;3826:13:::0;3810;:29:::1;:::i;:::-;:35;;3802:76;;;::::0;-1:-1:-1;;;3802:76:12;;5318:2:13;3802:76:12::1;::::0;::::1;5300:21:13::0;5357:2;5337:18;;;5330:30;5396;5376:18;;;5369:58;5444:18;;3802:76:12::1;;;;;;;;;3889:12;:28:::0;;;3928:12:::1;:28:::0;;;3972:41:::1;::::0;;5647:25:13;;;5703:2;5688:18;;5681:34;;;3972:41:12::1;::::0;5620:18:13;3972:41:12::1;;;;;;;;3698:323:::0;;;:::o;4481:196::-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;4579:22:12;::::1;;::::0;;;:13:::1;:22;::::0;;;;;;;;:36;;-1:-1:-1;;4579:36:12::1;::::0;::::1;;::::0;;::::1;::::0;;;4631:38;;445:41:13;;;4631:38:12::1;::::0;418:18:13;4631:38:12::1;;;;;;;4481:196:::0;;;:::o;4776:244:5:-;4863:4;735:10:9;4919:37:5;4935:4;735:10:9;4950:5:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:5;;4776:244;-1:-1:-1;;;;4776:244:5:o;4226:136:0:-;3875:7;3901:12;;;:6;:12;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;4722:143:12:-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;;4820:26:12;;;::::1;;::::0;;;:17:::1;:26;::::0;;;;:37;;-1:-1:-1;;4820:37:12::1;::::0;::::1;;::::0;;;::::1;::::0;;4722:143::o;5328:245:0:-;-1:-1:-1;;;;;5421:34:0;;735:10:9;5421:34:0;5417:102;;5478:30;;-1:-1:-1;;;5478:30:0;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;4991:78:12:-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;5051:10:12::1;:8;:10::i;:::-;4991:78:::0;:::o;618:87:7:-;672:26;735:10:9;692:5:7;672;:26::i;3408:278:12:-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;3511:30:12;::::1;3503:74;;;::::0;-1:-1:-1;;;3503:74:12;;5928:2:13;3503:74:12::1;::::0;::::1;5910:21:13::0;5967:2;5947:18;;;5940:30;6006:33;5986:18;;;5979:61;6057:18;;3503:74:12::1;5726:355:13::0;3503:74:12::1;3588:15;:34:::0;;-1:-1:-1;;;;;;3588:34:12::1;-1:-1:-1::0;;;;;3588:34:12;::::1;::::0;;::::1;::::0;;;3638:40:::1;::::0;4142:51:13;;;3638:40:12::1;::::0;4130:2:13;4115:18;3638:40:12::1;;;;;;;3408:278:::0;;:::o;1021:158:7:-;1096:45;1112:7;735:10:9;1135:5:7;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;4905:74:12:-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;4963:8:12::1;:6;:8::i;2854:136:0:-:0;2931:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136::o;1981:93:5:-;2028:13;2060:7;2053:14;;;;;:::i;4033:407:12:-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;4166:19:12::1;4181:4;599:22;4166:19;:::i;:::-;4150:12;:35;;4142:62;;;::::0;-1:-1:-1;;;4142:62:12;;6510:2:13;4142:62:12::1;::::0;::::1;6492:21:13::0;6549:2;6529:18;;;6522:30;-1:-1:-1;;;6568:18:13;;;6561:44;6622:18;;4142:62:12::1;6308:338:13::0;4142:62:12::1;4241:19;4256:4;599:22;4241:19;:::i;:::-;4223:14;:37;;4215:68;;;::::0;-1:-1:-1;;;4215:68:12;;6853:2:13;4215:68:12::1;::::0;::::1;6835:21:13::0;6892:2;6872:18;;;6865:30;-1:-1:-1;;;6911:18:13;;;6904:48;6969:18;;4215:68:12::1;6651:342:13::0;4215:68:12::1;4294:20;:35:::0;;;4340:13:::1;:30:::0;;;4386:46:::1;::::0;;5647:25:13;;;5703:2;5688:18;;5681:34;;;4386:46:12::1;::::0;5620:18:13;4386:46:12::1;5473:248:13::0;3315:178:5;3384:4;735:10:9;3438:27:5;735:10:9;3455:2:5;3459:5;3438:9;:27::i;4642:138:0:-;3875:7;3901:12;;;:6;:12;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;2565:202::-:0;2650:4;-1:-1:-1;;;;;;2673:47:0;;-1:-1:-1;;;2673:47:0;;:87;;-1:-1:-1;;;;;;;;;;862:40:10;;;2724:36:0;763:146:10;8726:128:5;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;3199:103:0:-;3265:30;3276:4;735:10:9;3265::0;:30::i;10415:477:5:-;-1:-1:-1;;;;;3657:18:5;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:37:5;;10576:310;;10656:5;10637:16;:24;10633:130;;;10688:60;;-1:-1:-1;;;10688:60:5;;-1:-1:-1;;;;;7218:32:13;;10688:60:5;;;7200:51:13;7267:18;;;7260:34;;;7310:18;;;7303:34;;;7173:18;;10688:60:5;6998:345:13;10633:130:5;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;5393:300::-;-1:-1:-1;;;;;5476:18:5;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:5;;5544:1;5517:30;;;4142:51:13;4115:18;;5517:30:5;3996:203:13;5472:86:5;-1:-1:-1;;;;;5571:16:5;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:5;;5639:1;5610:32;;;4142:51:13;4115:18;;5610:32:5;3996:203:13;5567:86:5;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:9;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;6730:317;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6866:29:0;;;;;;;;;;:37;;-1:-1:-1;;6866:37:0;;;6922:40;735:10:9;;6866:12:0;;6922:40;;6898:5;6922:40;-1:-1:-1;6983:4:0;6976:11;;2433:117:3;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:3::1;::::0;;2521:22:::1;735:10:9::0;2530:12:3::1;2521:22;::::0;-1:-1:-1;;;;;4160:32:13;;;4142:51;;4130:2;4115:18;2521:22:3::1;;;;;;;2433:117::o:0;7984:206:5:-;-1:-1:-1;;;;;8054:21:5;;8050:89;;8098:30;;-1:-1:-1;;;8098:30:5;;8125:1;8098:30;;;4142:51:13;4115:18;;8098:30:5;3996:203:13;8050:89:5;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;2186:115:3:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:3::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;735:10:9::0;;656:96;9701:432:5;-1:-1:-1;;;;;9813:19:5;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:5;;9884:1;9855:32;;;4142:51:13;4115:18;;9855:32:5;3996:203:13;9809:89:5;-1:-1:-1;;;;;9911:21:5;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:5;;9983:1;9955:31;;;4142:51:13;4115:18;;9955:31:5;3996:203:13;9907:90:5;-1:-1:-1;;;;;10006:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:5;10094:5;-1:-1:-1;;;;;10085:31:5;;10110:5;10085:31;;;;2252:25:13;;2240:2;2225:18;;2106:177;10085:31:5;;;;;;;;9701:432;;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3565:47;;-1:-1:-1;;;3565:47:0;;-1:-1:-1;;;;;7540:32:13;;3565:47:0;;;7522:51:13;7589:18;;;7582:34;;;7495:18;;3565:47:0;7348:274:13;2134:1238:12;1239:19:3;:17;:19::i;:::-;-1:-1:-1;;;;;2319:18:12;::::1;::::0;;:38:::1;;-1:-1:-1::0;;;;;;2341:16:12;::::1;::::0;2319:38:::1;2315:123;;;2374:31;2388:4;2394:2;2398:6;2374:13;:31::i;2315:123::-;-1:-1:-1::0;;;;;2467:19:12;::::1;;::::0;;;:13:::1;:19;::::0;;;;;::::1;;2466:20;:42:::0;::::1;;;-1:-1:-1::0;;;;;;2491:17:12;::::1;;::::0;;;:13:::1;:17;::::0;;;;;::::1;;2490:18;2466:42;2458:77;;;::::0;-1:-1:-1;;;2458:77:12;;7829:2:13;2458:77:12::1;::::0;::::1;7811:21:13::0;7868:2;7848:18;;;7841:30;-1:-1:-1;;;7887:18:13;;;7880:52;7949:18;;2458:77:12::1;7627:346:13::0;2458:77:12::1;-1:-1:-1::0;;;;;2561:23:12;::::1;;::::0;;;:17:::1;:23;::::0;;;;;::::1;;2560:24;:50:::0;::::1;;;-1:-1:-1::0;;;;;;2589:21:12;::::1;;::::0;;;:17:::1;:21;::::0;;;;;::::1;;2588:22;2560:50;2556:757;;;2645:20;;2635:6;:30;;2627:73;;;::::0;-1:-1:-1;;;2627:73:12;;8180:2:13;2627:73:12::1;::::0;::::1;8162:21:13::0;8219:2;8199:18;;;8192:30;8258:32;8238:18;;;8231:60;8308:18;;2627:73:12::1;7978:354:13::0;2627:73:12::1;2749:13;;2739:6;2723:13;2733:2;-1:-1:-1::0;;;;;3095:18:5;3069:7;3095:18;;;;;;;;;;;;3004:116;2723:13:12::1;:22;;;;:::i;:::-;:39;;2715:75;;;::::0;-1:-1:-1;;;2715:75:12;;8539:2:13;2715:75:12::1;::::0;::::1;8521:21:13::0;8578:2;8558:18;;;8551:30;8617:25;8597:18;;;8590:53;8660:18;;2715:75:12::1;8337:347:13::0;2715:75:12::1;2819:23;2871:3;2855:12;;2846:6;:21;;;;:::i;:::-;2845:29;;;;:::i;:::-;2819:55;;2889:23;2941:3;2925:12;;2916:6;:21;;;;:::i;:::-;2915:29;;;;:::i;:::-;2889:55:::0;-1:-1:-1;2959:16:12::1;2978:33;2889:55:::0;2978:15;:33:::1;:::i;:::-;2959:52:::0;-1:-1:-1;3044:12:12;;3040:262:::1;;3097:15;::::0;3077:53:::1;::::0;3091:4;;-1:-1:-1;;;;;3097:15:12::1;3114::::0;3077:13:::1;:53::i;:::-;3149:51;3163:4;3177;3184:15;3149:13;:51::i;:::-;3219:42;3233:4:::0;3239:2;3243:17:::1;3252:8:::0;3243:6;:17:::1;:::i;:::-;3219:13;:42::i;:::-;3280:7;;;5529:37:0::0;5328:245;;:::o;3040:262:12:-:1;2612:701;;;2556:757;3333:31;3347:4;3353:2;3357:6;3333:13;:31::i;1945:106:3:-:0;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:3;;9197:2:13;2003:41:3;;;9179:21:13;9236:2;9216:18;;;9209:30;-1:-1:-1;;;9255:18:13;;;9248:50;9315:18;;2003:41:3;8995:344:13;2003:41:3;1945:106::o;1767:::-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:3;;9546:2:13;1828:38:3;;;9528:21:13;9585:2;9565:18;;;9558:30;-1:-1:-1;;;9604:18:13;;;9597:46;9660:18;;1828:38:3;9344:340:13;6008:1107:5;-1:-1:-1;;;;;6097:18:5;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:5;;-1:-1:-1;6093:540:5;;-1:-1:-1;;;;;6307:15:5;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:5;;-1:-1:-1;;;;;7218:32:13;;6386:50:5;;;7200:51:13;7267:18;;;7260:34;;;7310:18;;;7303:34;;;7173:18;;6386:50:5;6998:345:13;6336:115:5;-1:-1:-1;;;;;6571:15:5;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:5;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:5;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:5;7092:4;-1:-1:-1;;;;;7083:25:5;;7102:5;7083:25;;;;2252::13;;2240:2;2225:18;;2106:177;7083:25:5;;;;;;;;6008:1107;;;:::o;14:286:13:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:13:o;497:418::-;646:2;635:9;628:21;609:4;678:6;672:13;721:6;716:2;705:9;701:18;694:34;780:6;775:2;767:6;763:15;758:2;747:9;743:18;737:50;836:1;831:2;822:6;811:9;807:22;803:31;796:42;906:2;899;895:7;890:2;882:6;878:15;874:29;863:9;859:45;855:54;847:62;;;497:418;;;;:::o;920:173::-;988:20;;-1:-1:-1;;;;;1037:31:13;;1027:42;;1017:70;;1083:1;1080;1073:12;1017:70;920:173;;;:::o;1098:300::-;1166:6;1174;1227:2;1215:9;1206:7;1202:23;1198:32;1195:52;;;1243:1;1240;1233:12;1195:52;1266:29;1285:9;1266:29;:::i;:::-;1256:39;1364:2;1349:18;;;;1336:32;;-1:-1:-1;;;1098:300:13:o;1403:346::-;1471:6;1479;1532:2;1520:9;1511:7;1507:23;1503:32;1500:52;;;1548:1;1545;1538:12;1500:52;-1:-1:-1;;1593:23:13;;;1713:2;1698:18;;;1685:32;;-1:-1:-1;1403:346:13:o;1754:347::-;1819:6;1827;1880:2;1868:9;1859:7;1855:23;1851:32;1848:52;;;1896:1;1893;1886:12;1848:52;1919:29;1938:9;1919:29;:::i;:::-;1909:39;;1998:2;1987:9;1983:18;1970:32;2045:5;2038:13;2031:21;2024:5;2021:32;2011:60;;2067:1;2064;2057:12;2011:60;2090:5;2080:15;;;1754:347;;;;;:::o;2288:374::-;2365:6;2373;2381;2434:2;2422:9;2413:7;2409:23;2405:32;2402:52;;;2450:1;2447;2440:12;2402:52;2473:29;2492:9;2473:29;:::i;:::-;2463:39;;2521:38;2555:2;2544:9;2540:18;2521:38;:::i;:::-;2288:374;;2511:48;;-1:-1:-1;;;2628:2:13;2613:18;;;;2600:32;;2288:374::o;2667:226::-;2726:6;2779:2;2767:9;2758:7;2754:23;2750:32;2747:52;;;2795:1;2792;2785:12;2747:52;-1:-1:-1;2840:23:13;;2667:226;-1:-1:-1;2667:226:13:o;3080:300::-;3148:6;3156;3209:2;3197:9;3188:7;3184:23;3180:32;3177:52;;;3225:1;3222;3215:12;3177:52;3270:23;;;-1:-1:-1;3336:38:13;3370:2;3355:18;;3336:38;:::i;:::-;3326:48;;3080:300;;;;;:::o;3805:186::-;3864:6;3917:2;3905:9;3896:7;3892:23;3888:32;3885:52;;;3933:1;3930;3923:12;3885:52;3956:29;3975:9;3956:29;:::i;4204:260::-;4272:6;4280;4333:2;4321:9;4312:7;4308:23;4304:32;4301:52;;;4349:1;4346;4339:12;4301:52;4372:29;4391:9;4372:29;:::i;:::-;4362:39;;4420:38;4454:2;4443:9;4439:18;4420:38;:::i;4469:380::-;4548:1;4544:12;;;;4591;;;4612:61;;4666:4;4658:6;4654:17;4644:27;;4612:61;4719:2;4711:6;4708:14;4688:18;4685:38;4682:161;;4765:10;4760:3;4756:20;4753:1;4746:31;4800:4;4797:1;4790:15;4828:4;4825:1;4818:15;4682:161;;4469:380;;;:::o;4854:127::-;4915:10;4910:3;4906:20;4903:1;4896:31;4946:4;4943:1;4936:15;4970:4;4967:1;4960:15;4986:125;5051:9;;;5072:10;;;5069:36;;;5085:18;;:::i;6086:217::-;6126:1;6152;6142:132;;6196:10;6191:3;6187:20;6184:1;6177:31;6231:4;6228:1;6221:15;6259:4;6256:1;6249:15;6142:132;-1:-1:-1;6288:9:13;;6086:217::o;8689:168::-;8762:9;;;8793;;8810:15;;;8804:22;;8790:37;8780:71;;8831:18;;:::i;8862:128::-;8929:9;;;8950:11;;;8947:37;;;8964:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1064200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "infinite",
								"DEFAULT_ADMIN_ROLE()": "304",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24787",
								"balanceOf(address)": "2605",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "266",
								"getRoleAdmin(bytes32)": "2553",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2761",
								"isBlacklisted(address)": "2649",
								"isExcludedFromFee(address)": "2606",
								"liquidityFee()": "2361",
								"marketingFee()": "2340",
								"marketingWallet()": "2448",
								"maxTransactionAmount()": "2360",
								"maxWalletSize()": "2383",
								"name()": "infinite",
								"pause()": "infinite",
								"paused()": "2403",
								"renounceRole(bytes32,address)": "29135",
								"revokeRole(bytes32,address)": "infinite",
								"setBlacklist(address,bool)": "infinite",
								"setFeeExclusion(address,bool)": "infinite",
								"setFees(uint256,uint256)": "infinite",
								"setMarketingWallet(address)": "infinite",
								"setMaxLimits(uint256,uint256)": "infinite",
								"supportsInterface(bytes4)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unpause()": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 377,
									"end": 5311,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 377,
									"end": 5311,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 377,
									"end": 5311,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 710,
									"end": 711,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 680,
									"end": 711,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 680,
									"end": 711,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 754,
									"end": 755,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 724,
									"end": 755,
									"name": "PUSH",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 724,
									"end": 755,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1324,
									"end": 2122,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4C756749742E636F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4C4747"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1406,
									"end": 1436,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1406,
									"end": 1436,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1398,
									"end": 1472,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 1398,
									"end": 1472,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1398,
									"end": 1472,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1398,
									"end": 1472,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1398,
									"end": 1472,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1398,
									"end": 1472,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3152,
									"end": 3154,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1398,
									"end": 1472,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1398,
									"end": 1472,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1398,
									"end": 1472,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3134,
									"end": 3155,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3191,
									"end": 3193,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 3171,
									"end": 3189,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3171,
									"end": 3189,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3171,
									"end": 3189,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3164,
									"end": 3194,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3230,
									"end": 3263,
									"name": "PUSH",
									"source": 13,
									"value": "4D61726B6574696E672077616C6C65742063616E6E6F74206265207A65726F00"
								},
								{
									"begin": 3210,
									"end": 3228,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 3210,
									"end": 3228,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3210,
									"end": 3228,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3203,
									"end": 3264,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 3281,
									"end": 3299,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1398,
									"end": 1472,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1398,
									"end": 1472,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1398,
									"end": 1472,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1398,
									"end": 1472,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1398,
									"end": 1472,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1398,
									"end": 1472,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1398,
									"end": 1472,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1398,
									"end": 1472,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1398,
									"end": 1472,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1398,
									"end": 1472,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 1398,
									"end": 1472,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1524,
									"end": 1566,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1555,
									"end": 1565,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1524,
									"end": 1566,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1524,
									"end": 1566,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1524,
									"end": 1566,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1577,
									"end": 1611,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 505,
									"end": 528,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 1600,
									"end": 1610,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 1577,
									"end": 1587,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1577,
									"end": 1611,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1577,
									"end": 1611,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1577,
									"end": 1611,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1670,
									"end": 1685,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 1670,
									"end": 1704,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1670,
									"end": 1704,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1670,
									"end": 1704,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1670,
									"end": 1704,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1670,
									"end": 1704,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1670,
									"end": 1704,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1670,
									"end": 1704,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1670,
									"end": 1704,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1738,
									"end": 1756,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1753,
									"end": 1756,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 599,
									"end": 621,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 1738,
									"end": 1756,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1738,
									"end": 1756,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1738,
									"end": 1756,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1738,
									"end": 1756,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1715,
									"end": 1735,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 1715,
									"end": 1756,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1789,
									"end": 1806,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1804,
									"end": 1806,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 599,
									"end": 621,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 1789,
									"end": 1806,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1789,
									"end": 1806,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1789,
									"end": 1806,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1789,
									"end": 1806,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1773,
									"end": 1786,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "C"
								},
								{
									"begin": 1773,
									"end": 1806,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1904,
									"end": 1914,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 1915,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1886,
									"end": 1915,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 1915,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 1915,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 1903,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "D"
								},
								{
									"begin": 1886,
									"end": 1915,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1886,
									"end": 1915,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 1915,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1886,
									"end": 1915,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 1915,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 1915,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 1922,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 1922,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 1918,
									"end": 1922,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1886,
									"end": 1922,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 1922,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 1922,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 1922,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 1922,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 1922,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 1922,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 1922,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1959,
									"end": 1963,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 1933,
									"end": 1965,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1933,
									"end": 1965,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1933,
									"end": 1965,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1933,
									"end": 1965,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1933,
									"end": 1965,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 1933,
									"end": 1972,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1933,
									"end": 1972,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 1933,
									"end": 1972,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1933,
									"end": 1972,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1933,
									"end": 1972,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1933,
									"end": 1972,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1933,
									"end": 1972,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1933,
									"end": 1972,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1983,
									"end": 2018,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1983,
									"end": 2018,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1983,
									"end": 2018,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1983,
									"end": 2018,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1983,
									"end": 2018,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1983,
									"end": 2018,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1983,
									"end": 2018,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1983,
									"end": 2018,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 1983,
									"end": 2025,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1983,
									"end": 2025,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 1983,
									"end": 2025,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1983,
									"end": 2025,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1983,
									"end": 2025,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1983,
									"end": 2025,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1983,
									"end": 2025,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1983,
									"end": 2025,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1983,
									"end": 2025,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1983,
									"end": 2025,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2083,
									"end": 2114,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2083,
									"end": 2114,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 599,
									"end": 621,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 2083,
									"end": 2088,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 2083,
									"end": 2114,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2083,
									"end": 2114,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2083,
									"end": 2114,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 2122,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 377,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 377,
									"end": 5311,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3810,
									"end": 3861,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3783,
									"end": 3801,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3783,
									"end": 3801,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 3664,
									"end": 3867,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2134,
									"end": 3372,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 2134,
									"end": 3372,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 1239,
									"end": 1256,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 1239,
									"end": 1258,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2319,
									"end": 2337,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2319,
									"end": 2337,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2319,
									"end": 2337,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2319,
									"end": 2337,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2319,
									"end": 2357,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 2319,
									"end": 2357,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2341,
									"end": 2357,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2341,
									"end": 2357,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2341,
									"end": 2357,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2319,
									"end": 2357,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 2319,
									"end": 2357,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2315,
									"end": 2438,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2315,
									"end": 2438,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 2315,
									"end": 2438,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2374,
									"end": 2405,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 2388,
									"end": 2392,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2394,
									"end": 2396,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2398,
									"end": 2404,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2374,
									"end": 2387,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 2374,
									"end": 2405,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2374,
									"end": 2405,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 2374,
									"end": 2405,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2134,
									"end": 3372,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2134,
									"end": 3372,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2134,
									"end": 3372,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2134,
									"end": 3372,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2315,
									"end": 2438,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 2315,
									"end": 2438,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2467,
									"end": 2486,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2467,
									"end": 2486,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2467,
									"end": 2486,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2467,
									"end": 2486,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2467,
									"end": 2486,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2467,
									"end": 2486,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2467,
									"end": 2480,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "E"
								},
								{
									"begin": 2467,
									"end": 2486,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2467,
									"end": 2486,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2467,
									"end": 2486,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2467,
									"end": 2486,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2467,
									"end": 2486,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 2467,
									"end": 2486,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2467,
									"end": 2486,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 2467,
									"end": 2486,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2466,
									"end": 2486,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2466,
									"end": 2508,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2466,
									"end": 2508,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2466,
									"end": 2508,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 2466,
									"end": 2508,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2491,
									"end": 2508,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2491,
									"end": 2508,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2491,
									"end": 2508,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2491,
									"end": 2508,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2491,
									"end": 2508,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2491,
									"end": 2508,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2491,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "E"
								},
								{
									"begin": 2491,
									"end": 2508,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2491,
									"end": 2508,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2491,
									"end": 2508,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2491,
									"end": 2508,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2491,
									"end": 2508,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 2491,
									"end": 2508,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2491,
									"end": 2508,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 2491,
									"end": 2508,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2490,
									"end": 2508,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2466,
									"end": 2508,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 2466,
									"end": 2508,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2458,
									"end": 2535,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 2458,
									"end": 2535,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2458,
									"end": 2535,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2458,
									"end": 2535,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2458,
									"end": 2535,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2458,
									"end": 2535,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4076,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2458,
									"end": 2535,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2458,
									"end": 2535,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2458,
									"end": 2535,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4056,
									"end": 4077,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4113,
									"end": 4115,
									"name": "PUSH",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 4093,
									"end": 4111,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 4093,
									"end": 4111,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4093,
									"end": 4111,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4086,
									"end": 4116,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4152,
									"end": 4176,
									"name": "PUSH",
									"source": 13,
									"value": "4164647265737320697320626C61636B6C697374656400000000000000000000"
								},
								{
									"begin": 4132,
									"end": 4150,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 4132,
									"end": 4150,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4132,
									"end": 4150,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4125,
									"end": 4177,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4194,
									"end": 4212,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 4194,
									"end": 4212,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2458,
									"end": 2535,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 3872,
									"end": 4218,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2458,
									"end": 2535,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 2458,
									"end": 2535,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2561,
									"end": 2584,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2561,
									"end": 2584,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2561,
									"end": 2584,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2561,
									"end": 2584,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2561,
									"end": 2584,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2561,
									"end": 2584,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2561,
									"end": 2578,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "D"
								},
								{
									"begin": 2561,
									"end": 2584,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2561,
									"end": 2584,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2561,
									"end": 2584,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2561,
									"end": 2584,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2561,
									"end": 2584,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 2561,
									"end": 2584,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2561,
									"end": 2584,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 2561,
									"end": 2584,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2560,
									"end": 2584,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2560,
									"end": 2610,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2560,
									"end": 2610,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2560,
									"end": 2610,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 2560,
									"end": 2610,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2589,
									"end": 2610,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2589,
									"end": 2610,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2589,
									"end": 2610,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2589,
									"end": 2610,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2589,
									"end": 2610,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2589,
									"end": 2610,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2589,
									"end": 2606,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "D"
								},
								{
									"begin": 2589,
									"end": 2610,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2589,
									"end": 2610,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2589,
									"end": 2610,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2589,
									"end": 2610,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2589,
									"end": 2610,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 2589,
									"end": 2610,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2589,
									"end": 2610,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 2589,
									"end": 2610,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2588,
									"end": 2610,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2560,
									"end": 2610,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 2560,
									"end": 2610,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2556,
									"end": 3313,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2556,
									"end": 3313,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 2556,
									"end": 3313,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2645,
									"end": 2665,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 2645,
									"end": 2665,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2635,
									"end": 2641,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2635,
									"end": 2665,
									"modifierDepth": 1,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2635,
									"end": 2665,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2627,
									"end": 2700,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 2627,
									"end": 2700,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2627,
									"end": 2700,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2627,
									"end": 2700,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2627,
									"end": 2700,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2627,
									"end": 2700,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4425,
									"end": 4427,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2627,
									"end": 2700,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2627,
									"end": 2700,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2627,
									"end": 2700,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4407,
									"end": 4428,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4464,
									"end": 4466,
									"name": "PUSH",
									"source": 13,
									"value": "1E"
								},
								{
									"begin": 4444,
									"end": 4462,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 4444,
									"end": 4462,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4444,
									"end": 4462,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4437,
									"end": 4467,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4503,
									"end": 4535,
									"name": "PUSH",
									"source": 13,
									"value": "45786365656473206D6178207472616E73616374696F6E20616D6F756E740000"
								},
								{
									"begin": 4483,
									"end": 4501,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 4483,
									"end": 4501,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4483,
									"end": 4501,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4476,
									"end": 4536,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4553,
									"end": 4571,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 4553,
									"end": 4571,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2627,
									"end": 2700,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 4223,
									"end": 4577,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2627,
									"end": 2700,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 2627,
									"end": 2700,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2749,
									"end": 2762,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "C"
								},
								{
									"begin": 2749,
									"end": 2762,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2739,
									"end": 2745,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2723,
									"end": 2736,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 2733,
									"end": 2735,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3069,
									"end": 3076,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 3113,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3004,
									"end": 3120,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2723,
									"end": 2736,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 2723,
									"end": 2736,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2723,
									"end": 2745,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 2723,
									"end": 2745,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2723,
									"end": 2745,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2723,
									"end": 2745,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 2723,
									"end": 2745,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2723,
									"end": 2745,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 2723,
									"end": 2745,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2723,
									"end": 2762,
									"modifierDepth": 1,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2723,
									"end": 2762,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2715,
									"end": 2790,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 2715,
									"end": 2790,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2715,
									"end": 2790,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2715,
									"end": 2790,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2715,
									"end": 2790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2715,
									"end": 2790,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4914,
									"end": 4916,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2715,
									"end": 2790,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2715,
									"end": 2790,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2715,
									"end": 2790,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4896,
									"end": 4917,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4953,
									"end": 4955,
									"name": "PUSH",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 4933,
									"end": 4951,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 4933,
									"end": 4951,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4933,
									"end": 4951,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4926,
									"end": 4956,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4992,
									"end": 5017,
									"name": "PUSH",
									"source": 13,
									"value": "45786365656473206D61782077616C6C65742073697A65000000000000000000"
								},
								{
									"begin": 4972,
									"end": 4990,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 4972,
									"end": 4990,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4972,
									"end": 4990,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4965,
									"end": 5018,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2715,
									"end": 2790,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 4712,
									"end": 5059,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2715,
									"end": 2790,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 2715,
									"end": 2790,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2819,
									"end": 2842,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2871,
									"end": 2874,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 2855,
									"end": 2867,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 2855,
									"end": 2867,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2846,
									"end": 2852,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2846,
									"end": 2867,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 2846,
									"end": 2867,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2846,
									"end": 2867,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2846,
									"end": 2867,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2846,
									"end": 2867,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2846,
									"end": 2867,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 2846,
									"end": 2867,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2845,
									"end": 2874,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2845,
									"end": 2874,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2845,
									"end": 2874,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2845,
									"end": 2874,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 2845,
									"end": 2874,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2845,
									"end": 2874,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2845,
									"end": 2874,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2819,
									"end": 2874,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2819,
									"end": 2874,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2889,
									"end": 2912,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2941,
									"end": 2944,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 2925,
									"end": 2937,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 2925,
									"end": 2937,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2916,
									"end": 2922,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2916,
									"end": 2937,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2916,
									"end": 2937,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2916,
									"end": 2937,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2916,
									"end": 2937,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2916,
									"end": 2937,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2916,
									"end": 2937,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2916,
									"end": 2937,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2915,
									"end": 2944,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2915,
									"end": 2944,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2915,
									"end": 2944,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2915,
									"end": 2944,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 2915,
									"end": 2944,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2915,
									"end": 2944,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2915,
									"end": 2944,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2889,
									"end": 2944,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2959,
									"end": 2975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2978,
									"end": 3011,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2889,
									"end": 2944,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2978,
									"end": 2993,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2978,
									"end": 3011,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 2978,
									"end": 3011,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2978,
									"end": 3011,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2978,
									"end": 3011,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2959,
									"end": 3011,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3040,
									"end": 3302,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 3040,
									"end": 3302,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3097,
									"end": 3112,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 3097,
									"end": 3112,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3077,
									"end": 3130,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 3077,
									"end": 3130,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3091,
									"end": 3095,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3091,
									"end": 3095,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3097,
									"end": 3112,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3114,
									"end": 3129,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3077,
									"end": 3090,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 3077,
									"end": 3130,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3077,
									"end": 3130,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 3077,
									"end": 3130,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3149,
									"end": 3200,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 3163,
									"end": 3167,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3177,
									"end": 3181,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 3184,
									"end": 3199,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3149,
									"end": 3162,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 3149,
									"end": 3200,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3149,
									"end": 3200,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 3149,
									"end": 3200,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3219,
									"end": 3261,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 3233,
									"end": 3237,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3239,
									"end": 3241,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3243,
									"end": 3260,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 3252,
									"end": 3260,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3243,
									"end": 3249,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3243,
									"end": 3260,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 3243,
									"end": 3260,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3243,
									"end": 3260,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 3243,
									"end": 3260,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3219,
									"end": 3232,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 3219,
									"end": 3261,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3219,
									"end": 3261,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 3219,
									"end": 3261,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3280,
									"end": 3287,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3280,
									"end": 3287,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3280,
									"end": 3287,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2134,
									"end": 3372,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2134,
									"end": 3372,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2134,
									"end": 3372,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2134,
									"end": 3372,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3040,
									"end": 3302,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 3040,
									"end": 3302,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2612,
									"end": 3313,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2612,
									"end": 3313,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2612,
									"end": 3313,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2556,
									"end": 3313,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 2556,
									"end": 3313,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3333,
									"end": 3364,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 3347,
									"end": 3351,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3353,
									"end": 3355,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3357,
									"end": 3363,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3333,
									"end": 3346,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 3333,
									"end": 3364,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1767,
									"end": 1873,
									"name": "tag",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 1767,
									"end": 1873,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1836,
									"end": 1845,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "82"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5572,
									"end": 5574,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5554,
									"end": 5575,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5611,
									"end": 5613,
									"name": "PUSH",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 5591,
									"end": 5609,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 5591,
									"end": 5609,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5591,
									"end": 5609,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5584,
									"end": 5614,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "14185D5CD8589B194E881C185D5CD959"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "82"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5630,
									"end": 5648,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 5630,
									"end": 5648,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5630,
									"end": 5648,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5623,
									"end": 5669,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5686,
									"end": 5704,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 5686,
									"end": 5704,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 5370,
									"end": 5710,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "tag",
									"source": 3,
									"value": "82"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1767,
									"end": 1873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "86"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "87"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 5,
									"value": "87"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 5,
									"value": "86"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "89"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5935,
									"end": 5967,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5935,
									"end": 5967,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5917,
									"end": 5968,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5984,
									"end": 6002,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5977,
									"end": 6011,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5977,
									"end": 6011,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5977,
									"end": 6011,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6027,
									"end": 6045,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 6027,
									"end": 6045,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6027,
									"end": 6045,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6020,
									"end": 6054,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6020,
									"end": 6054,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6020,
									"end": 6054,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5890,
									"end": 5908,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 5890,
									"end": 5908,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 5715,
									"end": 6060,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 5,
									"value": "89"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "92"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "93"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 5,
									"value": "92"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 5,
									"value": "93"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 5,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "94"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6211,
									"end": 6236,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6211,
									"end": 6236,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6199,
									"end": 6201,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6184,
									"end": 6202,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6184,
									"end": 6202,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6065,
									"end": 6242,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 5,
									"value": "94"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 309,
									"end": 436,
									"name": "tag",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 309,
									"end": 436,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 370,
									"end": 380,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 365,
									"end": 368,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 361,
									"end": 381,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 358,
									"end": 359,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 382,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 401,
									"end": 405,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 398,
									"end": 399,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 391,
									"end": 406,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 425,
									"end": 429,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 423,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 430,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 441,
									"end": 821,
									"name": "tag",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 441,
									"end": 821,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 520,
									"end": 521,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 563,
									"end": 575,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 584,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 638,
									"end": 642,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 630,
									"end": 636,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 626,
									"end": 643,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 616,
									"end": 643,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 616,
									"end": 643,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 584,
									"end": 645,
									"name": "tag",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 691,
									"end": 693,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 689,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 694,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 660,
									"end": 678,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 657,
									"end": 695,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 654,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 737,
									"end": 747,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 732,
									"end": 735,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 728,
									"end": 748,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 772,
									"end": 776,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 762,
									"end": 777,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 800,
									"end": 804,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 790,
									"end": 805,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 654,
									"end": 815,
									"name": "tag",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 654,
									"end": 815,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 441,
									"end": 821,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 441,
									"end": 821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1054,
									"end": 1056,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1049,
									"end": 1052,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1046,
									"end": 1057,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1090,
									"end": 1095,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1087,
									"end": 1088,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1096,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1131,
									"end": 1132,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1121,
									"end": 1139,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 1204,
									"end": 1206,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1192,
									"end": 1202,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1188,
									"end": 1207,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 1181,
									"end": 1208,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 1175,
									"end": 1179,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1171,
									"end": 1209,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1240,
									"end": 1244,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1228,
									"end": 1238,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1225,
									"end": 1245,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "tag",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1318,
									"end": 1320,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1313,
									"end": 1316,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1309,
									"end": 1321,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 1302,
									"end": 1322,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1300,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1292,
									"end": 1323,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1391,
									"end": 1393,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1384,
									"end": 1389,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1381,
									"end": 1394,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1417,
									"end": 1418,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 952,
									"end": 1470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1646,
									"end": 2945,
									"name": "tag",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 1646,
									"end": 2945,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 1821,
									"end": 1839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "tag",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 1940,
									"end": 1946,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 1932,
									"end": 1936,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 1900,
									"end": 1938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "tag",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1894,
									"end": 1898,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 1850,
									"end": 1947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2027,
									"end": 2029,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2016,
									"end": 2030,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2016,
									"end": 2030,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2044,
									"end": 2045,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2732,
									"end": 2733,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2749,
									"end": 2755,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2795,
									"end": 2821,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "tag",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1595,
									"end": 1619,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 1591,
									"end": 1620,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 1581,
									"end": 1621,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1627,
									"end": 1628,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1578,
									"end": 1635,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 2848,
									"end": 2929,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2848,
									"end": 2929,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2009,
									"end": 2939,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 2009,
									"end": 2939,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "tag",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 899,
									"end": 900,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 892,
									"end": 906,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 936,
									"end": 940,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 923,
									"end": 941,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "tag",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2207,
									"end": 2214,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2204,
									"end": 2205,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2201,
									"end": 2215,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2268,
									"end": 2310,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2268,
									"end": 2310,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2396,
									"end": 2400,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 2349,
									"end": 2350,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2223,
									"end": 2235,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "tag",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2197,
									"end": 2200,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2441,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2431,
									"end": 2450,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2498,
									"end": 2524,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2587,
									"end": 2588,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2599,
									"end": 2602,
									"name": "PUSH",
									"source": 13,
									"value": "F8"
								},
								{
									"begin": 2579,
									"end": 2603,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2575,
									"end": 2612,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 2571,
									"end": 2613,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2556,
									"end": 2614,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2541,
									"end": 2615,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2541,
									"end": 2615,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "tag",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2675,
									"end": 2676,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2655,
									"end": 2677,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2642,
									"end": 2678,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2642,
									"end": 2678,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1646,
									"end": 2945,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3310,
									"end": 3437,
									"name": "tag",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 3310,
									"end": 3437,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3371,
									"end": 3381,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 3366,
									"end": 3369,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 3362,
									"end": 3382,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3360,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3352,
									"end": 3383,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3402,
									"end": 3406,
									"name": "PUSH",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 3399,
									"end": 3400,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 3392,
									"end": 3407,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3426,
									"end": 3430,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3423,
									"end": 3424,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3431,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 3442,
									"end": 3659,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 3442,
									"end": 3659,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3482,
									"end": 3483,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3508,
									"end": 3509,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3498,
									"end": 3630,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 3498,
									"end": 3630,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3552,
									"end": 3562,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 3547,
									"end": 3550,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 3543,
									"end": 3563,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3540,
									"end": 3541,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3533,
									"end": 3564,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3587,
									"end": 3591,
									"name": "PUSH",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 3584,
									"end": 3585,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 3577,
									"end": 3592,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3615,
									"end": 3619,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3612,
									"end": 3613,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3605,
									"end": 3620,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 3498,
									"end": 3630,
									"name": "tag",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 3498,
									"end": 3630,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3644,
									"end": 3653,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 3644,
									"end": 3653,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3442,
									"end": 3659,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4582,
									"end": 4707,
									"name": "tag",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 4582,
									"end": 4707,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4647,
									"end": 4656,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4647,
									"end": 4656,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4647,
									"end": 4656,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4668,
									"end": 4678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4668,
									"end": 4678,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4668,
									"end": 4678,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4665,
									"end": 4701,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4665,
									"end": 4701,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 4665,
									"end": 4701,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4681,
									"end": 4699,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 4681,
									"end": 4699,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 4681,
									"end": 4699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5064,
									"end": 5232,
									"name": "tag",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 5064,
									"end": 5232,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5137,
									"end": 5146,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5137,
									"end": 5146,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5137,
									"end": 5146,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 5168,
									"end": 5177,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5168,
									"end": 5177,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5185,
									"end": 5200,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5185,
									"end": 5200,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5185,
									"end": 5200,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 5179,
									"end": 5201,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5179,
									"end": 5201,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 5165,
									"end": 5202,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 5155,
									"end": 5226,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 5155,
									"end": 5226,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5206,
									"end": 5224,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 5206,
									"end": 5224,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 5206,
									"end": 5224,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5237,
									"end": 5365,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 5237,
									"end": 5365,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5304,
									"end": 5313,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5304,
									"end": 5313,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5304,
									"end": 5313,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 5325,
									"end": 5336,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5325,
									"end": 5336,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5325,
									"end": 5336,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5322,
									"end": 5359,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5322,
									"end": 5359,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 5322,
									"end": 5359,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5339,
									"end": 5357,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 5339,
									"end": 5357,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 5339,
									"end": 5357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6065,
									"end": 6242,
									"name": "tag",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 6065,
									"end": 6242,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 377,
									"end": 5311,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 377,
									"end": 5311,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 377,
									"end": 5311,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 377,
									"end": 5311,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 5311,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 377,
									"end": 5311,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 5311,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b1e0272f98e6d173bcb9e6c74035d9ac1fbf042f9fb1d585f10d703661b07e9e64736f6c634300081c0033",
									".code": [
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "6B67C4DF"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "C8C8EBE4"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "D547741F"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "DD62ED3E"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "FE575A87"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "98118CB4"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "9D913EF5"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "A217FDDF"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "79CC6790"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "79CC6790"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "8456CB59"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "8F3FA860"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "91D14854"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "6B67C4DF"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "75B238FC"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "75F0A874"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "3F4BA83A"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "3F4BA83A"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "42966C68"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "5342ACB4"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "5C975ABB"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "5D098B38"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "30B94CD5"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "313CE567"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "36568ABE"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "153B0D1E"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "153B0D1E"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "18160DDD"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "248A9CA3"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "B78F9C0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 5311,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 5107,
											"end": 5308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 5107,
											"end": 5308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3698,
											"end": 4021,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 3698,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3698,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 3698,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3698,
											"end": 4021,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3698,
											"end": 4021,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3698,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 3698,
											"end": 4021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3698,
											"end": 4021,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3698,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3698,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 3698,
											"end": 4021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3698,
											"end": 4021,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 3698,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3698,
											"end": 4021,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 4481,
											"end": 4677,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 4481,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4481,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 4481,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4481,
											"end": 4677,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4481,
											"end": 4677,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4481,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 4481,
											"end": 4677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4481,
											"end": 4677,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4481,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4481,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 4481,
											"end": 4677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2240,
											"end": 2242,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2106,
											"end": 2283,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4865,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 4722,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4722,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 4722,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 4722,
											"end": 4865,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4722,
											"end": 4865,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4722,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 4722,
											"end": 4865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4722,
											"end": 4865,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 4722,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4722,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 4722,
											"end": 4865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 3527,
											"end": 3563,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3527,
											"end": 3563,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3517,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3500,
											"end": 3518,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 3385,
											"end": 3569,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4991,
											"end": 5069,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 4991,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4991,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 4991,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 4991,
											"end": 5069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 934,
											"end": 983,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 934,
											"end": 983,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 934,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 934,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 934,
											"end": 983,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 934,
											"end": 983,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 934,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 934,
											"end": 983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 934,
											"end": 983,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 934,
											"end": 983,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 934,
											"end": 983,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 934,
											"end": 983,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 983,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 934,
											"end": 983,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 934,
											"end": 983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 934,
											"end": 983,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 934,
											"end": 983,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 934,
											"end": 983,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 934,
											"end": 983,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 934,
											"end": 983,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 934,
											"end": 983,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 934,
											"end": 983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 934,
											"end": 983,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3408,
											"end": 3686,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 3408,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3408,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 3408,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 3408,
											"end": 3686,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3408,
											"end": 3686,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 3408,
											"end": 3686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3408,
											"end": 3686,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 3408,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3408,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 3408,
											"end": 3686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 680,
											"end": 711,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 680,
											"end": 711,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 680,
											"end": 711,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 468,
											"end": 528,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 468,
											"end": 528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 468,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 468,
											"end": 528,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 468,
											"end": 528,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 768,
											"end": 798,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 768,
											"end": 798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 768,
											"end": 798,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 768,
											"end": 798,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 768,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 768,
											"end": 798,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 768,
											"end": 798,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 768,
											"end": 798,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 768,
											"end": 798,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 768,
											"end": 798,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 768,
											"end": 798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 768,
											"end": 798,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 768,
											"end": 798,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4160,
											"end": 4192,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4160,
											"end": 4192,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4160,
											"end": 4192,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4142,
											"end": 4193,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4142,
											"end": 4193,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4130,
											"end": 4132,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 768,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 3996,
											"end": 4199,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 4979,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 4905,
											"end": 4979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4905,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 4905,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 4905,
											"end": 4979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 876,
											"end": 904,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 876,
											"end": 904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 876,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 876,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 876,
											"end": 904,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 876,
											"end": 904,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 876,
											"end": 904,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 724,
											"end": 755,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 724,
											"end": 755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 724,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 724,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 724,
											"end": 755,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 724,
											"end": 755,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 724,
											"end": 755,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4033,
											"end": 4440,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 4033,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4033,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 4033,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 4033,
											"end": 4440,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4033,
											"end": 4440,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4033,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 4033,
											"end": 4440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4033,
											"end": 4440,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 4033,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4033,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 4033,
											"end": 4440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 834,
											"end": 869,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 834,
											"end": 869,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 834,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 834,
											"end": 869,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 834,
											"end": 869,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 834,
											"end": 869,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 834,
											"end": 869,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 990,
											"end": 1035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 990,
											"end": 1035,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5235,
											"end": 5239,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 5288,
											"end": 5299,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5264,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 5264,
											"end": 5300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5264,
											"end": 5300,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 5264,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5257,
											"end": 5300,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5308,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5107,
											"end": 5308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3698,
											"end": 4021,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 3698,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3843,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 3810,
											"end": 3839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 3826,
											"end": 3839,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3810,
											"end": 3823,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3810,
											"end": 3839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 3810,
											"end": 3839,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3810,
											"end": 3839,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 3810,
											"end": 3839,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3810,
											"end": 3845,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3810,
											"end": 3845,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 3802,
											"end": 3878,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3802,
											"end": 3878,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3802,
											"end": 3878,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3878,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5318,
											"end": 5320,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 3878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3802,
											"end": 3878,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3878,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5300,
											"end": 5321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5357,
											"end": 5359,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 5337,
											"end": 5355,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5337,
											"end": 5355,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5337,
											"end": 5355,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5330,
											"end": 5360,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5396,
											"end": 5426,
											"name": "PUSH",
											"source": 13,
											"value": "546F74616C20666565732063616E6E6F74206578636565642031302500000000"
										},
										{
											"begin": 5376,
											"end": 5394,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5376,
											"end": 5394,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5376,
											"end": 5394,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5369,
											"end": 5427,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5444,
											"end": 5462,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5444,
											"end": 5462,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 3878,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 3802,
											"end": 3878,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3802,
											"end": 3878,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3878,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3878,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3878,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3878,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3878,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 3802,
											"end": 3878,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3928,
											"end": 3940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 3928,
											"end": 3956,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3928,
											"end": 3956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3928,
											"end": 3956,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3972,
											"end": 4013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3972,
											"end": 4013,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3972,
											"end": 4013,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5647,
											"end": 5672,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5647,
											"end": 5672,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5647,
											"end": 5672,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5703,
											"end": 5705,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5688,
											"end": 5706,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5688,
											"end": 5706,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5681,
											"end": 5715,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5681,
											"end": 5715,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5681,
											"end": 5715,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3972,
											"end": 4013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5C6323BF1C2D7AAEA2C091A4751C1C87AF7F2864650C336507A77D0557AF37A1"
										},
										{
											"begin": 3972,
											"end": 4013,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5620,
											"end": 5638,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3972,
											"end": 4013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 3972,
											"end": 4013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3972,
											"end": 4013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3972,
											"end": 4013,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3972,
											"end": 4013,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3972,
											"end": 4013,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3972,
											"end": 4013,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3972,
											"end": 4013,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3972,
											"end": 4013,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 3698,
											"end": 4021,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3698,
											"end": 4021,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3698,
											"end": 4021,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3698,
											"end": 4021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4481,
											"end": 4677,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 4481,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4579,
											"end": 4601,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4601,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4601,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4601,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4601,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 4579,
											"end": 4601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4579,
											"end": 4601,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4601,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4601,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4601,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4579,
											"end": 4601,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4601,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4601,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4601,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4615,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4615,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4579,
											"end": 4615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4615,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4615,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4615,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4615,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4615,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4615,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4615,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4669,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4669,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 445,
											"end": 486,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4631,
											"end": 4669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6A12B3DF6CBA4203BD7FD06B816789F87DE8C594299AED5717AE070FAC781BAC"
										},
										{
											"begin": 4631,
											"end": 4669,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4631,
											"end": 4669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4669,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4669,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4669,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4669,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4669,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4669,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 4481,
											"end": 4677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4481,
											"end": 4677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4481,
											"end": 4677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4481,
											"end": 4677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4865,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 4722,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4820,
											"end": 4846,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4846,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4846,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4846,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4820,
											"end": 4846,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4846,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4846,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 4820,
											"end": 4846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4820,
											"end": 4846,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4846,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4820,
											"end": 4846,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4846,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4857,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4857,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4820,
											"end": 4857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4857,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4857,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4857,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4857,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4857,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4857,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4857,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4857,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4857,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4722,
											"end": 4865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4991,
											"end": 5069,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 4991,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5051,
											"end": 5061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 5051,
											"end": 5059,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 5051,
											"end": 5061,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5051,
											"end": 5061,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 5051,
											"end": 5061,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4991,
											"end": 5069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4991,
											"end": 5069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3686,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 3408,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3511,
											"end": 3541,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3511,
											"end": 3541,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 3503,
											"end": 3577,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3503,
											"end": 3577,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3503,
											"end": 3577,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3577,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5928,
											"end": 5930,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3503,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3503,
											"end": 3577,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3503,
											"end": 3577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5910,
											"end": 5931,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5967,
											"end": 5969,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5947,
											"end": 5965,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5947,
											"end": 5965,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5947,
											"end": 5965,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5940,
											"end": 5970,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6006,
											"end": 6039,
											"name": "PUSH",
											"source": 13,
											"value": "4D61726B6574696E672077616C6C65742063616E6E6F74206265207A65726F00"
										},
										{
											"begin": 5986,
											"end": 6004,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5986,
											"end": 6004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5986,
											"end": 6004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5979,
											"end": 6040,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6057,
											"end": 6075,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 6057,
											"end": 6075,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 5726,
											"end": 6081,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3577,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 3503,
											"end": 3577,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3588,
											"end": 3622,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3622,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3622,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3622,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3638,
											"end": 3678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3678,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4193,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4142,
											"end": 4193,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4142,
											"end": 4193,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3638,
											"end": 3678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "BF86FEEDEE5B30C30A8243BD21DEEBB704D141478D39B1BE04FE5EE739F214E7"
										},
										{
											"begin": 3638,
											"end": 3678,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4130,
											"end": 4132,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3638,
											"end": 3678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3678,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3638,
											"end": 3678,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3638,
											"end": 3678,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3638,
											"end": 3678,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3638,
											"end": 3678,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3638,
											"end": 3678,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 3408,
											"end": 3686,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3408,
											"end": 3686,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3408,
											"end": 3686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 4979,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 4905,
											"end": 4979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 4971,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 4963,
											"end": 4969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 4963,
											"end": 4971,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4440,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 4033,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4166,
											"end": 4185,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 4181,
											"end": 4185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3E8"
										},
										{
											"begin": 599,
											"end": 621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 4166,
											"end": 4185,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 4166,
											"end": 4185,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4166,
											"end": 4185,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 4166,
											"end": 4185,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4150,
											"end": 4162,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4150,
											"end": 4185,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4150,
											"end": 4185,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 4142,
											"end": 4204,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4142,
											"end": 4204,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4142,
											"end": 4204,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4204,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6510,
											"end": 6512,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4142,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4142,
											"end": 4204,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4204,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6492,
											"end": 6513,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6549,
											"end": 6551,
											"name": "PUSH",
											"source": 13,
											"value": "E"
										},
										{
											"begin": 6529,
											"end": 6547,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6529,
											"end": 6547,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6529,
											"end": 6547,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6522,
											"end": 6552,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D617820545820746F6F206C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6568,
											"end": 6586,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6568,
											"end": 6586,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6568,
											"end": 6586,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6561,
											"end": 6605,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6622,
											"end": 6640,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 6622,
											"end": 6640,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4142,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 6308,
											"end": 6646,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4142,
											"end": 4204,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 4142,
											"end": 4204,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4241,
											"end": 4260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 4256,
											"end": 4260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3E8"
										},
										{
											"begin": 599,
											"end": 621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 4241,
											"end": 4260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 4241,
											"end": 4260,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4241,
											"end": 4260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 4241,
											"end": 4260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4223,
											"end": 4237,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4223,
											"end": 4260,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4223,
											"end": 4260,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4215,
											"end": 4283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 4215,
											"end": 4283,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4215,
											"end": 4283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4283,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4215,
											"end": 4283,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4215,
											"end": 4283,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6853,
											"end": 6855,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4215,
											"end": 4283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4215,
											"end": 4283,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4215,
											"end": 4283,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6835,
											"end": 6856,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6892,
											"end": 6894,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6865,
											"end": 6895,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D61782077616C6C657420746F6F206C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6911,
											"end": 6929,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6911,
											"end": 6929,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6911,
											"end": 6929,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6904,
											"end": 6952,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6969,
											"end": 6987,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 6969,
											"end": 6987,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4215,
											"end": 4283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 6651,
											"end": 6993,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4215,
											"end": 4283,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 4215,
											"end": 4283,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4294,
											"end": 4314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 4294,
											"end": 4329,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4294,
											"end": 4329,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4294,
											"end": 4329,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4340,
											"end": 4353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 4340,
											"end": 4370,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4340,
											"end": 4370,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4340,
											"end": 4370,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4386,
											"end": 4432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4386,
											"end": 4432,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4386,
											"end": 4432,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5647,
											"end": 5672,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5647,
											"end": 5672,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5647,
											"end": 5672,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5703,
											"end": 5705,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5688,
											"end": 5706,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5688,
											"end": 5706,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5681,
											"end": 5715,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5681,
											"end": 5715,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5681,
											"end": 5715,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "B6CF947475D47632612A3265C7BC83F5CFED7429546220BFB088C3634F91C229"
										},
										{
											"begin": 4386,
											"end": 4432,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5620,
											"end": 5638,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 5473,
											"end": 5721,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 862,
											"end": 902,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7218,
											"end": 7250,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7218,
											"end": 7250,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7200,
											"end": 7251,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7260,
											"end": 7294,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7260,
											"end": 7294,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7260,
											"end": 7294,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7310,
											"end": 7328,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7310,
											"end": 7328,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7310,
											"end": 7328,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7337,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7337,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7337,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7173,
											"end": 7191,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7173,
											"end": 7191,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 6998,
											"end": 7343,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4193,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3996,
											"end": 4199,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4193,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3996,
											"end": 4199,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4160,
											"end": 4192,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4160,
											"end": 4192,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4160,
											"end": 4192,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4142,
											"end": 4193,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4142,
											"end": 4193,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4130,
											"end": 4132,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4193,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3996,
											"end": 4199,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4193,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3996,
											"end": 4199,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4193,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3996,
											"end": 4199,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2240,
											"end": 2242,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2106,
											"end": 2283,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7540,
											"end": 7572,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7540,
											"end": 7572,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7573,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7589,
											"end": 7607,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7589,
											"end": 7607,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7589,
											"end": 7607,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7582,
											"end": 7616,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7582,
											"end": 7616,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7582,
											"end": 7616,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7495,
											"end": 7513,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7495,
											"end": 7513,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 7348,
											"end": 7622,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2134,
											"end": 3372,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 2134,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2319,
											"end": 2337,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2319,
											"end": 2337,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2319,
											"end": 2337,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2319,
											"end": 2337,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2319,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 2319,
											"end": 2357,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2341,
											"end": 2357,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2341,
											"end": 2357,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2341,
											"end": 2357,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2319,
											"end": 2357,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 2319,
											"end": 2357,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2315,
											"end": 2438,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2315,
											"end": 2438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 2315,
											"end": 2438,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2374,
											"end": 2405,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 2388,
											"end": 2392,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2394,
											"end": 2396,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2398,
											"end": 2404,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2374,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 2374,
											"end": 2405,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2315,
											"end": 2438,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 2315,
											"end": 2438,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 2486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 2467,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2467,
											"end": 2486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2466,
											"end": 2486,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2466,
											"end": 2508,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2491,
											"end": 2508,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2491,
											"end": 2508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2491,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2508,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2491,
											"end": 2508,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2491,
											"end": 2508,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2491,
											"end": 2504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 2491,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2491,
											"end": 2508,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2491,
											"end": 2508,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2491,
											"end": 2508,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2491,
											"end": 2508,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2491,
											"end": 2508,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2491,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 2508,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 2466,
											"end": 2508,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2458,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 2458,
											"end": 2535,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2458,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7829,
											"end": 7831,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2458,
											"end": 2535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 7832,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7868,
											"end": 7870,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 7848,
											"end": 7866,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7848,
											"end": 7866,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7848,
											"end": 7866,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7841,
											"end": 7871,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1059191C995CDCC81A5CC8189B1858DADB1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7887,
											"end": 7905,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7887,
											"end": 7905,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7887,
											"end": 7905,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7880,
											"end": 7932,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7949,
											"end": 7967,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7949,
											"end": 7967,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2458,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 7627,
											"end": 7973,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2458,
											"end": 2535,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 2458,
											"end": 2535,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2584,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2584,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2584,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2584,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2584,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 2561,
											"end": 2584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2561,
											"end": 2584,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2584,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2584,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2584,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2584,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2561,
											"end": 2584,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2560,
											"end": 2584,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2560,
											"end": 2610,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2560,
											"end": 2610,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2560,
											"end": 2610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 2560,
											"end": 2610,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2610,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 2589,
											"end": 2610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2610,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2589,
											"end": 2610,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2610,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2560,
											"end": 2610,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 2560,
											"end": 2610,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2556,
											"end": 3313,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2556,
											"end": 3313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 2556,
											"end": 3313,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2645,
											"end": 2665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 2645,
											"end": 2665,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2641,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2665,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2665,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2627,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 2627,
											"end": 2700,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2627,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2627,
											"end": 2700,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2700,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2627,
											"end": 2700,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8180,
											"end": 8182,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2627,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2627,
											"end": 2700,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2627,
											"end": 2700,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8162,
											"end": 8183,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8219,
											"end": 8221,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 8199,
											"end": 8217,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8199,
											"end": 8217,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8199,
											"end": 8217,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8192,
											"end": 8222,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8258,
											"end": 8290,
											"name": "PUSH",
											"source": 13,
											"value": "45786365656473206D6178207472616E73616374696F6E20616D6F756E740000"
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8231,
											"end": 8291,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8308,
											"end": 8326,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8308,
											"end": 8326,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2627,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 7978,
											"end": 8332,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2627,
											"end": 2700,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 2627,
											"end": 2700,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2749,
											"end": 2762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 2749,
											"end": 2762,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2739,
											"end": 2745,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2723,
											"end": 2736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 2733,
											"end": 2735,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2736,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 2723,
											"end": 2736,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2723,
											"end": 2745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 2723,
											"end": 2745,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2723,
											"end": 2745,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2723,
											"end": 2745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 2723,
											"end": 2745,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2723,
											"end": 2745,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 2723,
											"end": 2745,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2723,
											"end": 2762,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2723,
											"end": 2762,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2715,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 2715,
											"end": 2790,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2715,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2715,
											"end": 2790,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2715,
											"end": 2790,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2715,
											"end": 2790,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8539,
											"end": 8541,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2715,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2715,
											"end": 2790,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2715,
											"end": 2790,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8521,
											"end": 8542,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8578,
											"end": 8580,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 8558,
											"end": 8576,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8558,
											"end": 8576,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8558,
											"end": 8576,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8551,
											"end": 8581,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8617,
											"end": 8642,
											"name": "PUSH",
											"source": 13,
											"value": "45786365656473206D61782077616C6C65742073697A65000000000000000000"
										},
										{
											"begin": 8597,
											"end": 8615,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8597,
											"end": 8615,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8590,
											"end": 8643,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8660,
											"end": 8678,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8660,
											"end": 8678,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2715,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 8337,
											"end": 8684,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2715,
											"end": 2790,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 2715,
											"end": 2790,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2871,
											"end": 2874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 2855,
											"end": 2867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 2855,
											"end": 2867,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2846,
											"end": 2852,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2846,
											"end": 2867,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 2846,
											"end": 2867,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2846,
											"end": 2867,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2846,
											"end": 2867,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 2846,
											"end": 2867,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2846,
											"end": 2867,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 2846,
											"end": 2867,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2845,
											"end": 2874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 2845,
											"end": 2874,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2845,
											"end": 2874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2845,
											"end": 2874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 2845,
											"end": 2874,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2845,
											"end": 2874,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 2845,
											"end": 2874,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2874,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2889,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 2925,
											"end": 2937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2925,
											"end": 2937,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2916,
											"end": 2922,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2916,
											"end": 2937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 2916,
											"end": 2937,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2916,
											"end": 2937,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2916,
											"end": 2937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 2916,
											"end": 2937,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2916,
											"end": 2937,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 2916,
											"end": 2937,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 2915,
											"end": 2944,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 2915,
											"end": 2944,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 2915,
											"end": 2944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2889,
											"end": 2944,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2959,
											"end": 2975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 2889,
											"end": 2944,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2993,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 2978,
											"end": 3011,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 3011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 2978,
											"end": 3011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2959,
											"end": 3011,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3044,
											"end": 3056,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3044,
											"end": 3056,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3040,
											"end": 3302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 3040,
											"end": 3302,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3097,
											"end": 3112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 3097,
											"end": 3112,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3077,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 3077,
											"end": 3130,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3091,
											"end": 3095,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3091,
											"end": 3095,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3097,
											"end": 3112,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3114,
											"end": 3129,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3077,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 3077,
											"end": 3130,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3077,
											"end": 3130,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 3077,
											"end": 3130,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3149,
											"end": 3200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 3163,
											"end": 3167,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3177,
											"end": 3181,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 3184,
											"end": 3199,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3149,
											"end": 3162,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 3149,
											"end": 3200,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3149,
											"end": 3200,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 3149,
											"end": 3200,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3219,
											"end": 3261,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 3233,
											"end": 3237,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3239,
											"end": 3241,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3243,
											"end": 3260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 3252,
											"end": 3260,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3243,
											"end": 3249,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3243,
											"end": 3260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 3243,
											"end": 3260,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3243,
											"end": 3260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 3243,
											"end": 3260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3219,
											"end": 3232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 3219,
											"end": 3261,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3219,
											"end": 3261,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 3219,
											"end": 3261,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3280,
											"end": 3287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3280,
											"end": 3287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3280,
											"end": 3287,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3040,
											"end": 3302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 3040,
											"end": 3302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2612,
											"end": 3313,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2612,
											"end": 3313,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2612,
											"end": 3313,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2556,
											"end": 3313,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 2556,
											"end": 3313,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3333,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 3347,
											"end": 3351,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3353,
											"end": 3355,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3357,
											"end": 3363,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3333,
											"end": 3346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 3333,
											"end": 3364,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9197,
											"end": 9199,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9179,
											"end": 9200,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9236,
											"end": 9238,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 9216,
											"end": 9234,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9216,
											"end": 9234,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9216,
											"end": 9234,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9209,
											"end": 9239,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9255,
											"end": 9273,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9255,
											"end": 9273,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9255,
											"end": 9273,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9248,
											"end": 9298,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9315,
											"end": 9333,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9315,
											"end": 9333,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 8995,
											"end": 9339,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9546,
											"end": 9548,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9528,
											"end": 9549,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9585,
											"end": 9587,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 9565,
											"end": 9583,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9565,
											"end": 9583,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9565,
											"end": 9583,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9558,
											"end": 9588,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9604,
											"end": 9622,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9604,
											"end": 9622,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9604,
											"end": 9622,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9597,
											"end": 9643,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 9344,
											"end": 9684,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7218,
											"end": 7250,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7218,
											"end": 7250,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7200,
											"end": 7251,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7260,
											"end": 7294,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7260,
											"end": 7294,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7260,
											"end": 7294,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7310,
											"end": 7328,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7310,
											"end": 7328,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7310,
											"end": 7328,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7337,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7337,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7337,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7173,
											"end": 7191,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7173,
											"end": 7191,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 6998,
											"end": 7343,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2240,
											"end": 2242,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2106,
											"end": 2283,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 199,
											"end": 270,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 497,
											"end": 915,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 497,
											"end": 915,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 646,
											"end": 648,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 644,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 628,
											"end": 649,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 609,
											"end": 613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 672,
											"end": 685,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 721,
											"end": 727,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 716,
											"end": 718,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 705,
											"end": 714,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 701,
											"end": 719,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 694,
											"end": 728,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 775,
											"end": 777,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 767,
											"end": 773,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 763,
											"end": 778,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 758,
											"end": 760,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 756,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 743,
											"end": 761,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 737,
											"end": 787,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 836,
											"end": 837,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 833,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 828,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 811,
											"end": 820,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 807,
											"end": 829,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 803,
											"end": 834,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 796,
											"end": 838,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 906,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 895,
											"end": 902,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 890,
											"end": 892,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 878,
											"end": 893,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 874,
											"end": 903,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 863,
											"end": 872,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 859,
											"end": 904,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 855,
											"end": 909,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 847,
											"end": 909,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 847,
											"end": 909,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 847,
											"end": 909,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 497,
											"end": 915,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 497,
											"end": 915,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 497,
											"end": 915,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 497,
											"end": 915,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 497,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 920,
											"end": 1093,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 920,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 988,
											"end": 1008,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 988,
											"end": 1008,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1037,
											"end": 1068,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1037,
											"end": 1068,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1027,
											"end": 1069,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 1017,
											"end": 1087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1083,
											"end": 1084,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1081,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1085,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1087,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 1017,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 920,
											"end": 1093,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 920,
											"end": 1093,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 920,
											"end": 1093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 920,
											"end": 1093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1398,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1098,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1180,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 1229,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1224,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1206,
											"end": 1213,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1202,
											"end": 1225,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1198,
											"end": 1230,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1243,
											"end": 1244,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1241,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1245,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 1285,
											"end": 1294,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 1266,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1295,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 1266,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1295,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1366,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1336,
											"end": 1368,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1336,
											"end": 1368,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1749,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 1403,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1479,
											"end": 1485,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1534,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1520,
											"end": 1529,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1518,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1507,
											"end": 1530,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1535,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1500,
											"end": 1552,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1500,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 1500,
											"end": 1552,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1548,
											"end": 1549,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1546,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1500,
											"end": 1552,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 1500,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1593,
											"end": 1616,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1593,
											"end": 1616,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1593,
											"end": 1616,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1713,
											"end": 1715,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1717,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1717,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1754,
											"end": 2101,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1754,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1819,
											"end": 1825,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1882,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1868,
											"end": 1877,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1859,
											"end": 1866,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1851,
											"end": 1883,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1848,
											"end": 1900,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1848,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 1848,
											"end": 1900,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1894,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1886,
											"end": 1898,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1848,
											"end": 1900,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 1848,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 1919,
											"end": 1948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1909,
											"end": 1948,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1909,
											"end": 1948,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2000,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 1996,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1983,
											"end": 2001,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1970,
											"end": 2002,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2045,
											"end": 2050,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2038,
											"end": 2051,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2031,
											"end": 2052,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2053,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 2011,
											"end": 2071,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2067,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2069,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2071,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 2011,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2090,
											"end": 2095,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2080,
											"end": 2095,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2080,
											"end": 2095,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2080,
											"end": 2095,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1754,
											"end": 2101,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1754,
											"end": 2101,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1754,
											"end": 2101,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1754,
											"end": 2101,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1754,
											"end": 2101,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1754,
											"end": 2101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2288,
											"end": 2662,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 2288,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2365,
											"end": 2371,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2381,
											"end": 2387,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2436,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2422,
											"end": 2431,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2413,
											"end": 2420,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2432,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2405,
											"end": 2437,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2402,
											"end": 2454,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2402,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 2402,
											"end": 2454,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2450,
											"end": 2451,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2448,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2402,
											"end": 2454,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 2402,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2473,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 2492,
											"end": 2501,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2473,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 2473,
											"end": 2502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2473,
											"end": 2502,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 2473,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2463,
											"end": 2502,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2463,
											"end": 2502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 2555,
											"end": 2557,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2544,
											"end": 2553,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2540,
											"end": 2558,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 2521,
											"end": 2559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2559,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 2521,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2288,
											"end": 2662,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2288,
											"end": 2662,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2511,
											"end": 2559,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2511,
											"end": 2559,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2628,
											"end": 2630,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2613,
											"end": 2631,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2613,
											"end": 2631,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2613,
											"end": 2631,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2613,
											"end": 2631,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2600,
											"end": 2632,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2600,
											"end": 2632,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2288,
											"end": 2662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2667,
											"end": 2893,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 2667,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2758,
											"end": 2765,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2777,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2750,
											"end": 2782,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2747,
											"end": 2799,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2747,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 2747,
											"end": 2799,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2795,
											"end": 2796,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2797,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2747,
											"end": 2799,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 2747,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2840,
											"end": 2863,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2863,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2667,
											"end": 2893,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2667,
											"end": 2893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3080,
											"end": 3380,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 3080,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3148,
											"end": 3154,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3197,
											"end": 3206,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3195,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3184,
											"end": 3207,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3180,
											"end": 3212,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3177,
											"end": 3229,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3177,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 3177,
											"end": 3229,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3225,
											"end": 3226,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3223,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3215,
											"end": 3227,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3177,
											"end": 3229,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 3177,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3336,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 3370,
											"end": 3372,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3336,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 3336,
											"end": 3374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3336,
											"end": 3374,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 3336,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3326,
											"end": 3374,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3326,
											"end": 3374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3080,
											"end": 3380,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3080,
											"end": 3380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3080,
											"end": 3380,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3080,
											"end": 3380,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3080,
											"end": 3380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3080,
											"end": 3380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3805,
											"end": 3991,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 3805,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3917,
											"end": 3919,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3905,
											"end": 3914,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3896,
											"end": 3903,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3915,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3920,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3885,
											"end": 3937,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3885,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 3885,
											"end": 3937,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3933,
											"end": 3934,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3931,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3885,
											"end": 3937,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 3885,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3956,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3956,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 3956,
											"end": 3985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4464,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 4204,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4272,
											"end": 4278,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4286,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4333,
											"end": 4335,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4321,
											"end": 4330,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4319,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4331,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4304,
											"end": 4336,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4301,
											"end": 4353,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4301,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 4301,
											"end": 4353,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4349,
											"end": 4350,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4347,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4351,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4301,
											"end": 4353,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 4301,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4372,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 4391,
											"end": 4400,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4372,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 4372,
											"end": 4401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4372,
											"end": 4401,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 4372,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4401,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4420,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 4454,
											"end": 4456,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4443,
											"end": 4452,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4439,
											"end": 4457,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4420,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 4420,
											"end": 4458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4849,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 4469,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4548,
											"end": 4549,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4544,
											"end": 4556,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4544,
											"end": 4556,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4544,
											"end": 4556,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 4544,
											"end": 4556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 4603,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 4603,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 4603,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4666,
											"end": 4670,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 4658,
											"end": 4664,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4654,
											"end": 4671,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4644,
											"end": 4671,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4644,
											"end": 4671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4719,
											"end": 4721,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4711,
											"end": 4717,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4708,
											"end": 4722,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4688,
											"end": 4706,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4685,
											"end": 4723,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4682,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 4682,
											"end": 4843,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4765,
											"end": 4775,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 4760,
											"end": 4763,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4756,
											"end": 4776,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4753,
											"end": 4754,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4777,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4800,
											"end": 4804,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 4797,
											"end": 4798,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4790,
											"end": 4805,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4828,
											"end": 4832,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4825,
											"end": 4826,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4833,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4682,
											"end": 4843,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 4682,
											"end": 4843,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4682,
											"end": 4843,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4849,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4849,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4849,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4854,
											"end": 4981,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 4854,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4915,
											"end": 4925,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 4910,
											"end": 4913,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4906,
											"end": 4926,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4903,
											"end": 4904,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4896,
											"end": 4927,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4946,
											"end": 4950,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 4943,
											"end": 4944,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4936,
											"end": 4951,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4970,
											"end": 4974,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4967,
											"end": 4968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4960,
											"end": 4975,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 5111,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 4986,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5051,
											"end": 5060,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5051,
											"end": 5060,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5051,
											"end": 5060,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5072,
											"end": 5082,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5072,
											"end": 5082,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5072,
											"end": 5082,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5069,
											"end": 5105,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5069,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 5069,
											"end": 5105,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5085,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 5085,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 5085,
											"end": 5103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6086,
											"end": 6303,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 6086,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6126,
											"end": 6127,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6152,
											"end": 6153,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6142,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 6142,
											"end": 6274,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6206,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 6191,
											"end": 6194,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 6187,
											"end": 6207,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6184,
											"end": 6185,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6208,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6231,
											"end": 6235,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 6228,
											"end": 6229,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6221,
											"end": 6236,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6259,
											"end": 6263,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6256,
											"end": 6257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6249,
											"end": 6264,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6142,
											"end": 6274,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 6142,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6086,
											"end": 6303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8689,
											"end": 8857,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 8689,
											"end": 8857,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8762,
											"end": 8771,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8762,
											"end": 8771,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8762,
											"end": 8771,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 8793,
											"end": 8802,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8793,
											"end": 8802,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8810,
											"end": 8825,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8810,
											"end": 8825,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8810,
											"end": 8825,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 8804,
											"end": 8826,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8804,
											"end": 8826,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 8790,
											"end": 8827,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 8780,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 8780,
											"end": 8851,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8831,
											"end": 8849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 8831,
											"end": 8849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 8831,
											"end": 8849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8862,
											"end": 8990,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 8862,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8929,
											"end": 8938,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8929,
											"end": 8938,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8929,
											"end": 8938,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8950,
											"end": 8961,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8950,
											"end": 8961,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8950,
											"end": 8961,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8947,
											"end": 8984,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8947,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 8947,
											"end": 8984,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8964,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 8964,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 8964,
											"end": 8982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										}
									],
									".data": {
										"CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8": "a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/LGG.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isBlacklisted(address)": "fe575a87",
							"isExcludedFromFee(address)": "5342acb4",
							"liquidityFee()": "98118cb4",
							"marketingFee()": "6b67c4df",
							"marketingWallet()": "75f0a874",
							"maxTransactionAmount()": "c8c8ebe4",
							"maxWalletSize()": "8f3fa860",
							"name()": "06fdde03",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setBlacklist(address,bool)": "153b0d1e",
							"setFeeExclusion(address,bool)": "30b94cd5",
							"setFees(uint256,uint256)": "0b78f9c0",
							"setMarketingWallet(address)": "5d098b38",
							"setMaxLimits(uint256,uint256)": "9d913ef5",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketingWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBlacklisted\",\"type\":\"bool\"}],\"name\":\"BlacklistUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marketingFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityFee\",\"type\":\"uint256\"}],\"name\":\"FeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"MarketingWalletUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTx\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxWallet\",\"type\":\"uint256\"}],\"name\":\"MaxLimitsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTransactionAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"blacklisted\",\"type\":\"bool\"}],\"name\":\"setBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"setFeeExclusion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityFee\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketingWallet\",\"type\":\"address\"}],\"name\":\"setMarketingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxWalletSize\",\"type\":\"uint256\"}],\"name\":\"setMaxLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LGG.sol\":\"LGGToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/LGG.sol\":{\"keccak256\":\"0x89dbf52fac7f4c0053611a48b9378edba99039adc50b4a2dbbd3bb9d7208190d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c0f6fcf58f1b7e4eaae638844f2040d87ebba49b967e5db762d706d3397bca1\",\"dweb:/ipfs/QmSKyNtz9e5Zgg3WW4ZtNdfvFv11iVHVyUBQutEevhX3wQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 711,
								"contract": "contracts/LGG.sol:LGGToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 717,
								"contract": "contracts/LGG.sol:LGGToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 719,
								"contract": "contracts/LGG.sol:LGGToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 721,
								"contract": "contracts/LGG.sol:LGGToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 723,
								"contract": "contracts/LGG.sol:LGGToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "contracts/LGG.sol:LGGToken",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 533,
								"contract": "contracts/LGG.sol:LGGToken",
								"label": "_paused",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 634,
								"contract": "contracts/LGG.sol:LGGToken",
								"label": "_status",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1451,
								"contract": "contracts/LGG.sol:LGGToken",
								"label": "marketingFee",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1454,
								"contract": "contracts/LGG.sol:LGGToken",
								"label": "liquidityFee",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1456,
								"contract": "contracts/LGG.sol:LGGToken",
								"label": "marketingWallet",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 1458,
								"contract": "contracts/LGG.sol:LGGToken",
								"label": "maxTransactionAmount",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1460,
								"contract": "contracts/LGG.sol:LGGToken",
								"label": "maxWalletSize",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1464,
								"contract": "contracts/LGG.sol:LGGToken",
								"label": "isExcludedFromFee",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1468,
								"contract": "contracts/LGG.sol:LGGToken",
								"label": "isBlacklisted",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/LGG.sol:LGGToken",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/LGG.sol:LGGToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1383
						],
						"ERC165": [
							1407
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1384,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1383,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1408,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1407,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1383,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1407,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1407,
								1419,
								378,
								1383
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1406
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1406,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1365,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1365,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 516,
							"src": "280:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 516,
							"src": "2190:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 516,
							"src": "4430:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1383
						],
						"Pausable": [
							623
						]
					},
					"id": 624,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 518,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 624,
							"sourceUnit": 1384,
							"src": "130:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 520,
										"name": "Context",
										"nameLocations": [
											"632:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1383,
										"src": "632:7:3"
									},
									"id": 521,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:3"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 519,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 623,
							"linearizedBaseContracts": [
								623,
								1383
							],
							"name": "Pausable",
							"nameLocation": "620:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 526,
									"name": "Paused",
									"nameLocation": "730:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "737:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:3"
									},
									"src": "724:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 531,
									"name": "Unpaused",
									"nameLocation": "841:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "850:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:3"
									},
									"src": "835:32:3"
								},
								{
									"constant": false,
									"id": 533,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "873:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 532,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "986:32:3",
										"statements": [
											{
												"expression": {
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 537,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "996:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "996:15:3"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 542,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:3"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:3"
									},
									"scope": 623,
									"src": "972:46:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "1229:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 545,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "1239:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:3"
											},
											{
												"id": 548,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:3"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 550,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:3"
									},
									"src": "1204:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "1476:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 553,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "1486:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:3"
											},
											{
												"id": 556,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:3"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 558,
									"name": "whenPaused",
									"nameLocation": "1463:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:3"
									},
									"src": "1454:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1668:31:3",
										"statements": [
											{
												"expression": {
													"id": 564,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 533,
													"src": "1685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 563,
												"id": 565,
												"nodeType": "Return",
												"src": "1678:14:3"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:3"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1662:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:3"
									},
									"scope": 623,
									"src": "1615:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "1818:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 572,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "1837:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:3"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:3"
									},
									"scope": 623,
									"src": "1767:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "1993:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 584,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "2011:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:3"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:3"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:3"
									},
									"scope": 623,
									"src": "1945:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "2235:66:3",
										"statements": [
											{
												"expression": {
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 596,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "2245:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 601,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "2281:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 600,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2274:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "2269:25:3"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 594,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 593,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "2221:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:3"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:3"
									},
									"scope": 623,
									"src": "2186:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "2481:69:3",
										"statements": [
											{
												"expression": {
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 612,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "2491:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 617,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "2530:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 616,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "2521:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "EmitStatement",
												"src": "2516:27:3"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 610,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 609,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 558,
												"src": "2470:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:3"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:3"
									},
									"scope": 623,
									"src": "2433:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 624,
							"src": "602:1950:3",
							"usedErrors": [],
							"usedEvents": [
								526,
								531
							]
						}
					],
					"src": "105:2448:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							688
						]
					},
					"id": 689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 626,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 688,
							"linearizedBaseContracts": [
								688
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 629,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 688,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 627,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 628,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 632,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 688,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 630,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 631,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 634,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 688,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 633,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 637,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 638,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 642,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 688,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 645,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 648,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 649,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 653,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 657,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 658,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 663,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 664,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 688,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 671,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 672,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 688,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 682,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 683,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 681,
												"id": 685,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 688,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 689,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1383
						],
						"ERC20": [
							1203
						],
						"IERC20": [
							1281
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1353
						]
					},
					"id": 1204,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 690,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 692,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1204,
							"sourceUnit": 1282,
							"src": "131:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 691,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1281,
										"src": "139:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 694,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1204,
							"sourceUnit": 1354,
							"src": "168:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 693,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1353,
										"src": "176:14:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 696,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1204,
							"sourceUnit": 1384,
							"src": "232:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 695,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1383,
										"src": "240:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 698,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1204,
							"sourceUnit": 516,
							"src": "281:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 697,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 700,
										"name": "Context",
										"nameLocations": [
											"1133:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1383,
										"src": "1133:7:5"
									},
									"id": 701,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:5"
								},
								{
									"baseName": {
										"id": 702,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1281,
										"src": "1142:6:5"
									},
									"id": 703,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:5"
								},
								{
									"baseName": {
										"id": 704,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1353,
										"src": "1150:14:5"
									},
									"id": 705,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:5"
								},
								{
									"baseName": {
										"id": 706,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1166:12:5"
									},
									"id": 707,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:5"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 699,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:5",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1203,
							"linearizedBaseContracts": [
								1203,
								420,
								1353,
								1281,
								1383
							],
							"name": "ERC20",
							"nameLocation": "1124:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 711,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1203,
									"src": "1185:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 710,
										"keyName": "account",
										"keyNameLocation": "1201:7:5",
										"keyType": {
											"id": 708,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 709,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 717,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1203,
									"src": "1245:83:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 716,
										"keyName": "account",
										"keyNameLocation": "1261:7:5",
										"keyType": {
											"id": 712,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 715,
											"keyName": "spender",
											"keyNameLocation": "1288:7:5",
											"keyType": {
												"id": 713,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 714,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 719,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1203,
									"src": "1335:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 718,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 721,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1203,
									"src": "1370:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 720,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 723,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1203,
									"src": "1396:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 722,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "1657:57:5",
										"statements": [
											{
												"expression": {
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 731,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "1667:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 732,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "1675:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:5"
											},
											{
												"expression": {
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 735,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "1690:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 736,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "1700:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:5"
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:5",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 740,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1613:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 725,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1634:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 727,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:5"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:5"
									},
									"scope": 1203,
									"src": "1601:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1340
									],
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "1839:29:5",
										"statements": [
											{
												"expression": {
													"id": 746,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 721,
													"src": "1856:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 745,
												"id": 747,
												"nodeType": "Return",
												"src": "1849:12:5"
											}
										]
									},
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:5"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1824:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 743,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:5"
									},
									"scope": 1203,
									"src": "1779:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1346
									],
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "2043:31:5",
										"statements": [
											{
												"expression": {
													"id": 755,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 723,
													"src": "2060:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 754,
												"id": 756,
												"nodeType": "Return",
												"src": "2053:14:5"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:5",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:5"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "2028:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 752,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:5"
									},
									"scope": 1203,
									"src": "1981:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1352
									],
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "2763:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 763,
												"id": 765,
												"nodeType": "Return",
												"src": "2773:9:5"
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:5",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:5"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2756:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 761,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:5"
									},
									"scope": 1203,
									"src": "2707:82:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1230
									],
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "2910:36:5",
										"statements": [
											{
												"expression": {
													"id": 773,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 719,
													"src": "2927:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 772,
												"id": 774,
												"nodeType": "Return",
												"src": "2920:19:5"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:5",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:5"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2901:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:5"
									},
									"scope": 1203,
									"src": "2849:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1238
									],
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "3078:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 784,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "3095:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 786,
													"indexExpression": {
														"id": 785,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "3105:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 783,
												"id": 787,
												"nodeType": "Return",
												"src": "3088:25:5"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:5",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "3023:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:5"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "3069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:5"
									},
									"scope": 1203,
									"src": "3004:116:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1248
									],
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "3390:103:5",
										"statements": [
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 812,
														"src": "3400:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 799,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 803,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 801,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "3416:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 805,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "3448:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "3455:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "3459:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 804,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "3438:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 798,
												"id": 811,
												"nodeType": "Return",
												"src": "3475:11:5"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:5",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "3333:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "3345:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:5"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "3384:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 796,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:5"
									},
									"scope": 1203,
									"src": "3315:178:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1258
									],
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "3640:51:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 823,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "3657:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 825,
														"indexExpression": {
															"id": 824,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "3669:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 827,
													"indexExpression": {
														"id": 826,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "3676:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 822,
												"id": 828,
												"nodeType": "Return",
												"src": "3650:34:5"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:5",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "3570:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "3585:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:5"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "3631:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:5"
									},
									"scope": 1203,
									"src": "3551:140:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1268
									],
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "4077:107:5",
										"statements": [
											{
												"assignments": [
													841
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "4087:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 840,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 844,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 842,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "4103:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 846,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "4134:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "4141:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "4150:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 845,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1094,
															1154
														],
														"referencedDeclaration": 1094,
														"src": "4125:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 839,
												"id": 852,
												"nodeType": "Return",
												"src": "4166:11:5"
											}
										]
									},
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:5",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "4015:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "4032:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:5"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "4071:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 837,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:5"
									},
									"scope": 1203,
									"src": "3998:186:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1280
									],
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "4869:151:5",
										"statements": [
											{
												"assignments": [
													867
												],
												"declarations": [
													{
														"constant": false,
														"id": 867,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "4879:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 866,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 870,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 868,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "4897:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 872,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "4935:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 873,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "4941:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 874,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "4950:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 871,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "4919:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 878,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "4976:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 879,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "4982:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 880,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "4986:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 877,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "4966:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 865,
												"id": 884,
												"nodeType": "Return",
												"src": "5002:11:5"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:5",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "4798:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "4812:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "4824:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:5"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "4863:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:5"
									},
									"scope": 1203,
									"src": "4776:244:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "5462:231:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 896,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "5476:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 897,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 910,
												"nodeType": "IfStatement",
												"src": "5472:86:5",
												"trueBody": {
													"id": 909,
													"nodeType": "Block",
													"src": "5496:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 905,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 903,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 902,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5517:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 908,
															"nodeType": "RevertStatement",
															"src": "5510:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 911,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "5571:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 912,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 925,
												"nodeType": "IfStatement",
												"src": "5567:86:5",
												"trueBody": {
													"id": 924,
													"nodeType": "Block",
													"src": "5589:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 920,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 918,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 917,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5610:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 923,
															"nodeType": "RevertStatement",
															"src": "5603:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 927,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "5670:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 928,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "5676:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 929,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "5680:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 926,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "5662:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 931,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:5"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5412:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5426:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "5438:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:5"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:5"
									},
									"scope": 1203,
									"src": "5393:300:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "6083:1032:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 943,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "6097:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 944,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 980,
													"nodeType": "Block",
													"src": "6271:362:5",
													"statements": [
														{
															"assignments": [
																955
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 955,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 980,
																	"src": "6285:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 954,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 959,
															"initialValue": {
																"baseExpression": {
																	"id": 956,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "6307:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 958,
																"indexExpression": {
																	"id": 957,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "6317:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 960,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "6340:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 961,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "6354:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 970,
															"nodeType": "IfStatement",
															"src": "6336:115:5",
															"trueBody": {
																"id": 969,
																"nodeType": "Block",
																"src": "6361:90:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 964,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 936,
																					"src": "6411:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 965,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 955,
																					"src": "6417:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 966,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 940,
																					"src": "6430:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 963,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6386:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 968,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:5"
																	}
																]
															}
														},
														{
															"id": 979,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:5",
															"statements": [
																{
																	"expression": {
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 971,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 711,
																				"src": "6571:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 973,
																			"indexExpression": {
																				"id": 972,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 936,
																				"src": "6581:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 974,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 955,
																				"src": "6589:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 975,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 940,
																				"src": "6603:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 978,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:5"
																}
															]
														}
													]
												},
												"id": 981,
												"nodeType": "IfStatement",
												"src": "6093:540:5",
												"trueBody": {
													"id": 953,
													"nodeType": "Block",
													"src": "6117:148:5",
													"statements": [
														{
															"expression": {
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 949,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "6233:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 950,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "6249:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 952,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 982,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "6647:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 983,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1001,
													"nodeType": "Block",
													"src": "6862:206:5",
													"statements": [
														{
															"id": 1000,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:5",
															"statements": [
																{
																	"expression": {
																		"id": 998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 994,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 711,
																				"src": "7021:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 996,
																			"indexExpression": {
																				"id": 995,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 938,
																				"src": "7031:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 997,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 940,
																			"src": "7038:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 999,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:5"
																}
															]
														}
													]
												},
												"id": 1002,
												"nodeType": "IfStatement",
												"src": "6643:425:5",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "6665:191:5",
													"statements": [
														{
															"id": 992,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:5",
															"statements": [
																{
																	"expression": {
																		"id": 990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 988,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "6810:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 989,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 940,
																			"src": "6826:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 991,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:5"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1004,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "7092:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1005,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "7098:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1006,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "7102:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1003,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "7083:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "EmitStatement",
												"src": "7078:30:5"
											}
										]
									},
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:5",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "6025:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "6039:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "6051:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:5"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:5"
									},
									"scope": 1203,
									"src": "6008:1107:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "7514:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1018,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "7528:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1019,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1032,
												"nodeType": "IfStatement",
												"src": "7524:91:5",
												"trueBody": {
													"id": 1031,
													"nodeType": "Block",
													"src": "7551:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1027,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1025,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1024,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7572:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1030,
															"nodeType": "RevertStatement",
															"src": "7565:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1034,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1038,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "7644:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1039,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "7653:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1033,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "7624:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:5"
											}
										]
									},
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:5",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "7473:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "7490:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:5"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:5"
									},
									"scope": 1203,
									"src": "7458:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "8040:150:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1051,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "8054:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1052,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1065,
												"nodeType": "IfStatement",
												"src": "8050:89:5",
												"trueBody": {
													"id": 1064,
													"nodeType": "Block",
													"src": "8077:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1060,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1058,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1057,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8098:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1063,
															"nodeType": "RevertStatement",
															"src": "8091:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1067,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "8156:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1068,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "8177:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1066,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "8148:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:5"
											}
										]
									},
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "7999:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "8016:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:5"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:5"
									},
									"scope": 1203,
									"src": "7984:206:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "8800:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1087,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "8819:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1088,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "8826:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1089,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "8835:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1086,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1094,
															1154
														],
														"referencedDeclaration": 1154,
														"src": "8810:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:5"
											}
										]
									},
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:5",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "8744:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "8759:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "8776:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:5"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:5"
									},
									"scope": 1203,
									"src": "8726:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "9799:334:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1106,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "9813:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1120,
												"nodeType": "IfStatement",
												"src": "9809:89:5",
												"trueBody": {
													"id": 1119,
													"nodeType": "Block",
													"src": "9834:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1112,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "9855:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1118,
															"nodeType": "RevertStatement",
															"src": "9848:39:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1121,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "9911:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1122,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"nodeType": "IfStatement",
												"src": "9907:90:5",
												"trueBody": {
													"id": 1134,
													"nodeType": "Block",
													"src": "9934:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1128,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1127,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "9955:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1133,
															"nodeType": "RevertStatement",
															"src": "9948:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1136,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "10006:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1139,
															"indexExpression": {
																"id": 1137,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1097,
																"src": "10018:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1140,
														"indexExpression": {
															"id": 1138,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "10025:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1141,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "10036:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:5"
											},
											{
												"condition": {
													"id": 1144,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1103,
													"src": "10055:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1152,
												"nodeType": "IfStatement",
												"src": "10051:76:5",
												"trueBody": {
													"id": 1151,
													"nodeType": "Block",
													"src": "10066:61:5",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1146,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1097,
																		"src": "10094:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1147,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1099,
																		"src": "10101:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1148,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "10110:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1145,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "10085:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1150,
															"nodeType": "EmitStatement",
															"src": "10080:36:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:5",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "9719:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "9734:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "9751:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "9766:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1102,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:5"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:5"
									},
									"scope": 1203,
									"src": "9701:432:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "10504:388:5",
										"statements": [
											{
												"assignments": [
													1165
												],
												"declarations": [
													{
														"constant": false,
														"id": 1165,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 1201,
														"src": "10514:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1164,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1170,
												"initialValue": {
													"arguments": [
														{
															"id": 1167,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "10551:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1168,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "10558:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1166,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "10541:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1171,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "10580:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1173,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1172,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1200,
												"nodeType": "IfStatement",
												"src": "10576:310:5",
												"trueBody": {
													"id": 1199,
													"nodeType": "Block",
													"src": "10619:267:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1178,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "10637:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1179,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "10656:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1188,
															"nodeType": "IfStatement",
															"src": "10633:130:5",
															"trueBody": {
																"id": 1187,
																"nodeType": "Block",
																"src": "10663:100:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1182,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1159,
																					"src": "10715:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1183,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1165,
																					"src": "10724:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1184,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1161,
																					"src": "10742:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1181,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10688:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1186,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:5"
																	}
																]
															}
														},
														{
															"id": 1198,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1190,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1157,
																				"src": "10813:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1191,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1159,
																				"src": "10820:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1194,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1192,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1165,
																					"src": "10829:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1193,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1161,
																					"src": "10848:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1189,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1094,
																				1154
																			],
																			"referencedDeclaration": 1154,
																			"src": "10804:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1197,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:5"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:5",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "10440:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "10455:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "10472:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:5"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:5"
									},
									"scope": 1203,
									"src": "10415:477:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1204,
							"src": "1106:9788:5",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1215,
								1224
							]
						}
					],
					"src": "105:10790:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1281
						]
					},
					"id": 1282,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1205,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1206,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1281,
							"linearizedBaseContracts": [
								1281
							],
							"name": "IERC20",
							"nameLocation": "214:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1215,
									"name": "Transfer",
									"nameLocation": "396:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "405:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "427:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "447:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:6"
									},
									"src": "390:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1224,
									"name": "Approval",
									"nameLocation": "627:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "636:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "659:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:6"
									},
									"src": "621:78:6"
								},
								{
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:6"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "821:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:6"
									},
									"scope": 1281,
									"src": "775:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 1281,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1222:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1234:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:6"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1267:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:6"
									},
									"scope": 1281,
									"src": "1204:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1567:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1582:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:6"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "1622:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:6"
									},
									"scope": 1281,
									"src": "1548:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2326:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2343:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:6"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2376:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:6"
									},
									"scope": 1281,
									"src": "2309:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "2712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "2726:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "2738:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:6"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "2771:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:6"
									},
									"scope": 1281,
									"src": "2690:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1282,
							"src": "204:2575:6",
							"usedErrors": [],
							"usedEvents": [
								1215,
								1224
							]
						}
					],
					"src": "106:2674:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1383
						],
						"ERC20": [
							1203
						],
						"ERC20Burnable": [
							1327
						]
					},
					"id": 1328,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1283,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1328,
							"sourceUnit": 1204,
							"src": "150:35:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1284,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1203,
										"src": "158:5:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1328,
							"sourceUnit": 1384,
							"src": "186:51:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1286,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1383,
										"src": "194:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1289,
										"name": "Context",
										"nameLocations": [
											"483:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1383,
										"src": "483:7:7"
									},
									"id": 1290,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:7"
								},
								{
									"baseName": {
										"id": 1291,
										"name": "ERC20",
										"nameLocations": [
											"492:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1203,
										"src": "492:5:7"
									},
									"id": 1292,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:7"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1288,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:7",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 1327,
							"linearizedBaseContracts": [
								1327,
								1203,
								420,
								1353,
								1281,
								1383
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "662:43:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1299,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "678:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1301,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "692:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1298,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "672:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "672:26:7"
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:7",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "632:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:7"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:7"
									},
									"scope": 1327,
									"src": "618:87:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "1086:93:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1314,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "1112:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1315,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "1121:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1317,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "1135:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1313,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "1096:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1321,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "1157:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "1166:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1320,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "1151:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:7"
											}
										]
									},
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:7",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "1039:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "1056:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:7"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:7"
									},
									"scope": 1327,
									"src": "1021:158:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1328,
							"src": "448:733:7",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1215,
								1224
							]
						}
					],
					"src": "124:1058:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1281
						],
						"IERC20Metadata": [
							1353
						]
					},
					"id": 1354,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1329,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1354,
							"sourceUnit": 1282,
							"src": "151:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1330,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1281,
										"src": "159:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1333,
										"name": "IERC20",
										"nameLocations": [
											"306:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1281,
										"src": "306:6:8"
									},
									"id": 1334,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:8"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1332,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:8",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1353,
							"linearizedBaseContracts": [
								1353,
								1281
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:8"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "417:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1337,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:8"
									},
									"scope": 1353,
									"src": "378:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:8",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:8"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "540:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1343,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:8"
									},
									"scope": 1353,
									"src": "499:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:8",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:8"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "674:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1349,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:8"
									},
									"scope": 1353,
									"src": "631:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1354,
							"src": "278:405:8",
							"usedErrors": [],
							"usedEvents": [
								1215,
								1224
							]
						}
					],
					"src": "125:559:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1383
						]
					},
					"id": 1384,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1355,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1356,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1383,
							"linearizedBaseContracts": [
								1383
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1361,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1360,
												"id": 1363,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1383,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1370,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1369,
												"id": 1372,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1383,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1378,
												"id": 1380,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1383,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1384,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1407
						],
						"IERC165": [
							1419
						]
					},
					"id": 1408,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1385,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1387,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1408,
							"sourceUnit": 1420,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1386,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1419,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1389,
										"name": "IERC165",
										"nameLocations": [
											"688:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1419,
										"src": "688:7:10"
									},
									"id": 1390,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1388,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1407,
							"linearizedBaseContracts": [
								1407,
								1419
							],
							"name": "ERC165",
							"nameLocation": "678:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1418
									],
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "845:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1398,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "862:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1400,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "882:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1419_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1419_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1399,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1419",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1397,
												"id": 1404,
												"nodeType": "Return",
												"src": "855:47:10"
											}
										]
									},
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "790:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1392,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:10"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "839:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1395,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:10"
									},
									"scope": 1407,
									"src": "763:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1408,
							"src": "660:251:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1419
						]
					},
					"id": 1420,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1409,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1410,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:11",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1419,
							"linearizedBaseContracts": [
								1419
							],
							"name": "IERC165",
							"nameLocation": "432:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "818:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1412,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:11"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "861:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:11"
									},
									"scope": 1419,
									"src": "791:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1420,
							"src": "422:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:11"
				},
				"id": 11
			},
			"contracts/LGG.sol": {
				"ast": {
					"absolutePath": "contracts/LGG.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1383
						],
						"ERC165": [
							1407
						],
						"ERC20": [
							1203
						],
						"ERC20Burnable": [
							1327
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1281
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1353
						],
						"LGGToken": [
							1889
						],
						"Pausable": [
							623
						],
						"ReentrancyGuard": [
							688
						]
					},
					"id": 1890,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1421,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1422,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1890,
							"sourceUnit": 1204,
							"src": "61:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1423,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1890,
							"sourceUnit": 1328,
							"src": "118:74:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1424,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1890,
							"sourceUnit": 296,
							"src": "194:58:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1425,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1890,
							"sourceUnit": 624,
							"src": "254:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1426,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1890,
							"sourceUnit": 689,
							"src": "311:62:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1427,
										"name": "ERC20",
										"nameLocations": [
											"398:5:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1203,
										"src": "398:5:12"
									},
									"id": 1428,
									"nodeType": "InheritanceSpecifier",
									"src": "398:5:12"
								},
								{
									"baseName": {
										"id": 1429,
										"name": "ERC20Burnable",
										"nameLocations": [
											"405:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1327,
										"src": "405:13:12"
									},
									"id": 1430,
									"nodeType": "InheritanceSpecifier",
									"src": "405:13:12"
								},
								{
									"baseName": {
										"id": 1431,
										"name": "AccessControl",
										"nameLocations": [
											"420:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "420:13:12"
									},
									"id": 1432,
									"nodeType": "InheritanceSpecifier",
									"src": "420:13:12"
								},
								{
									"baseName": {
										"id": 1433,
										"name": "Pausable",
										"nameLocations": [
											"435:8:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 623,
										"src": "435:8:12"
									},
									"id": 1434,
									"nodeType": "InheritanceSpecifier",
									"src": "435:8:12"
								},
								{
									"baseName": {
										"id": 1435,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"445:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 688,
										"src": "445:15:12"
									},
									"id": 1436,
									"nodeType": "InheritanceSpecifier",
									"src": "445:15:12"
								}
							],
							"canonicalName": "LGGToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1889,
							"linearizedBaseContracts": [
								1889,
								688,
								623,
								295,
								1407,
								1419,
								378,
								1327,
								1203,
								420,
								1353,
								1281,
								1383
							],
							"name": "LGGToken",
							"nameLocation": "386:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 1441,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "492:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1889,
									"src": "468:60:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1437,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "468:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 1439,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "515:12:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 1438,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "505:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1440,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "505:23:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1448,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "584:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 1889,
									"src": "559:62:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1442,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "559:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 1447,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3030305f3030305f303030",
											"id": 1443,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "599:13:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1446,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1444,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "615:2:12",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1445,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "619:2:12",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "615:6:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "599:22:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "6b67c4df",
									"id": 1451,
									"mutability": "mutable",
									"name": "marketingFee",
									"nameLocation": "695:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 1889,
									"src": "680:31:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1449,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "680:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1450,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "710:1:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "98118cb4",
									"id": 1454,
									"mutability": "mutable",
									"name": "liquidityFee",
									"nameLocation": "739:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 1889,
									"src": "724:31:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1452,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "724:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 1453,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "754:1:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "75f0a874",
									"id": 1456,
									"mutability": "mutable",
									"name": "marketingWallet",
									"nameLocation": "783:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 1889,
									"src": "768:30:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1455,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "768:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8c8ebe4",
									"id": 1458,
									"mutability": "mutable",
									"name": "maxTransactionAmount",
									"nameLocation": "849:20:12",
									"nodeType": "VariableDeclaration",
									"scope": 1889,
									"src": "834:35:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1457,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "834:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f3fa860",
									"id": 1460,
									"mutability": "mutable",
									"name": "maxWalletSize",
									"nameLocation": "891:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 1889,
									"src": "876:28:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1459,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "876:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5342acb4",
									"id": 1464,
									"mutability": "mutable",
									"name": "isExcludedFromFee",
									"nameLocation": "966:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 1889,
									"src": "934:49:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1463,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1461,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "942:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "934:24:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1462,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "953:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fe575a87",
									"id": 1468,
									"mutability": "mutable",
									"name": "isBlacklisted",
									"nameLocation": "1022:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 1889,
									"src": "990:45:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1467,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1465,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "998:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "990:24:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1466,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1009:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "bf86feedee5b30c30a8243bd21deebb704d141478d39b1be04fe5ee739f214e7",
									"id": 1472,
									"name": "MarketingWalletUpdated",
									"nameLocation": "1069:22:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"indexed": false,
												"mutability": "mutable",
												"name": "newWallet",
												"nameLocation": "1100:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "1092:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1091:19:12"
									},
									"src": "1063:48:12"
								},
								{
									"anonymous": false,
									"eventSelector": "5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a1",
									"id": 1478,
									"name": "FeesUpdated",
									"nameLocation": "1123:11:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"indexed": false,
												"mutability": "mutable",
												"name": "marketingFee",
												"nameLocation": "1143:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "1135:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1135:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityFee",
												"nameLocation": "1165:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "1157:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1134:44:12"
									},
									"src": "1117:62:12"
								},
								{
									"anonymous": false,
									"eventSelector": "6a12b3df6cba4203bd7fd06b816789f87de8c594299aed5717ae070fac781bac",
									"id": 1484,
									"name": "BlacklistUpdated",
									"nameLocation": "1191:16:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1224:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "1208:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1208:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"indexed": false,
												"mutability": "mutable",
												"name": "isBlacklisted",
												"nameLocation": "1238:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "1233:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1233:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1207:45:12"
									},
									"src": "1185:68:12"
								},
								{
									"anonymous": false,
									"eventSelector": "b6cf947475d47632612a3265c7bc83f5cfed7429546220bfb088c3634f91c229",
									"id": 1490,
									"name": "MaxLimitsUpdated",
									"nameLocation": "1265:16:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxTx",
												"nameLocation": "1290:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "1282:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxWallet",
												"nameLocation": "1305:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "1297:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1281:34:12"
									},
									"src": "1259:57:12"
								},
								{
									"body": {
										"id": 1565,
										"nodeType": "Block",
										"src": "1387:735:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1500,
																"name": "_marketingWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "1406:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1434:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1426:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1501,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1426:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1426:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1406:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61726b6574696e672077616c6c65742063616e6e6f74206265207a65726f",
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1438:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a8df1003b4f1898b3f4e673d2d141aba9f3cf0ab33f770d9445773bff9bb0c84",
																"typeString": "literal_string \"Marketing wallet cannot be zero\""
															},
															"value": "Marketing wallet cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a8df1003b4f1898b3f4e673d2d141aba9f3cf0ab33f770d9445773bff9bb0c84",
																"typeString": "literal_string \"Marketing wallet cannot be zero\""
															}
														],
														"id": 1499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1398:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1398:74:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1508,
												"nodeType": "ExpressionStatement",
												"src": "1398:74:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1510,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1535:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1511,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1555:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1559:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1555:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1509,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1524:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1524:42:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1514,
												"nodeType": "ExpressionStatement",
												"src": "1524:42:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1516,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "1588:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1517,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1600:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1604:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1600:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1515,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1577:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1577:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1520,
												"nodeType": "ExpressionStatement",
												"src": "1577:34:12"
											},
											{
												"expression": {
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1521,
														"name": "marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "1670:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1522,
														"name": "_marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "1688:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1670:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1524,
												"nodeType": "ExpressionStatement",
												"src": "1670:34:12"
											},
											{
												"expression": {
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1525,
														"name": "maxTransactionAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "1715:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1526,
															"name": "TOTAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "1738:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1753:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "1738:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1715:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1530,
												"nodeType": "ExpressionStatement",
												"src": "1715:41:12"
											},
											{
												"expression": {
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1531,
														"name": "maxWalletSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "1773:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1532,
															"name": "TOTAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "1789:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3530",
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1804:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50_by_1",
																"typeString": "int_const 50"
															},
															"value": "50"
														},
														"src": "1789:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1773:33:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "1773:33:12"
											},
											{
												"expression": {
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1537,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "1886:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1540,
														"indexExpression": {
															"expression": {
																"id": 1538,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1904:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1908:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1904:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1886:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1918:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1886:36:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1543,
												"nodeType": "ExpressionStatement",
												"src": "1886:36:12"
											},
											{
												"expression": {
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1544,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "1933:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1549,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1547,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1959:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LGGToken_$1889",
																		"typeString": "contract LGGToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LGGToken_$1889",
																		"typeString": "contract LGGToken"
																	}
																],
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1951:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1545,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1951:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1951:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1933:32:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1968:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1933:39:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "1933:39:12"
											},
											{
												"expression": {
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1553,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "1983:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1555,
														"indexExpression": {
															"id": 1554,
															"name": "_marketingWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "2001:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1983:35:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2021:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1983:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "1983:42:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1560,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2089:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2093:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2089:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1562,
															"name": "TOTAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "2101:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1559,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "2083:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2083:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1564,
												"nodeType": "ExpressionStatement",
												"src": "2083:31:12"
											}
										]
									},
									"id": 1566,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4c756749742e636f",
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1368:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_48eff06058b3a68a327ca43e833bdda075dd83fc66b752c70e51927211e360be",
														"typeString": "literal_string \"LugIt.co\""
													},
													"value": "LugIt.co"
												},
												{
													"hexValue": "4c4747",
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1380:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8b3f00f5df7b4265805d5349c30950a64f96988a8882d1d251b7650c80aec730",
														"typeString": "literal_string \"LGG\""
													},
													"value": "LGG"
												}
											],
											"id": 1497,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1494,
												"name": "ERC20",
												"nameLocations": [
													"1362:5:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1203,
												"src": "1362:5:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1362:24:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "_marketingWallet",
												"nameLocation": "1344:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1336:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1335:26:12"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1387:0:12"
									},
									"scope": 1889,
									"src": "1324:798:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1010
									],
									"body": {
										"id": 1711,
										"nodeType": "Block",
										"src": "2267:1105:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1578,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "2319:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2335:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2327:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1579,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2327:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2327:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2319:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1584,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "2341:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2355:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2347:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1585,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2347:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2347:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2341:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2319:38:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1601,
												"nodeType": "IfStatement",
												"src": "2315:123:12",
												"trueBody": {
													"id": 1600,
													"nodeType": "Block",
													"src": "2359:79:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1594,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1568,
																		"src": "2388:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1595,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1570,
																		"src": "2394:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1596,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1572,
																		"src": "2398:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1591,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2374:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_LGGToken_$1889_$",
																			"typeString": "type(contract super LGGToken)"
																		}
																	},
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2380:7:12",
																	"memberName": "_update",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1010,
																	"src": "2374:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2374:31:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1598,
															"nodeType": "ExpressionStatement",
															"src": "2374:31:12"
														},
														{
															"functionReturnParameters": 1577,
															"id": 1599,
															"nodeType": "Return",
															"src": "2420:7:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2466:20:12",
																"subExpression": {
																	"baseExpression": {
																		"id": 1603,
																		"name": "isBlacklisted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1468,
																		"src": "2467:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1605,
																	"indexExpression": {
																		"id": 1604,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1568,
																		"src": "2481:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2467:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2490:18:12",
																"subExpression": {
																	"baseExpression": {
																		"id": 1607,
																		"name": "isBlacklisted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1468,
																		"src": "2491:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1609,
																	"indexExpression": {
																		"id": 1608,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1570,
																		"src": "2505:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2491:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2466:42:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320697320626c61636b6c6973746564",
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2510:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
																"typeString": "literal_string \"Address is blacklisted\""
															},
															"value": "Address is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
																"typeString": "literal_string \"Address is blacklisted\""
															}
														],
														"id": 1602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2458:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2458:77:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1614,
												"nodeType": "ExpressionStatement",
												"src": "2458:77:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "2560:24:12",
														"subExpression": {
															"baseExpression": {
																"id": 1615,
																"name": "isExcludedFromFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "2561:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1617,
															"indexExpression": {
																"id": 1616,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1568,
																"src": "2579:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2561:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "2588:22:12",
														"subExpression": {
															"baseExpression": {
																"id": 1619,
																"name": "isExcludedFromFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "2589:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1621,
															"indexExpression": {
																"id": 1620,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "2607:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2589:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2560:50:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1702,
												"nodeType": "IfStatement",
												"src": "2556:757:12",
												"trueBody": {
													"id": 1701,
													"nodeType": "Block",
													"src": "2612:701:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1625,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1572,
																			"src": "2635:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1626,
																			"name": "maxTransactionAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "2645:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2635:30:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45786365656473206d6178207472616e73616374696f6e20616d6f756e74",
																		"id": 1628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2667:32:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1f55ae6815dfdfb35faf31c9e38c52bf64d3d72c827fc76be01fb5a5548d4d4d",
																			"typeString": "literal_string \"Exceeds max transaction amount\""
																		},
																		"value": "Exceeds max transaction amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1f55ae6815dfdfb35faf31c9e38c52bf64d3d72c827fc76be01fb5a5548d4d4d",
																			"typeString": "literal_string \"Exceeds max transaction amount\""
																		}
																	],
																	"id": 1624,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2627:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2627:73:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1630,
															"nodeType": "ExpressionStatement",
															"src": "2627:73:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1633,
																						"name": "to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1570,
																						"src": "2733:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1632,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 789,
																					"src": "2723:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view returns (uint256)"
																					}
																				},
																				"id": 1634,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2723:13:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1635,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1572,
																				"src": "2739:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2723:22:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1637,
																			"name": "maxWalletSize",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1460,
																			"src": "2749:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2723:39:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45786365656473206d61782077616c6c65742073697a65",
																		"id": 1639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2764:25:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_eb7ec3ab8cf4e54e1949e272237f629c67bd685fc80d9d02b42820f52828d272",
																			"typeString": "literal_string \"Exceeds max wallet size\""
																		},
																		"value": "Exceeds max wallet size"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_eb7ec3ab8cf4e54e1949e272237f629c67bd685fc80d9d02b42820f52828d272",
																			"typeString": "literal_string \"Exceeds max wallet size\""
																		}
																	],
																	"id": 1631,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2715:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2715:75:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1641,
															"nodeType": "ExpressionStatement",
															"src": "2715:75:12"
														},
														{
															"assignments": [
																1643
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1643,
																	"mutability": "mutable",
																	"name": "marketingTokens",
																	"nameLocation": "2827:15:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1701,
																	"src": "2819:23:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1642,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2819:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1650,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1644,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1572,
																				"src": "2846:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1645,
																				"name": "marketingFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1451,
																				"src": "2855:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2846:21:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1647,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2845:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2871:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2845:29:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2819:55:12"
														},
														{
															"assignments": [
																1652
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1652,
																	"mutability": "mutable",
																	"name": "liquidityTokens",
																	"nameLocation": "2897:15:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1701,
																	"src": "2889:23:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1651,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2889:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1659,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1653,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1572,
																				"src": "2916:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1654,
																				"name": "liquidityFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1454,
																				"src": "2925:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2916:21:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1656,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2915:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2941:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2915:29:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2889:55:12"
														},
														{
															"assignments": [
																1661
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1661,
																	"mutability": "mutable",
																	"name": "totalFee",
																	"nameLocation": "2967:8:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1701,
																	"src": "2959:16:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1660,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2959:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1665,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1662,
																	"name": "marketingTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1643,
																	"src": "2978:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1663,
																	"name": "liquidityTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1652,
																	"src": "2996:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2978:33:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2959:52:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1666,
																	"name": "totalFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1661,
																	"src": "3044:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3055:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3044:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1700,
															"nodeType": "IfStatement",
															"src": "3040:262:12",
															"trueBody": {
																"id": 1699,
																"nodeType": "Block",
																"src": "3058:244:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1672,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1568,
																					"src": "3091:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1673,
																					"name": "marketingWallet",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1456,
																					"src": "3097:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1674,
																					"name": "marketingTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1643,
																					"src": "3114:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1669,
																					"name": "super",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967271,
																					"src": "3077:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_super$_LGGToken_$1889_$",
																						"typeString": "type(contract super LGGToken)"
																					}
																				},
																				"id": 1671,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3083:7:12",
																				"memberName": "_update",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1010,
																				"src": "3077:13:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3077:53:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1676,
																		"nodeType": "ExpressionStatement",
																		"src": "3077:53:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1680,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1568,
																					"src": "3163:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 1683,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "3177:4:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_LGGToken_$1889",
																								"typeString": "contract LGGToken"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_LGGToken_$1889",
																								"typeString": "contract LGGToken"
																							}
																						],
																						"id": 1682,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3169:7:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1681,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "3169:7:12",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1684,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3169:13:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1685,
																					"name": "liquidityTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1652,
																					"src": "3184:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1677,
																					"name": "super",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967271,
																					"src": "3149:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_super$_LGGToken_$1889_$",
																						"typeString": "type(contract super LGGToken)"
																					}
																				},
																				"id": 1679,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3155:7:12",
																				"memberName": "_update",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1010,
																				"src": "3149:13:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3149:51:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1687,
																		"nodeType": "ExpressionStatement",
																		"src": "3149:51:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1691,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1568,
																					"src": "3233:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1692,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1570,
																					"src": "3239:2:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1695,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1693,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1572,
																						"src": "3243:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1694,
																						"name": "totalFee",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1661,
																						"src": "3252:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3243:17:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1688,
																					"name": "super",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967271,
																					"src": "3219:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_super$_LGGToken_$1889_$",
																						"typeString": "type(contract super LGGToken)"
																					}
																				},
																				"id": 1690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3225:7:12",
																				"memberName": "_update",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1010,
																				"src": "3219:13:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3219:42:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1697,
																		"nodeType": "ExpressionStatement",
																		"src": "3219:42:12"
																	},
																	{
																		"functionReturnParameters": 1577,
																		"id": 1698,
																		"nodeType": "Return",
																		"src": "3280:7:12"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1706,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "3347:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1707,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "3353:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1708,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "3357:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1703,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3333:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_LGGToken_$1889_$",
																"typeString": "type(contract super LGGToken)"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3339:7:12",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1010,
														"src": "3333:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3333:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "3333:31:12"
											}
										]
									},
									"id": 1712,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1576,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1575,
												"name": "whenNotPaused",
												"nameLocations": [
													"2253:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "2253:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2253:13:12"
										}
									],
									"name": "_update",
									"nameLocation": "2143:7:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1574,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2244:8:12"
									},
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2169:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "2161:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2192:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "2184:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2184:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2213:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "2205:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2205:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2150:76:12"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2267:0:12"
									},
									"scope": 1889,
									"src": "2134:1238:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "3492:194:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1721,
																"name": "_marketingWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1714,
																"src": "3511:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3539:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3531:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1722,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3531:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3531:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3511:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61726b6574696e672077616c6c65742063616e6e6f74206265207a65726f",
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3543:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a8df1003b4f1898b3f4e673d2d141aba9f3cf0ab33f770d9445773bff9bb0c84",
																"typeString": "literal_string \"Marketing wallet cannot be zero\""
															},
															"value": "Marketing wallet cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a8df1003b4f1898b3f4e673d2d141aba9f3cf0ab33f770d9445773bff9bb0c84",
																"typeString": "literal_string \"Marketing wallet cannot be zero\""
															}
														],
														"id": 1720,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3503:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3503:74:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1729,
												"nodeType": "ExpressionStatement",
												"src": "3503:74:12"
											},
											{
												"expression": {
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1730,
														"name": "marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "3588:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1731,
														"name": "_marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "3606:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3588:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1733,
												"nodeType": "ExpressionStatement",
												"src": "3588:34:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1735,
															"name": "_marketingWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "3661:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1734,
														"name": "MarketingWalletUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1472,
														"src": "3638:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3638:40:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1737,
												"nodeType": "EmitStatement",
												"src": "3633:45:12"
											}
										]
									},
									"functionSelector": "5d098b38",
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1717,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1441,
													"src": "3480:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1718,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1716,
												"name": "onlyRole",
												"nameLocations": [
													"3471:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "3471:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3471:20:12"
										}
									],
									"name": "setMarketingWallet",
									"nameLocation": "3417:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "_marketingWallet",
												"nameLocation": "3444:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "3436:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3436:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:26:12"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3492:0:12"
									},
									"scope": 1889,
									"src": "3408:278:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1771,
										"nodeType": "Block",
										"src": "3791:230:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1750,
																	"name": "_marketingFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1741,
																	"src": "3810:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1751,
																	"name": "_liquidityFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1743,
																	"src": "3826:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3810:29:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130",
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3843:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "3810:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f74616c20666565732063616e6e6f742065786365656420313025",
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3847:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ad570219bc04ec8fe93d528087e9ef29c51349a8200323b11e6294bbeb0858a",
																"typeString": "literal_string \"Total fees cannot exceed 10%\""
															},
															"value": "Total fees cannot exceed 10%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ad570219bc04ec8fe93d528087e9ef29c51349a8200323b11e6294bbeb0858a",
																"typeString": "literal_string \"Total fees cannot exceed 10%\""
															}
														],
														"id": 1749,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3802:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3802:76:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1757,
												"nodeType": "ExpressionStatement",
												"src": "3802:76:12"
											},
											{
												"expression": {
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1758,
														"name": "marketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "3889:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1759,
														"name": "_marketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1741,
														"src": "3904:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3889:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1761,
												"nodeType": "ExpressionStatement",
												"src": "3889:28:12"
											},
											{
												"expression": {
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1762,
														"name": "liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "3928:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1763,
														"name": "_liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "3943:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3928:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1765,
												"nodeType": "ExpressionStatement",
												"src": "3928:28:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1767,
															"name": "_marketingFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "3984:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1768,
															"name": "_liquidityFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "3999:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1766,
														"name": "FeesUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "3972:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3972:41:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1770,
												"nodeType": "EmitStatement",
												"src": "3967:46:12"
											}
										]
									},
									"functionSelector": "0b78f9c0",
									"id": 1772,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1746,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1441,
													"src": "3779:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1747,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1745,
												"name": "onlyRole",
												"nameLocations": [
													"3770:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "3770:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3770:20:12"
										}
									],
									"name": "setFees",
									"nameLocation": "3707:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "_marketingFee",
												"nameLocation": "3723:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "3715:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3715:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "_liquidityFee",
												"nameLocation": "3746:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "3738:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3714:46:12"
									},
									"returnParameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:12"
									},
									"scope": 1889,
									"src": "3698:323:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1813,
										"nodeType": "Block",
										"src": "4131:309:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1783,
																"name": "_maxTxAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1774,
																"src": "4150:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1784,
																	"name": "TOTAL_SUPPLY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1448,
																	"src": "4166:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 1785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4181:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "4166:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4150:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d617820545820746f6f206c6f77",
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4187:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c4e1d858486171900ca25120b06e2607ab69f3bcfcf4340f0c39befc3a4fa003",
																"typeString": "literal_string \"Max TX too low\""
															},
															"value": "Max TX too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c4e1d858486171900ca25120b06e2607ab69f3bcfcf4340f0c39befc3a4fa003",
																"typeString": "literal_string \"Max TX too low\""
															}
														],
														"id": 1782,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4142:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4142:62:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1790,
												"nodeType": "ExpressionStatement",
												"src": "4142:62:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1792,
																"name": "_maxWalletSize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1776,
																"src": "4223:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1793,
																	"name": "TOTAL_SUPPLY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1448,
																	"src": "4241:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4256:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "4241:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4223:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61782077616c6c657420746f6f206c6f77",
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4262:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2ca3153f92d285b48e1a6bebdcbc4d3ee7498a2363249a201db98c3f869548dc",
																"typeString": "literal_string \"Max wallet too low\""
															},
															"value": "Max wallet too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2ca3153f92d285b48e1a6bebdcbc4d3ee7498a2363249a201db98c3f869548dc",
																"typeString": "literal_string \"Max wallet too low\""
															}
														],
														"id": 1791,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4215:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1799,
												"nodeType": "ExpressionStatement",
												"src": "4215:68:12"
											},
											{
												"expression": {
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1800,
														"name": "maxTransactionAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "4294:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1801,
														"name": "_maxTxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1774,
														"src": "4317:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4294:35:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1803,
												"nodeType": "ExpressionStatement",
												"src": "4294:35:12"
											},
											{
												"expression": {
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1804,
														"name": "maxWalletSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "4340:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1805,
														"name": "_maxWalletSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1776,
														"src": "4356:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4340:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1807,
												"nodeType": "ExpressionStatement",
												"src": "4340:30:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1809,
															"name": "_maxTxAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "4403:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1810,
															"name": "_maxWalletSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "4417:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1808,
														"name": "MaxLimitsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "4386:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4386:46:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1812,
												"nodeType": "EmitStatement",
												"src": "4381:51:12"
											}
										]
									},
									"functionSelector": "9d913ef5",
									"id": 1814,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1779,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1441,
													"src": "4119:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1780,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1778,
												"name": "onlyRole",
												"nameLocations": [
													"4110:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4110:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4110:20:12"
										}
									],
									"name": "setMaxLimits",
									"nameLocation": "4042:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "_maxTxAmount",
												"nameLocation": "4063:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "4055:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4055:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "_maxWalletSize",
												"nameLocation": "4085:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "4077:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4077:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4054:46:12"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4131:0:12"
									},
									"scope": 1889,
									"src": "4033:407:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1835,
										"nodeType": "Block",
										"src": "4568:109:12",
										"statements": [
											{
												"expression": {
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1824,
															"name": "isBlacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "4579:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1826,
														"indexExpression": {
															"id": 1825,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "4593:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4579:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1827,
														"name": "blacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1818,
														"src": "4604:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4579:36:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1829,
												"nodeType": "ExpressionStatement",
												"src": "4579:36:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1831,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "4648:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1832,
															"name": "blacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1818,
															"src": "4657:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1830,
														"name": "BlacklistUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1484,
														"src": "4631:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4631:38:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1834,
												"nodeType": "EmitStatement",
												"src": "4626:43:12"
											}
										]
									},
									"functionSelector": "153b0d1e",
									"id": 1836,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1821,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1441,
													"src": "4556:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1822,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1820,
												"name": "onlyRole",
												"nameLocations": [
													"4547:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4547:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4547:20:12"
										}
									],
									"name": "setBlacklist",
									"nameLocation": "4490:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4511:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "4503:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4503:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "blacklisted",
												"nameLocation": "4525:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "4520:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4520:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4502:35:12"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4568:0:12"
									},
									"scope": 1889,
									"src": "4481:196:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1852,
										"nodeType": "Block",
										"src": "4809:56:12",
										"statements": [
											{
												"expression": {
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1846,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "4820:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1848,
														"indexExpression": {
															"id": 1847,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1838,
															"src": "4838:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4820:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1849,
														"name": "excluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1840,
														"src": "4849:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4820:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1851,
												"nodeType": "ExpressionStatement",
												"src": "4820:37:12"
											}
										]
									},
									"functionSelector": "30b94cd5",
									"id": 1853,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1843,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1441,
													"src": "4797:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1844,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1842,
												"name": "onlyRole",
												"nameLocations": [
													"4788:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4788:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4788:20:12"
										}
									],
									"name": "setFeeExclusion",
									"nameLocation": "4731:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4755:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "4747:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4747:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "excluded",
												"nameLocation": "4769:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "4764:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1839,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4764:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4746:32:12"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4809:0:12"
									},
									"scope": 1889,
									"src": "4722:143:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1862,
										"nodeType": "Block",
										"src": "4952:27:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1859,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "4963:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4963:8:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1861,
												"nodeType": "ExpressionStatement",
												"src": "4963:8:12"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1863,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1856,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1441,
													"src": "4940:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1857,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1855,
												"name": "onlyRole",
												"nameLocations": [
													"4931:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4931:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4931:20:12"
										}
									],
									"name": "pause",
									"nameLocation": "4914:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4919:2:12"
									},
									"returnParameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4952:0:12"
									},
									"scope": 1889,
									"src": "4905:74:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1872,
										"nodeType": "Block",
										"src": "5040:29:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1869,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "5051:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5051:10:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1871,
												"nodeType": "ExpressionStatement",
												"src": "5051:10:12"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1873,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1866,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1441,
													"src": "5028:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1867,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1865,
												"name": "onlyRole",
												"nameLocations": [
													"5019:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "5019:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5019:20:12"
										}
									],
									"name": "unpause",
									"nameLocation": "5000:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5007:2:12"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5040:0:12"
									},
									"scope": 1889,
									"src": "4991:78:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										62
									],
									"body": {
										"id": 1887,
										"nodeType": "Block",
										"src": "5246:62:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1884,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1875,
															"src": "5288:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 1882,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5264:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_LGGToken_$1889_$",
																"typeString": "type(contract super LGGToken)"
															}
														},
														"id": 1883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5270:17:12",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 62,
														"src": "5264:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 1885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5264:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1881,
												"id": 1886,
												"nodeType": "Return",
												"src": "5257:43:12"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 1888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "5116:17:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1878,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1877,
												"name": "AccessControl",
												"nameLocations": [
													"5202:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 295,
												"src": "5202:13:12"
											}
										],
										"src": "5193:23:12"
									},
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "5141:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "5134:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1874,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5134:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5133:20:12"
									},
									"returnParameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "5235:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1879,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5235:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5234:6:12"
									},
									"scope": 1889,
									"src": "5107:201:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1890,
							"src": "377:4934:12",
							"usedErrors": [
								305,
								308,
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								317,
								326,
								335,
								526,
								531,
								1215,
								1224,
								1472,
								1478,
								1484,
								1490
							]
						}
					],
					"src": "33:5278:12"
				},
				"id": 12
			}
		}
	}
}